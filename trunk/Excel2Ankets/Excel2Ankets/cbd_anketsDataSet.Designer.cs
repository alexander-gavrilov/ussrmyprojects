//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Excel2Ankets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("cbd_anketsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class cbd_anketsDataSet : global::System.Data.DataSet {
        
        private bd_ipDataTable tablebd_ip;
        
        private bd_ip_tDataTable tablebd_ip_t;
        
        private bd_orgDataTable tablebd_org;
        
        private bd_org_tDataTable tablebd_org_t;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public cbd_anketsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected cbd_anketsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["bd_ip"] != null)) {
                    base.Tables.Add(new bd_ipDataTable(ds.Tables["bd_ip"]));
                }
                if ((ds.Tables["bd_ip_t"] != null)) {
                    base.Tables.Add(new bd_ip_tDataTable(ds.Tables["bd_ip_t"]));
                }
                if ((ds.Tables["bd_org"] != null)) {
                    base.Tables.Add(new bd_orgDataTable(ds.Tables["bd_org"]));
                }
                if ((ds.Tables["bd_org_t"] != null)) {
                    base.Tables.Add(new bd_org_tDataTable(ds.Tables["bd_org_t"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bd_ipDataTable bd_ip {
            get {
                return this.tablebd_ip;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bd_ip_tDataTable bd_ip_t {
            get {
                return this.tablebd_ip_t;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bd_orgDataTable bd_org {
            get {
                return this.tablebd_org;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bd_org_tDataTable bd_org_t {
            get {
                return this.tablebd_org_t;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            cbd_anketsDataSet cln = ((cbd_anketsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["bd_ip"] != null)) {
                    base.Tables.Add(new bd_ipDataTable(ds.Tables["bd_ip"]));
                }
                if ((ds.Tables["bd_ip_t"] != null)) {
                    base.Tables.Add(new bd_ip_tDataTable(ds.Tables["bd_ip_t"]));
                }
                if ((ds.Tables["bd_org"] != null)) {
                    base.Tables.Add(new bd_orgDataTable(ds.Tables["bd_org"]));
                }
                if ((ds.Tables["bd_org_t"] != null)) {
                    base.Tables.Add(new bd_org_tDataTable(ds.Tables["bd_org_t"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablebd_ip = ((bd_ipDataTable)(base.Tables["bd_ip"]));
            if ((initTable == true)) {
                if ((this.tablebd_ip != null)) {
                    this.tablebd_ip.InitVars();
                }
            }
            this.tablebd_ip_t = ((bd_ip_tDataTable)(base.Tables["bd_ip_t"]));
            if ((initTable == true)) {
                if ((this.tablebd_ip_t != null)) {
                    this.tablebd_ip_t.InitVars();
                }
            }
            this.tablebd_org = ((bd_orgDataTable)(base.Tables["bd_org"]));
            if ((initTable == true)) {
                if ((this.tablebd_org != null)) {
                    this.tablebd_org.InitVars();
                }
            }
            this.tablebd_org_t = ((bd_org_tDataTable)(base.Tables["bd_org_t"]));
            if ((initTable == true)) {
                if ((this.tablebd_org_t != null)) {
                    this.tablebd_org_t.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "cbd_anketsDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/cbd_anketsDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablebd_ip = new bd_ipDataTable();
            base.Tables.Add(this.tablebd_ip);
            this.tablebd_ip_t = new bd_ip_tDataTable();
            base.Tables.Add(this.tablebd_ip_t);
            this.tablebd_org = new bd_orgDataTable();
            base.Tables.Add(this.tablebd_org);
            this.tablebd_org_t = new bd_org_tDataTable();
            base.Tables.Add(this.tablebd_org_t);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebd_ip() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebd_ip_t() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebd_org() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebd_org_t() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            cbd_anketsDataSet ds = new cbd_anketsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void bd_ipRowChangeEventHandler(object sender, bd_ipRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void bd_ip_tRowChangeEventHandler(object sender, bd_ip_tRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void bd_orgRowChangeEventHandler(object sender, bd_orgRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void bd_org_tRowChangeEventHandler(object sender, bd_org_tRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bd_ipDataTable : global::System.Data.TypedTableBase<bd_ipRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnunp;
            
            private global::System.Data.DataColumn columnkod_fil;
            
            private global::System.Data.DataColumn columnrezident;
            
            private global::System.Data.DataColumn columnpn;
            
            private global::System.Data.DataColumn columnlastname;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnotch;
            
            private global::System.Data.DataColumn columnprev_lastn;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columndate_birth;
            
            private global::System.Data.DataColumn columnplace_birth;
            
            private global::System.Data.DataColumn columnplace_reg;
            
            private global::System.Data.DataColumn columnkind_visa;
            
            private global::System.Data.DataColumn columntype_visa;
            
            private global::System.Data.DataColumn columnterm_visa;
            
            private global::System.Data.DataColumn columnvid_doc;
            
            private global::System.Data.DataColumn columnseria;
            
            private global::System.Data.DataColumn columnnum_doc;
            
            private global::System.Data.DataColumn columnreg_org_doc;
            
            private global::System.Data.DataColumn columnreg_dat_doc;
            
            private global::System.Data.DataColumn columnreg_num;
            
            private global::System.Data.DataColumn columnreg_dat;
            
            private global::System.Data.DataColumn columnreg_org;
            
            private global::System.Data.DataColumn columntel;
            
            private global::System.Data.DataColumn columntel_mob;
            
            private global::System.Data.DataColumn columne_mail;
            
            private global::System.Data.DataColumn columne_addr;
            
            private global::System.Data.DataColumn columnscheta;
            
            private global::System.Data.DataColumn columnprofit;
            
            private global::System.Data.DataColumn columnsved_infl;
            
            private global::System.Data.DataColumn columnrisk_itog;
            
            private global::System.Data.DataColumn columnrisk_client;
            
            private global::System.Data.DataColumn columnrisk_oper;
            
            private global::System.Data.DataColumn columnrisk_geo;
            
            private global::System.Data.DataColumn columnh_risk_exp;
            
            private global::System.Data.DataColumn columndecision;
            
            private global::System.Data.DataColumn columnresults;
            
            private global::System.Data.DataColumn columncategory;
            
            private global::System.Data.DataColumn columnprochie;
            
            private global::System.Data.DataColumn columnred_user;
            
            private global::System.Data.DataColumn columndt_set;
            
            private global::System.Data.DataColumn columnlogin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ipDataTable() {
                this.TableName = "bd_ip";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bd_ipDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected bd_ipDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn unpColumn {
                get {
                    return this.columnunp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kod_filColumn {
                get {
                    return this.columnkod_fil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rezidentColumn {
                get {
                    return this.columnrezident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pnColumn {
                get {
                    return this.columnpn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lastnameColumn {
                get {
                    return this.columnlastname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn otchColumn {
                get {
                    return this.columnotch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prev_lastnColumn {
                get {
                    return this.columnprev_lastn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn date_birthColumn {
                get {
                    return this.columndate_birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn place_birthColumn {
                get {
                    return this.columnplace_birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn place_regColumn {
                get {
                    return this.columnplace_reg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kind_visaColumn {
                get {
                    return this.columnkind_visa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn type_visaColumn {
                get {
                    return this.columntype_visa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn term_visaColumn {
                get {
                    return this.columnterm_visa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vid_docColumn {
                get {
                    return this.columnvid_doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn seriaColumn {
                get {
                    return this.columnseria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn num_docColumn {
                get {
                    return this.columnnum_doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_org_docColumn {
                get {
                    return this.columnreg_org_doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_dat_docColumn {
                get {
                    return this.columnreg_dat_doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_numColumn {
                get {
                    return this.columnreg_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_datColumn {
                get {
                    return this.columnreg_dat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_orgColumn {
                get {
                    return this.columnreg_org;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn telColumn {
                get {
                    return this.columntel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn tel_mobColumn {
                get {
                    return this.columntel_mob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn e_mailColumn {
                get {
                    return this.columne_mail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn e_addrColumn {
                get {
                    return this.columne_addr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn schetaColumn {
                get {
                    return this.columnscheta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn profitColumn {
                get {
                    return this.columnprofit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sved_inflColumn {
                get {
                    return this.columnsved_infl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_itogColumn {
                get {
                    return this.columnrisk_itog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_clientColumn {
                get {
                    return this.columnrisk_client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_operColumn {
                get {
                    return this.columnrisk_oper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_geoColumn {
                get {
                    return this.columnrisk_geo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn h_risk_expColumn {
                get {
                    return this.columnh_risk_exp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn decisionColumn {
                get {
                    return this.columndecision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn resultsColumn {
                get {
                    return this.columnresults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn categoryColumn {
                get {
                    return this.columncategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prochieColumn {
                get {
                    return this.columnprochie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn red_userColumn {
                get {
                    return this.columnred_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dt_setColumn {
                get {
                    return this.columndt_set;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn loginColumn {
                get {
                    return this.columnlogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ipRow this[int index] {
                get {
                    return ((bd_ipRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_ipRowChangeEventHandler bd_ipRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_ipRowChangeEventHandler bd_ipRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_ipRowChangeEventHandler bd_ipRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_ipRowChangeEventHandler bd_ipRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addbd_ipRow(bd_ipRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ipRow Addbd_ipRow(
                        string unp, 
                        int kod_fil, 
                        bool rezident, 
                        string pn, 
                        string lastname, 
                        string name, 
                        string otch, 
                        string prev_lastn, 
                        string state, 
                        System.DateTime date_birth, 
                        string place_birth, 
                        string place_reg, 
                        sbyte kind_visa, 
                        sbyte type_visa, 
                        System.DateTime term_visa, 
                        sbyte vid_doc, 
                        string seria, 
                        string num_doc, 
                        string reg_org_doc, 
                        System.DateTime reg_dat_doc, 
                        string reg_num, 
                        System.DateTime reg_dat, 
                        string reg_org, 
                        string tel, 
                        string tel_mob, 
                        string e_mail, 
                        string e_addr, 
                        string scheta, 
                        string profit, 
                        sbyte sved_infl, 
                        sbyte risk_itog, 
                        sbyte risk_client, 
                        sbyte risk_oper, 
                        sbyte risk_geo, 
                        string h_risk_exp, 
                        string decision, 
                        string results, 
                        sbyte category, 
                        string prochie, 
                        string red_user, 
                        System.DateTime dt_set, 
                        string login) {
                bd_ipRow rowbd_ipRow = ((bd_ipRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        unp,
                        kod_fil,
                        rezident,
                        pn,
                        lastname,
                        name,
                        otch,
                        prev_lastn,
                        state,
                        date_birth,
                        place_birth,
                        place_reg,
                        kind_visa,
                        type_visa,
                        term_visa,
                        vid_doc,
                        seria,
                        num_doc,
                        reg_org_doc,
                        reg_dat_doc,
                        reg_num,
                        reg_dat,
                        reg_org,
                        tel,
                        tel_mob,
                        e_mail,
                        e_addr,
                        scheta,
                        profit,
                        sved_infl,
                        risk_itog,
                        risk_client,
                        risk_oper,
                        risk_geo,
                        h_risk_exp,
                        decision,
                        results,
                        category,
                        prochie,
                        red_user,
                        dt_set,
                        login};
                rowbd_ipRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbd_ipRow);
                return rowbd_ipRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ipRow FindByid(int id) {
                return ((bd_ipRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                bd_ipDataTable cln = ((bd_ipDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bd_ipDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnunp = base.Columns["unp"];
                this.columnkod_fil = base.Columns["kod_fil"];
                this.columnrezident = base.Columns["rezident"];
                this.columnpn = base.Columns["pn"];
                this.columnlastname = base.Columns["lastname"];
                this.columnname = base.Columns["name"];
                this.columnotch = base.Columns["otch"];
                this.columnprev_lastn = base.Columns["prev_lastn"];
                this.columnstate = base.Columns["state"];
                this.columndate_birth = base.Columns["date_birth"];
                this.columnplace_birth = base.Columns["place_birth"];
                this.columnplace_reg = base.Columns["place_reg"];
                this.columnkind_visa = base.Columns["kind_visa"];
                this.columntype_visa = base.Columns["type_visa"];
                this.columnterm_visa = base.Columns["term_visa"];
                this.columnvid_doc = base.Columns["vid_doc"];
                this.columnseria = base.Columns["seria"];
                this.columnnum_doc = base.Columns["num_doc"];
                this.columnreg_org_doc = base.Columns["reg_org_doc"];
                this.columnreg_dat_doc = base.Columns["reg_dat_doc"];
                this.columnreg_num = base.Columns["reg_num"];
                this.columnreg_dat = base.Columns["reg_dat"];
                this.columnreg_org = base.Columns["reg_org"];
                this.columntel = base.Columns["tel"];
                this.columntel_mob = base.Columns["tel_mob"];
                this.columne_mail = base.Columns["e_mail"];
                this.columne_addr = base.Columns["e_addr"];
                this.columnscheta = base.Columns["scheta"];
                this.columnprofit = base.Columns["profit"];
                this.columnsved_infl = base.Columns["sved_infl"];
                this.columnrisk_itog = base.Columns["risk_itog"];
                this.columnrisk_client = base.Columns["risk_client"];
                this.columnrisk_oper = base.Columns["risk_oper"];
                this.columnrisk_geo = base.Columns["risk_geo"];
                this.columnh_risk_exp = base.Columns["h_risk_exp"];
                this.columndecision = base.Columns["decision"];
                this.columnresults = base.Columns["results"];
                this.columncategory = base.Columns["category"];
                this.columnprochie = base.Columns["prochie"];
                this.columnred_user = base.Columns["red_user"];
                this.columndt_set = base.Columns["dt_set"];
                this.columnlogin = base.Columns["login"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnunp = new global::System.Data.DataColumn("unp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunp);
                this.columnkod_fil = new global::System.Data.DataColumn("kod_fil", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod_fil);
                this.columnrezident = new global::System.Data.DataColumn("rezident", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrezident);
                this.columnpn = new global::System.Data.DataColumn("pn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpn);
                this.columnlastname = new global::System.Data.DataColumn("lastname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastname);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnotch = new global::System.Data.DataColumn("otch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotch);
                this.columnprev_lastn = new global::System.Data.DataColumn("prev_lastn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprev_lastn);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columndate_birth = new global::System.Data.DataColumn("date_birth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_birth);
                this.columnplace_birth = new global::System.Data.DataColumn("place_birth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplace_birth);
                this.columnplace_reg = new global::System.Data.DataColumn("place_reg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplace_reg);
                this.columnkind_visa = new global::System.Data.DataColumn("kind_visa", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkind_visa);
                this.columntype_visa = new global::System.Data.DataColumn("type_visa", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_visa);
                this.columnterm_visa = new global::System.Data.DataColumn("term_visa", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnterm_visa);
                this.columnvid_doc = new global::System.Data.DataColumn("vid_doc", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvid_doc);
                this.columnseria = new global::System.Data.DataColumn("seria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseria);
                this.columnnum_doc = new global::System.Data.DataColumn("num_doc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_doc);
                this.columnreg_org_doc = new global::System.Data.DataColumn("reg_org_doc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_org_doc);
                this.columnreg_dat_doc = new global::System.Data.DataColumn("reg_dat_doc", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_dat_doc);
                this.columnreg_num = new global::System.Data.DataColumn("reg_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_num);
                this.columnreg_dat = new global::System.Data.DataColumn("reg_dat", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_dat);
                this.columnreg_org = new global::System.Data.DataColumn("reg_org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_org);
                this.columntel = new global::System.Data.DataColumn("tel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntel);
                this.columntel_mob = new global::System.Data.DataColumn("tel_mob", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntel_mob);
                this.columne_mail = new global::System.Data.DataColumn("e_mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_mail);
                this.columne_addr = new global::System.Data.DataColumn("e_addr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_addr);
                this.columnscheta = new global::System.Data.DataColumn("scheta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscheta);
                this.columnprofit = new global::System.Data.DataColumn("profit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofit);
                this.columnsved_infl = new global::System.Data.DataColumn("sved_infl", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsved_infl);
                this.columnrisk_itog = new global::System.Data.DataColumn("risk_itog", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_itog);
                this.columnrisk_client = new global::System.Data.DataColumn("risk_client", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_client);
                this.columnrisk_oper = new global::System.Data.DataColumn("risk_oper", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_oper);
                this.columnrisk_geo = new global::System.Data.DataColumn("risk_geo", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_geo);
                this.columnh_risk_exp = new global::System.Data.DataColumn("h_risk_exp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh_risk_exp);
                this.columndecision = new global::System.Data.DataColumn("decision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndecision);
                this.columnresults = new global::System.Data.DataColumn("results", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresults);
                this.columncategory = new global::System.Data.DataColumn("category", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory);
                this.columnprochie = new global::System.Data.DataColumn("prochie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprochie);
                this.columnred_user = new global::System.Data.DataColumn("red_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnred_user);
                this.columndt_set = new global::System.Data.DataColumn("dt_set", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndt_set);
                this.columnlogin = new global::System.Data.DataColumn("login", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnunp.AllowDBNull = false;
                this.columnunp.MaxLength = 30;
                this.columnkod_fil.AllowDBNull = false;
                this.columnrezident.AllowDBNull = false;
                this.columnpn.AllowDBNull = false;
                this.columnpn.MaxLength = 30;
                this.columnlastname.AllowDBNull = false;
                this.columnlastname.MaxLength = 255;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 50;
                this.columnotch.AllowDBNull = false;
                this.columnotch.MaxLength = 150;
                this.columnprev_lastn.AllowDBNull = false;
                this.columnprev_lastn.MaxLength = 255;
                this.columnstate.AllowDBNull = false;
                this.columnstate.MaxLength = 100;
                this.columndate_birth.AllowDBNull = false;
                this.columnplace_birth.AllowDBNull = false;
                this.columnplace_birth.MaxLength = 255;
                this.columnplace_reg.AllowDBNull = false;
                this.columnplace_reg.MaxLength = 255;
                this.columnkind_visa.AllowDBNull = false;
                this.columntype_visa.AllowDBNull = false;
                this.columnterm_visa.AllowDBNull = false;
                this.columnvid_doc.AllowDBNull = false;
                this.columnseria.AllowDBNull = false;
                this.columnseria.MaxLength = 30;
                this.columnnum_doc.AllowDBNull = false;
                this.columnnum_doc.MaxLength = 50;
                this.columnreg_org_doc.AllowDBNull = false;
                this.columnreg_org_doc.MaxLength = 65535;
                this.columnreg_dat_doc.AllowDBNull = false;
                this.columnreg_num.AllowDBNull = false;
                this.columnreg_num.MaxLength = 100;
                this.columnreg_dat.AllowDBNull = false;
                this.columnreg_org.AllowDBNull = false;
                this.columnreg_org.MaxLength = 65535;
                this.columntel.AllowDBNull = false;
                this.columntel.MaxLength = 255;
                this.columntel_mob.AllowDBNull = false;
                this.columntel_mob.MaxLength = 255;
                this.columne_mail.AllowDBNull = false;
                this.columne_mail.MaxLength = 255;
                this.columne_addr.AllowDBNull = false;
                this.columne_addr.MaxLength = 255;
                this.columnscheta.AllowDBNull = false;
                this.columnscheta.MaxLength = 65535;
                this.columnprofit.AllowDBNull = false;
                this.columnprofit.MaxLength = 65535;
                this.columnsved_infl.AllowDBNull = false;
                this.columnrisk_itog.AllowDBNull = false;
                this.columnrisk_client.AllowDBNull = false;
                this.columnrisk_oper.AllowDBNull = false;
                this.columnrisk_geo.AllowDBNull = false;
                this.columnh_risk_exp.AllowDBNull = false;
                this.columnh_risk_exp.MaxLength = 65535;
                this.columndecision.AllowDBNull = false;
                this.columndecision.MaxLength = 65535;
                this.columnresults.AllowDBNull = false;
                this.columnresults.MaxLength = 65535;
                this.columncategory.AllowDBNull = false;
                this.columnprochie.AllowDBNull = false;
                this.columnprochie.MaxLength = 65535;
                this.columnred_user.AllowDBNull = false;
                this.columnred_user.MaxLength = 100;
                this.columndt_set.AllowDBNull = false;
                this.columnlogin.AllowDBNull = false;
                this.columnlogin.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ipRow Newbd_ipRow() {
                return ((bd_ipRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bd_ipRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(bd_ipRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bd_ipRowChanged != null)) {
                    this.bd_ipRowChanged(this, new bd_ipRowChangeEvent(((bd_ipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bd_ipRowChanging != null)) {
                    this.bd_ipRowChanging(this, new bd_ipRowChangeEvent(((bd_ipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bd_ipRowDeleted != null)) {
                    this.bd_ipRowDeleted(this, new bd_ipRowChangeEvent(((bd_ipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bd_ipRowDeleting != null)) {
                    this.bd_ipRowDeleting(this, new bd_ipRowChangeEvent(((bd_ipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removebd_ipRow(bd_ipRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                cbd_anketsDataSet ds = new cbd_anketsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bd_ipDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bd_ip_tDataTable : global::System.Data.TypedTableBase<bd_ip_tRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnunp;
            
            private global::System.Data.DataColumn columnkod_fil;
            
            private global::System.Data.DataColumn columnrezident;
            
            private global::System.Data.DataColumn columnpn;
            
            private global::System.Data.DataColumn columnlastname;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnotch;
            
            private global::System.Data.DataColumn columnprev_lastn;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columndate_birth;
            
            private global::System.Data.DataColumn columnplace_birth;
            
            private global::System.Data.DataColumn columnplace_reg;
            
            private global::System.Data.DataColumn columnkind_visa;
            
            private global::System.Data.DataColumn columntype_visa;
            
            private global::System.Data.DataColumn columnterm_visa;
            
            private global::System.Data.DataColumn columnvid_doc;
            
            private global::System.Data.DataColumn columnseria;
            
            private global::System.Data.DataColumn columnnum_doc;
            
            private global::System.Data.DataColumn columnreg_org_doc;
            
            private global::System.Data.DataColumn columnreg_dat_doc;
            
            private global::System.Data.DataColumn columnreg_num;
            
            private global::System.Data.DataColumn columnreg_dat;
            
            private global::System.Data.DataColumn columnreg_org;
            
            private global::System.Data.DataColumn columntel;
            
            private global::System.Data.DataColumn columntel_mob;
            
            private global::System.Data.DataColumn columne_mail;
            
            private global::System.Data.DataColumn columne_addr;
            
            private global::System.Data.DataColumn columnscheta;
            
            private global::System.Data.DataColumn columnprofit;
            
            private global::System.Data.DataColumn columnsved_infl;
            
            private global::System.Data.DataColumn columnrisk_itog;
            
            private global::System.Data.DataColumn columnrisk_client;
            
            private global::System.Data.DataColumn columnrisk_oper;
            
            private global::System.Data.DataColumn columnrisk_geo;
            
            private global::System.Data.DataColumn columnh_risk_exp;
            
            private global::System.Data.DataColumn columndecision;
            
            private global::System.Data.DataColumn columnresults;
            
            private global::System.Data.DataColumn columncategory;
            
            private global::System.Data.DataColumn columnprochie;
            
            private global::System.Data.DataColumn columnred_user;
            
            private global::System.Data.DataColumn columndt_set;
            
            private global::System.Data.DataColumn columnlogin;
            
            private global::System.Data.DataColumn columnfile_name;
            
            private global::System.Data.DataColumn columnsheet_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ip_tDataTable() {
                this.TableName = "bd_ip_t";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bd_ip_tDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected bd_ip_tDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn unpColumn {
                get {
                    return this.columnunp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kod_filColumn {
                get {
                    return this.columnkod_fil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rezidentColumn {
                get {
                    return this.columnrezident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pnColumn {
                get {
                    return this.columnpn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lastnameColumn {
                get {
                    return this.columnlastname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn otchColumn {
                get {
                    return this.columnotch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prev_lastnColumn {
                get {
                    return this.columnprev_lastn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn date_birthColumn {
                get {
                    return this.columndate_birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn place_birthColumn {
                get {
                    return this.columnplace_birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn place_regColumn {
                get {
                    return this.columnplace_reg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kind_visaColumn {
                get {
                    return this.columnkind_visa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn type_visaColumn {
                get {
                    return this.columntype_visa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn term_visaColumn {
                get {
                    return this.columnterm_visa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vid_docColumn {
                get {
                    return this.columnvid_doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn seriaColumn {
                get {
                    return this.columnseria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn num_docColumn {
                get {
                    return this.columnnum_doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_org_docColumn {
                get {
                    return this.columnreg_org_doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_dat_docColumn {
                get {
                    return this.columnreg_dat_doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_numColumn {
                get {
                    return this.columnreg_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_datColumn {
                get {
                    return this.columnreg_dat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_orgColumn {
                get {
                    return this.columnreg_org;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn telColumn {
                get {
                    return this.columntel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn tel_mobColumn {
                get {
                    return this.columntel_mob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn e_mailColumn {
                get {
                    return this.columne_mail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn e_addrColumn {
                get {
                    return this.columne_addr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn schetaColumn {
                get {
                    return this.columnscheta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn profitColumn {
                get {
                    return this.columnprofit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sved_inflColumn {
                get {
                    return this.columnsved_infl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_itogColumn {
                get {
                    return this.columnrisk_itog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_clientColumn {
                get {
                    return this.columnrisk_client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_operColumn {
                get {
                    return this.columnrisk_oper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_geoColumn {
                get {
                    return this.columnrisk_geo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn h_risk_expColumn {
                get {
                    return this.columnh_risk_exp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn decisionColumn {
                get {
                    return this.columndecision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn resultsColumn {
                get {
                    return this.columnresults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn categoryColumn {
                get {
                    return this.columncategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prochieColumn {
                get {
                    return this.columnprochie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn red_userColumn {
                get {
                    return this.columnred_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dt_setColumn {
                get {
                    return this.columndt_set;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn loginColumn {
                get {
                    return this.columnlogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn file_nameColumn {
                get {
                    return this.columnfile_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sheet_nameColumn {
                get {
                    return this.columnsheet_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ip_tRow this[int index] {
                get {
                    return ((bd_ip_tRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_ip_tRowChangeEventHandler bd_ip_tRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_ip_tRowChangeEventHandler bd_ip_tRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_ip_tRowChangeEventHandler bd_ip_tRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_ip_tRowChangeEventHandler bd_ip_tRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addbd_ip_tRow(bd_ip_tRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ip_tRow Addbd_ip_tRow(
                        string unp, 
                        int kod_fil, 
                        bool rezident, 
                        string pn, 
                        string lastname, 
                        string name, 
                        string otch, 
                        string prev_lastn, 
                        string state, 
                        System.DateTime date_birth, 
                        string place_birth, 
                        string place_reg, 
                        sbyte kind_visa, 
                        sbyte type_visa, 
                        System.DateTime term_visa, 
                        sbyte vid_doc, 
                        string seria, 
                        string num_doc, 
                        string reg_org_doc, 
                        System.DateTime reg_dat_doc, 
                        string reg_num, 
                        System.DateTime reg_dat, 
                        string reg_org, 
                        string tel, 
                        string tel_mob, 
                        string e_mail, 
                        string e_addr, 
                        string scheta, 
                        string profit, 
                        sbyte sved_infl, 
                        sbyte risk_itog, 
                        sbyte risk_client, 
                        sbyte risk_oper, 
                        sbyte risk_geo, 
                        string h_risk_exp, 
                        string decision, 
                        string results, 
                        sbyte category, 
                        string prochie, 
                        string red_user, 
                        System.DateTime dt_set, 
                        string login, 
                        string file_name, 
                        string sheet_name) {
                bd_ip_tRow rowbd_ip_tRow = ((bd_ip_tRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        unp,
                        kod_fil,
                        rezident,
                        pn,
                        lastname,
                        name,
                        otch,
                        prev_lastn,
                        state,
                        date_birth,
                        place_birth,
                        place_reg,
                        kind_visa,
                        type_visa,
                        term_visa,
                        vid_doc,
                        seria,
                        num_doc,
                        reg_org_doc,
                        reg_dat_doc,
                        reg_num,
                        reg_dat,
                        reg_org,
                        tel,
                        tel_mob,
                        e_mail,
                        e_addr,
                        scheta,
                        profit,
                        sved_infl,
                        risk_itog,
                        risk_client,
                        risk_oper,
                        risk_geo,
                        h_risk_exp,
                        decision,
                        results,
                        category,
                        prochie,
                        red_user,
                        dt_set,
                        login,
                        file_name,
                        sheet_name};
                rowbd_ip_tRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbd_ip_tRow);
                return rowbd_ip_tRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ip_tRow FindByid(int id) {
                return ((bd_ip_tRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                bd_ip_tDataTable cln = ((bd_ip_tDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bd_ip_tDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnunp = base.Columns["unp"];
                this.columnkod_fil = base.Columns["kod_fil"];
                this.columnrezident = base.Columns["rezident"];
                this.columnpn = base.Columns["pn"];
                this.columnlastname = base.Columns["lastname"];
                this.columnname = base.Columns["name"];
                this.columnotch = base.Columns["otch"];
                this.columnprev_lastn = base.Columns["prev_lastn"];
                this.columnstate = base.Columns["state"];
                this.columndate_birth = base.Columns["date_birth"];
                this.columnplace_birth = base.Columns["place_birth"];
                this.columnplace_reg = base.Columns["place_reg"];
                this.columnkind_visa = base.Columns["kind_visa"];
                this.columntype_visa = base.Columns["type_visa"];
                this.columnterm_visa = base.Columns["term_visa"];
                this.columnvid_doc = base.Columns["vid_doc"];
                this.columnseria = base.Columns["seria"];
                this.columnnum_doc = base.Columns["num_doc"];
                this.columnreg_org_doc = base.Columns["reg_org_doc"];
                this.columnreg_dat_doc = base.Columns["reg_dat_doc"];
                this.columnreg_num = base.Columns["reg_num"];
                this.columnreg_dat = base.Columns["reg_dat"];
                this.columnreg_org = base.Columns["reg_org"];
                this.columntel = base.Columns["tel"];
                this.columntel_mob = base.Columns["tel_mob"];
                this.columne_mail = base.Columns["e_mail"];
                this.columne_addr = base.Columns["e_addr"];
                this.columnscheta = base.Columns["scheta"];
                this.columnprofit = base.Columns["profit"];
                this.columnsved_infl = base.Columns["sved_infl"];
                this.columnrisk_itog = base.Columns["risk_itog"];
                this.columnrisk_client = base.Columns["risk_client"];
                this.columnrisk_oper = base.Columns["risk_oper"];
                this.columnrisk_geo = base.Columns["risk_geo"];
                this.columnh_risk_exp = base.Columns["h_risk_exp"];
                this.columndecision = base.Columns["decision"];
                this.columnresults = base.Columns["results"];
                this.columncategory = base.Columns["category"];
                this.columnprochie = base.Columns["prochie"];
                this.columnred_user = base.Columns["red_user"];
                this.columndt_set = base.Columns["dt_set"];
                this.columnlogin = base.Columns["login"];
                this.columnfile_name = base.Columns["file_name"];
                this.columnsheet_name = base.Columns["sheet_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnunp = new global::System.Data.DataColumn("unp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunp);
                this.columnkod_fil = new global::System.Data.DataColumn("kod_fil", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod_fil);
                this.columnrezident = new global::System.Data.DataColumn("rezident", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrezident);
                this.columnpn = new global::System.Data.DataColumn("pn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpn);
                this.columnlastname = new global::System.Data.DataColumn("lastname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastname);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnotch = new global::System.Data.DataColumn("otch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotch);
                this.columnprev_lastn = new global::System.Data.DataColumn("prev_lastn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprev_lastn);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columndate_birth = new global::System.Data.DataColumn("date_birth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_birth);
                this.columnplace_birth = new global::System.Data.DataColumn("place_birth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplace_birth);
                this.columnplace_reg = new global::System.Data.DataColumn("place_reg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplace_reg);
                this.columnkind_visa = new global::System.Data.DataColumn("kind_visa", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkind_visa);
                this.columntype_visa = new global::System.Data.DataColumn("type_visa", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_visa);
                this.columnterm_visa = new global::System.Data.DataColumn("term_visa", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnterm_visa);
                this.columnvid_doc = new global::System.Data.DataColumn("vid_doc", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvid_doc);
                this.columnseria = new global::System.Data.DataColumn("seria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseria);
                this.columnnum_doc = new global::System.Data.DataColumn("num_doc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_doc);
                this.columnreg_org_doc = new global::System.Data.DataColumn("reg_org_doc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_org_doc);
                this.columnreg_dat_doc = new global::System.Data.DataColumn("reg_dat_doc", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_dat_doc);
                this.columnreg_num = new global::System.Data.DataColumn("reg_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_num);
                this.columnreg_dat = new global::System.Data.DataColumn("reg_dat", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_dat);
                this.columnreg_org = new global::System.Data.DataColumn("reg_org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_org);
                this.columntel = new global::System.Data.DataColumn("tel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntel);
                this.columntel_mob = new global::System.Data.DataColumn("tel_mob", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntel_mob);
                this.columne_mail = new global::System.Data.DataColumn("e_mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_mail);
                this.columne_addr = new global::System.Data.DataColumn("e_addr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_addr);
                this.columnscheta = new global::System.Data.DataColumn("scheta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscheta);
                this.columnprofit = new global::System.Data.DataColumn("profit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofit);
                this.columnsved_infl = new global::System.Data.DataColumn("sved_infl", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsved_infl);
                this.columnrisk_itog = new global::System.Data.DataColumn("risk_itog", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_itog);
                this.columnrisk_client = new global::System.Data.DataColumn("risk_client", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_client);
                this.columnrisk_oper = new global::System.Data.DataColumn("risk_oper", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_oper);
                this.columnrisk_geo = new global::System.Data.DataColumn("risk_geo", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_geo);
                this.columnh_risk_exp = new global::System.Data.DataColumn("h_risk_exp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh_risk_exp);
                this.columndecision = new global::System.Data.DataColumn("decision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndecision);
                this.columnresults = new global::System.Data.DataColumn("results", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresults);
                this.columncategory = new global::System.Data.DataColumn("category", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory);
                this.columnprochie = new global::System.Data.DataColumn("prochie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprochie);
                this.columnred_user = new global::System.Data.DataColumn("red_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnred_user);
                this.columndt_set = new global::System.Data.DataColumn("dt_set", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndt_set);
                this.columnlogin = new global::System.Data.DataColumn("login", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin);
                this.columnfile_name = new global::System.Data.DataColumn("file_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfile_name);
                this.columnsheet_name = new global::System.Data.DataColumn("sheet_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsheet_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnunp.AllowDBNull = false;
                this.columnunp.MaxLength = 30;
                this.columnkod_fil.AllowDBNull = false;
                this.columnrezident.AllowDBNull = false;
                this.columnpn.AllowDBNull = false;
                this.columnpn.MaxLength = 30;
                this.columnlastname.AllowDBNull = false;
                this.columnlastname.MaxLength = 255;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 50;
                this.columnotch.AllowDBNull = false;
                this.columnotch.MaxLength = 150;
                this.columnprev_lastn.AllowDBNull = false;
                this.columnprev_lastn.MaxLength = 255;
                this.columnstate.AllowDBNull = false;
                this.columnstate.MaxLength = 100;
                this.columndate_birth.AllowDBNull = false;
                this.columnplace_birth.AllowDBNull = false;
                this.columnplace_birth.MaxLength = 255;
                this.columnplace_reg.AllowDBNull = false;
                this.columnplace_reg.MaxLength = 255;
                this.columnkind_visa.AllowDBNull = false;
                this.columntype_visa.AllowDBNull = false;
                this.columnterm_visa.AllowDBNull = false;
                this.columnvid_doc.AllowDBNull = false;
                this.columnseria.AllowDBNull = false;
                this.columnseria.MaxLength = 30;
                this.columnnum_doc.AllowDBNull = false;
                this.columnnum_doc.MaxLength = 50;
                this.columnreg_org_doc.AllowDBNull = false;
                this.columnreg_org_doc.MaxLength = 65535;
                this.columnreg_dat_doc.AllowDBNull = false;
                this.columnreg_num.AllowDBNull = false;
                this.columnreg_num.MaxLength = 100;
                this.columnreg_dat.AllowDBNull = false;
                this.columnreg_org.AllowDBNull = false;
                this.columnreg_org.MaxLength = 65535;
                this.columntel.AllowDBNull = false;
                this.columntel.MaxLength = 255;
                this.columntel_mob.AllowDBNull = false;
                this.columntel_mob.MaxLength = 255;
                this.columne_mail.AllowDBNull = false;
                this.columne_mail.MaxLength = 255;
                this.columne_addr.AllowDBNull = false;
                this.columne_addr.MaxLength = 255;
                this.columnscheta.AllowDBNull = false;
                this.columnscheta.MaxLength = 65535;
                this.columnprofit.AllowDBNull = false;
                this.columnprofit.MaxLength = 65535;
                this.columnsved_infl.AllowDBNull = false;
                this.columnrisk_itog.AllowDBNull = false;
                this.columnrisk_client.AllowDBNull = false;
                this.columnrisk_oper.AllowDBNull = false;
                this.columnrisk_geo.AllowDBNull = false;
                this.columnh_risk_exp.AllowDBNull = false;
                this.columnh_risk_exp.MaxLength = 65535;
                this.columndecision.AllowDBNull = false;
                this.columndecision.MaxLength = 65535;
                this.columnresults.AllowDBNull = false;
                this.columnresults.MaxLength = 65535;
                this.columncategory.AllowDBNull = false;
                this.columnprochie.AllowDBNull = false;
                this.columnprochie.MaxLength = 65535;
                this.columnred_user.AllowDBNull = false;
                this.columnred_user.MaxLength = 100;
                this.columndt_set.AllowDBNull = false;
                this.columnlogin.AllowDBNull = false;
                this.columnlogin.MaxLength = 30;
                this.columnfile_name.AllowDBNull = false;
                this.columnfile_name.MaxLength = 30;
                this.columnsheet_name.AllowDBNull = false;
                this.columnsheet_name.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ip_tRow Newbd_ip_tRow() {
                return ((bd_ip_tRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bd_ip_tRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(bd_ip_tRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bd_ip_tRowChanged != null)) {
                    this.bd_ip_tRowChanged(this, new bd_ip_tRowChangeEvent(((bd_ip_tRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bd_ip_tRowChanging != null)) {
                    this.bd_ip_tRowChanging(this, new bd_ip_tRowChangeEvent(((bd_ip_tRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bd_ip_tRowDeleted != null)) {
                    this.bd_ip_tRowDeleted(this, new bd_ip_tRowChangeEvent(((bd_ip_tRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bd_ip_tRowDeleting != null)) {
                    this.bd_ip_tRowDeleting(this, new bd_ip_tRowChangeEvent(((bd_ip_tRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removebd_ip_tRow(bd_ip_tRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                cbd_anketsDataSet ds = new cbd_anketsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bd_ip_tDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bd_orgDataTable : global::System.Data.TypedTableBase<bd_orgRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnunp;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnmain;
            
            private global::System.Data.DataColumn columnkod_fil;
            
            private global::System.Data.DataColumn columnrezident;
            
            private global::System.Data.DataColumn columnreg_num;
            
            private global::System.Data.DataColumn columnreg_dat;
            
            private global::System.Data.DataColumn columnreg_org;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columnregion;
            
            private global::System.Data.DataColumn columncity;
            
            private global::System.Data.DataColumn columnstreet;
            
            private global::System.Data.DataColumn columnbuild;
            
            private global::System.Data.DataColumn columnoffice;
            
            private global::System.Data.DataColumn columntel;
            
            private global::System.Data.DataColumn columne_mail;
            
            private global::System.Data.DataColumn columne_addr;
            
            private global::System.Data.DataColumn columnsved_uchr;
            
            private global::System.Data.DataColumn columnust_fond;
            
            private global::System.Data.DataColumn columnkol_rab;
            
            private global::System.Data.DataColumn columnscheta;
            
            private global::System.Data.DataColumn columnsved_kontr;
            
            private global::System.Data.DataColumn columnprofit;
            
            private global::System.Data.DataColumn columnhistory;
            
            private global::System.Data.DataColumn columnaudit_org;
            
            private global::System.Data.DataColumn columnsved_fil;
            
            private global::System.Data.DataColumn columnsved_infl;
            
            private global::System.Data.DataColumn columnrisk_itog;
            
            private global::System.Data.DataColumn columnrisk_client;
            
            private global::System.Data.DataColumn columnrisk_oper;
            
            private global::System.Data.DataColumn columnrisk_geo;
            
            private global::System.Data.DataColumn columnh_risk_exp;
            
            private global::System.Data.DataColumn columndecision;
            
            private global::System.Data.DataColumn columnresults;
            
            private global::System.Data.DataColumn columncategory;
            
            private global::System.Data.DataColumn columnprochie;
            
            private global::System.Data.DataColumn columnred_user;
            
            private global::System.Data.DataColumn columndt_set;
            
            private global::System.Data.DataColumn columnlogin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_orgDataTable() {
                this.TableName = "bd_org";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bd_orgDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected bd_orgDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn unpColumn {
                get {
                    return this.columnunp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mainColumn {
                get {
                    return this.columnmain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kod_filColumn {
                get {
                    return this.columnkod_fil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rezidentColumn {
                get {
                    return this.columnrezident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_numColumn {
                get {
                    return this.columnreg_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_datColumn {
                get {
                    return this.columnreg_dat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_orgColumn {
                get {
                    return this.columnreg_org;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regionColumn {
                get {
                    return this.columnregion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn streetColumn {
                get {
                    return this.columnstreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn buildColumn {
                get {
                    return this.columnbuild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn officeColumn {
                get {
                    return this.columnoffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn telColumn {
                get {
                    return this.columntel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn e_mailColumn {
                get {
                    return this.columne_mail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn e_addrColumn {
                get {
                    return this.columne_addr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sved_uchrColumn {
                get {
                    return this.columnsved_uchr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ust_fondColumn {
                get {
                    return this.columnust_fond;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kol_rabColumn {
                get {
                    return this.columnkol_rab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn schetaColumn {
                get {
                    return this.columnscheta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sved_kontrColumn {
                get {
                    return this.columnsved_kontr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn profitColumn {
                get {
                    return this.columnprofit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn historyColumn {
                get {
                    return this.columnhistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn audit_orgColumn {
                get {
                    return this.columnaudit_org;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sved_filColumn {
                get {
                    return this.columnsved_fil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sved_inflColumn {
                get {
                    return this.columnsved_infl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_itogColumn {
                get {
                    return this.columnrisk_itog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_clientColumn {
                get {
                    return this.columnrisk_client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_operColumn {
                get {
                    return this.columnrisk_oper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_geoColumn {
                get {
                    return this.columnrisk_geo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn h_risk_expColumn {
                get {
                    return this.columnh_risk_exp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn decisionColumn {
                get {
                    return this.columndecision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn resultsColumn {
                get {
                    return this.columnresults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn categoryColumn {
                get {
                    return this.columncategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prochieColumn {
                get {
                    return this.columnprochie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn red_userColumn {
                get {
                    return this.columnred_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dt_setColumn {
                get {
                    return this.columndt_set;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn loginColumn {
                get {
                    return this.columnlogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_orgRow this[int index] {
                get {
                    return ((bd_orgRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_orgRowChangeEventHandler bd_orgRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_orgRowChangeEventHandler bd_orgRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_orgRowChangeEventHandler bd_orgRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_orgRowChangeEventHandler bd_orgRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addbd_orgRow(bd_orgRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_orgRow Addbd_orgRow(
                        string unp, 
                        string name, 
                        bool main, 
                        int kod_fil, 
                        bool rezident, 
                        string reg_num, 
                        System.DateTime reg_dat, 
                        string reg_org, 
                        string state, 
                        string region, 
                        string city, 
                        string street, 
                        string build, 
                        string office, 
                        string tel, 
                        string e_mail, 
                        string e_addr, 
                        sbyte sved_uchr, 
                        string ust_fond, 
                        int kol_rab, 
                        string scheta, 
                        sbyte sved_kontr, 
                        string profit, 
                        string history, 
                        string audit_org, 
                        sbyte sved_fil, 
                        sbyte sved_infl, 
                        sbyte risk_itog, 
                        sbyte risk_client, 
                        sbyte risk_oper, 
                        sbyte risk_geo, 
                        string h_risk_exp, 
                        string decision, 
                        string results, 
                        sbyte category, 
                        string prochie, 
                        string red_user, 
                        System.DateTime dt_set, 
                        string login) {
                bd_orgRow rowbd_orgRow = ((bd_orgRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        unp,
                        name,
                        main,
                        kod_fil,
                        rezident,
                        reg_num,
                        reg_dat,
                        reg_org,
                        state,
                        region,
                        city,
                        street,
                        build,
                        office,
                        tel,
                        e_mail,
                        e_addr,
                        sved_uchr,
                        ust_fond,
                        kol_rab,
                        scheta,
                        sved_kontr,
                        profit,
                        history,
                        audit_org,
                        sved_fil,
                        sved_infl,
                        risk_itog,
                        risk_client,
                        risk_oper,
                        risk_geo,
                        h_risk_exp,
                        decision,
                        results,
                        category,
                        prochie,
                        red_user,
                        dt_set,
                        login};
                rowbd_orgRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbd_orgRow);
                return rowbd_orgRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_orgRow FindByid(int id) {
                return ((bd_orgRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                bd_orgDataTable cln = ((bd_orgDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bd_orgDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnunp = base.Columns["unp"];
                this.columnname = base.Columns["name"];
                this.columnmain = base.Columns["main"];
                this.columnkod_fil = base.Columns["kod_fil"];
                this.columnrezident = base.Columns["rezident"];
                this.columnreg_num = base.Columns["reg_num"];
                this.columnreg_dat = base.Columns["reg_dat"];
                this.columnreg_org = base.Columns["reg_org"];
                this.columnstate = base.Columns["state"];
                this.columnregion = base.Columns["region"];
                this.columncity = base.Columns["city"];
                this.columnstreet = base.Columns["street"];
                this.columnbuild = base.Columns["build"];
                this.columnoffice = base.Columns["office"];
                this.columntel = base.Columns["tel"];
                this.columne_mail = base.Columns["e_mail"];
                this.columne_addr = base.Columns["e_addr"];
                this.columnsved_uchr = base.Columns["sved_uchr"];
                this.columnust_fond = base.Columns["ust_fond"];
                this.columnkol_rab = base.Columns["kol_rab"];
                this.columnscheta = base.Columns["scheta"];
                this.columnsved_kontr = base.Columns["sved_kontr"];
                this.columnprofit = base.Columns["profit"];
                this.columnhistory = base.Columns["history"];
                this.columnaudit_org = base.Columns["audit_org"];
                this.columnsved_fil = base.Columns["sved_fil"];
                this.columnsved_infl = base.Columns["sved_infl"];
                this.columnrisk_itog = base.Columns["risk_itog"];
                this.columnrisk_client = base.Columns["risk_client"];
                this.columnrisk_oper = base.Columns["risk_oper"];
                this.columnrisk_geo = base.Columns["risk_geo"];
                this.columnh_risk_exp = base.Columns["h_risk_exp"];
                this.columndecision = base.Columns["decision"];
                this.columnresults = base.Columns["results"];
                this.columncategory = base.Columns["category"];
                this.columnprochie = base.Columns["prochie"];
                this.columnred_user = base.Columns["red_user"];
                this.columndt_set = base.Columns["dt_set"];
                this.columnlogin = base.Columns["login"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnunp = new global::System.Data.DataColumn("unp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunp);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnmain = new global::System.Data.DataColumn("main", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmain);
                this.columnkod_fil = new global::System.Data.DataColumn("kod_fil", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod_fil);
                this.columnrezident = new global::System.Data.DataColumn("rezident", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrezident);
                this.columnreg_num = new global::System.Data.DataColumn("reg_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_num);
                this.columnreg_dat = new global::System.Data.DataColumn("reg_dat", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_dat);
                this.columnreg_org = new global::System.Data.DataColumn("reg_org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_org);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columnregion = new global::System.Data.DataColumn("region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregion);
                this.columncity = new global::System.Data.DataColumn("city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columnstreet = new global::System.Data.DataColumn("street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstreet);
                this.columnbuild = new global::System.Data.DataColumn("build", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbuild);
                this.columnoffice = new global::System.Data.DataColumn("office", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoffice);
                this.columntel = new global::System.Data.DataColumn("tel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntel);
                this.columne_mail = new global::System.Data.DataColumn("e_mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_mail);
                this.columne_addr = new global::System.Data.DataColumn("e_addr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_addr);
                this.columnsved_uchr = new global::System.Data.DataColumn("sved_uchr", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsved_uchr);
                this.columnust_fond = new global::System.Data.DataColumn("ust_fond", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnust_fond);
                this.columnkol_rab = new global::System.Data.DataColumn("kol_rab", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol_rab);
                this.columnscheta = new global::System.Data.DataColumn("scheta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscheta);
                this.columnsved_kontr = new global::System.Data.DataColumn("sved_kontr", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsved_kontr);
                this.columnprofit = new global::System.Data.DataColumn("profit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofit);
                this.columnhistory = new global::System.Data.DataColumn("history", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhistory);
                this.columnaudit_org = new global::System.Data.DataColumn("audit_org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaudit_org);
                this.columnsved_fil = new global::System.Data.DataColumn("sved_fil", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsved_fil);
                this.columnsved_infl = new global::System.Data.DataColumn("sved_infl", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsved_infl);
                this.columnrisk_itog = new global::System.Data.DataColumn("risk_itog", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_itog);
                this.columnrisk_client = new global::System.Data.DataColumn("risk_client", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_client);
                this.columnrisk_oper = new global::System.Data.DataColumn("risk_oper", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_oper);
                this.columnrisk_geo = new global::System.Data.DataColumn("risk_geo", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_geo);
                this.columnh_risk_exp = new global::System.Data.DataColumn("h_risk_exp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh_risk_exp);
                this.columndecision = new global::System.Data.DataColumn("decision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndecision);
                this.columnresults = new global::System.Data.DataColumn("results", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresults);
                this.columncategory = new global::System.Data.DataColumn("category", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory);
                this.columnprochie = new global::System.Data.DataColumn("prochie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprochie);
                this.columnred_user = new global::System.Data.DataColumn("red_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnred_user);
                this.columndt_set = new global::System.Data.DataColumn("dt_set", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndt_set);
                this.columnlogin = new global::System.Data.DataColumn("login", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnunp.AllowDBNull = false;
                this.columnunp.MaxLength = 30;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 255;
                this.columnmain.AllowDBNull = false;
                this.columnkod_fil.AllowDBNull = false;
                this.columnrezident.AllowDBNull = false;
                this.columnreg_num.AllowDBNull = false;
                this.columnreg_num.MaxLength = 100;
                this.columnreg_dat.AllowDBNull = false;
                this.columnreg_org.AllowDBNull = false;
                this.columnreg_org.MaxLength = 65535;
                this.columnstate.AllowDBNull = false;
                this.columnstate.MaxLength = 100;
                this.columnregion.AllowDBNull = false;
                this.columnregion.MaxLength = 255;
                this.columncity.AllowDBNull = false;
                this.columncity.MaxLength = 100;
                this.columnstreet.AllowDBNull = false;
                this.columnstreet.MaxLength = 100;
                this.columnbuild.AllowDBNull = false;
                this.columnbuild.MaxLength = 50;
                this.columnoffice.AllowDBNull = false;
                this.columnoffice.MaxLength = 10;
                this.columntel.AllowDBNull = false;
                this.columntel.MaxLength = 255;
                this.columne_mail.AllowDBNull = false;
                this.columne_mail.MaxLength = 255;
                this.columne_addr.AllowDBNull = false;
                this.columne_addr.MaxLength = 255;
                this.columnsved_uchr.AllowDBNull = false;
                this.columnust_fond.AllowDBNull = false;
                this.columnust_fond.MaxLength = 255;
                this.columnkol_rab.AllowDBNull = false;
                this.columnscheta.AllowDBNull = false;
                this.columnscheta.MaxLength = 65535;
                this.columnsved_kontr.AllowDBNull = false;
                this.columnprofit.AllowDBNull = false;
                this.columnprofit.MaxLength = 65535;
                this.columnhistory.AllowDBNull = false;
                this.columnhistory.MaxLength = 65535;
                this.columnaudit_org.AllowDBNull = false;
                this.columnaudit_org.MaxLength = 65535;
                this.columnsved_fil.AllowDBNull = false;
                this.columnsved_infl.AllowDBNull = false;
                this.columnrisk_itog.AllowDBNull = false;
                this.columnrisk_client.AllowDBNull = false;
                this.columnrisk_oper.AllowDBNull = false;
                this.columnrisk_geo.AllowDBNull = false;
                this.columnh_risk_exp.AllowDBNull = false;
                this.columnh_risk_exp.MaxLength = 65535;
                this.columndecision.AllowDBNull = false;
                this.columndecision.MaxLength = 65535;
                this.columnresults.AllowDBNull = false;
                this.columnresults.MaxLength = 65535;
                this.columncategory.AllowDBNull = false;
                this.columnprochie.AllowDBNull = false;
                this.columnprochie.MaxLength = 65535;
                this.columnred_user.AllowDBNull = false;
                this.columnred_user.MaxLength = 100;
                this.columndt_set.AllowDBNull = false;
                this.columnlogin.AllowDBNull = false;
                this.columnlogin.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_orgRow Newbd_orgRow() {
                return ((bd_orgRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bd_orgRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(bd_orgRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bd_orgRowChanged != null)) {
                    this.bd_orgRowChanged(this, new bd_orgRowChangeEvent(((bd_orgRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bd_orgRowChanging != null)) {
                    this.bd_orgRowChanging(this, new bd_orgRowChangeEvent(((bd_orgRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bd_orgRowDeleted != null)) {
                    this.bd_orgRowDeleted(this, new bd_orgRowChangeEvent(((bd_orgRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bd_orgRowDeleting != null)) {
                    this.bd_orgRowDeleting(this, new bd_orgRowChangeEvent(((bd_orgRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removebd_orgRow(bd_orgRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                cbd_anketsDataSet ds = new cbd_anketsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bd_orgDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bd_org_tDataTable : global::System.Data.TypedTableBase<bd_org_tRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnunp;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnmain;
            
            private global::System.Data.DataColumn columnkod_fil;
            
            private global::System.Data.DataColumn columnrezident;
            
            private global::System.Data.DataColumn columnreg_num;
            
            private global::System.Data.DataColumn columnreg_dat;
            
            private global::System.Data.DataColumn columnreg_org;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columnregion;
            
            private global::System.Data.DataColumn columncity;
            
            private global::System.Data.DataColumn columnstreet;
            
            private global::System.Data.DataColumn columnbuild;
            
            private global::System.Data.DataColumn columnoffice;
            
            private global::System.Data.DataColumn columntel;
            
            private global::System.Data.DataColumn columne_mail;
            
            private global::System.Data.DataColumn columne_addr;
            
            private global::System.Data.DataColumn columnsved_uchr;
            
            private global::System.Data.DataColumn columnust_fond;
            
            private global::System.Data.DataColumn columnkol_rab;
            
            private global::System.Data.DataColumn columnscheta;
            
            private global::System.Data.DataColumn columnsved_kontr;
            
            private global::System.Data.DataColumn columnprofit;
            
            private global::System.Data.DataColumn columnhistory;
            
            private global::System.Data.DataColumn columnaudit_org;
            
            private global::System.Data.DataColumn columnsved_fil;
            
            private global::System.Data.DataColumn columnsved_infl;
            
            private global::System.Data.DataColumn columnrisk_itog;
            
            private global::System.Data.DataColumn columnrisk_client;
            
            private global::System.Data.DataColumn columnrisk_oper;
            
            private global::System.Data.DataColumn columnrisk_geo;
            
            private global::System.Data.DataColumn columnh_risk_exp;
            
            private global::System.Data.DataColumn columndecision;
            
            private global::System.Data.DataColumn columnresults;
            
            private global::System.Data.DataColumn columncategory;
            
            private global::System.Data.DataColumn columnprochie;
            
            private global::System.Data.DataColumn columnred_user;
            
            private global::System.Data.DataColumn columndt_set;
            
            private global::System.Data.DataColumn columnlogin;
            
            private global::System.Data.DataColumn columnfile_name;
            
            private global::System.Data.DataColumn columnsheet_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_org_tDataTable() {
                this.TableName = "bd_org_t";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bd_org_tDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected bd_org_tDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn unpColumn {
                get {
                    return this.columnunp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mainColumn {
                get {
                    return this.columnmain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kod_filColumn {
                get {
                    return this.columnkod_fil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rezidentColumn {
                get {
                    return this.columnrezident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_numColumn {
                get {
                    return this.columnreg_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_datColumn {
                get {
                    return this.columnreg_dat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reg_orgColumn {
                get {
                    return this.columnreg_org;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regionColumn {
                get {
                    return this.columnregion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn streetColumn {
                get {
                    return this.columnstreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn buildColumn {
                get {
                    return this.columnbuild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn officeColumn {
                get {
                    return this.columnoffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn telColumn {
                get {
                    return this.columntel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn e_mailColumn {
                get {
                    return this.columne_mail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn e_addrColumn {
                get {
                    return this.columne_addr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sved_uchrColumn {
                get {
                    return this.columnsved_uchr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ust_fondColumn {
                get {
                    return this.columnust_fond;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kol_rabColumn {
                get {
                    return this.columnkol_rab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn schetaColumn {
                get {
                    return this.columnscheta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sved_kontrColumn {
                get {
                    return this.columnsved_kontr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn profitColumn {
                get {
                    return this.columnprofit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn historyColumn {
                get {
                    return this.columnhistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn audit_orgColumn {
                get {
                    return this.columnaudit_org;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sved_filColumn {
                get {
                    return this.columnsved_fil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sved_inflColumn {
                get {
                    return this.columnsved_infl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_itogColumn {
                get {
                    return this.columnrisk_itog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_clientColumn {
                get {
                    return this.columnrisk_client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_operColumn {
                get {
                    return this.columnrisk_oper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn risk_geoColumn {
                get {
                    return this.columnrisk_geo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn h_risk_expColumn {
                get {
                    return this.columnh_risk_exp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn decisionColumn {
                get {
                    return this.columndecision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn resultsColumn {
                get {
                    return this.columnresults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn categoryColumn {
                get {
                    return this.columncategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prochieColumn {
                get {
                    return this.columnprochie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn red_userColumn {
                get {
                    return this.columnred_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dt_setColumn {
                get {
                    return this.columndt_set;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn loginColumn {
                get {
                    return this.columnlogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn file_nameColumn {
                get {
                    return this.columnfile_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sheet_nameColumn {
                get {
                    return this.columnsheet_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_org_tRow this[int index] {
                get {
                    return ((bd_org_tRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_org_tRowChangeEventHandler bd_org_tRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_org_tRowChangeEventHandler bd_org_tRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_org_tRowChangeEventHandler bd_org_tRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bd_org_tRowChangeEventHandler bd_org_tRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addbd_org_tRow(bd_org_tRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_org_tRow Addbd_org_tRow(
                        string unp, 
                        string name, 
                        bool main, 
                        int kod_fil, 
                        bool rezident, 
                        string reg_num, 
                        System.DateTime reg_dat, 
                        string reg_org, 
                        string state, 
                        string region, 
                        string city, 
                        string street, 
                        string build, 
                        string office, 
                        string tel, 
                        string e_mail, 
                        string e_addr, 
                        sbyte sved_uchr, 
                        string ust_fond, 
                        int kol_rab, 
                        string scheta, 
                        sbyte sved_kontr, 
                        string profit, 
                        string history, 
                        string audit_org, 
                        sbyte sved_fil, 
                        sbyte sved_infl, 
                        sbyte risk_itog, 
                        sbyte risk_client, 
                        sbyte risk_oper, 
                        sbyte risk_geo, 
                        string h_risk_exp, 
                        string decision, 
                        string results, 
                        sbyte category, 
                        string prochie, 
                        string red_user, 
                        System.DateTime dt_set, 
                        string login, 
                        string file_name, 
                        string sheet_name) {
                bd_org_tRow rowbd_org_tRow = ((bd_org_tRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        unp,
                        name,
                        main,
                        kod_fil,
                        rezident,
                        reg_num,
                        reg_dat,
                        reg_org,
                        state,
                        region,
                        city,
                        street,
                        build,
                        office,
                        tel,
                        e_mail,
                        e_addr,
                        sved_uchr,
                        ust_fond,
                        kol_rab,
                        scheta,
                        sved_kontr,
                        profit,
                        history,
                        audit_org,
                        sved_fil,
                        sved_infl,
                        risk_itog,
                        risk_client,
                        risk_oper,
                        risk_geo,
                        h_risk_exp,
                        decision,
                        results,
                        category,
                        prochie,
                        red_user,
                        dt_set,
                        login,
                        file_name,
                        sheet_name};
                rowbd_org_tRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbd_org_tRow);
                return rowbd_org_tRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_org_tRow FindByid(int id) {
                return ((bd_org_tRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                bd_org_tDataTable cln = ((bd_org_tDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bd_org_tDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnunp = base.Columns["unp"];
                this.columnname = base.Columns["name"];
                this.columnmain = base.Columns["main"];
                this.columnkod_fil = base.Columns["kod_fil"];
                this.columnrezident = base.Columns["rezident"];
                this.columnreg_num = base.Columns["reg_num"];
                this.columnreg_dat = base.Columns["reg_dat"];
                this.columnreg_org = base.Columns["reg_org"];
                this.columnstate = base.Columns["state"];
                this.columnregion = base.Columns["region"];
                this.columncity = base.Columns["city"];
                this.columnstreet = base.Columns["street"];
                this.columnbuild = base.Columns["build"];
                this.columnoffice = base.Columns["office"];
                this.columntel = base.Columns["tel"];
                this.columne_mail = base.Columns["e_mail"];
                this.columne_addr = base.Columns["e_addr"];
                this.columnsved_uchr = base.Columns["sved_uchr"];
                this.columnust_fond = base.Columns["ust_fond"];
                this.columnkol_rab = base.Columns["kol_rab"];
                this.columnscheta = base.Columns["scheta"];
                this.columnsved_kontr = base.Columns["sved_kontr"];
                this.columnprofit = base.Columns["profit"];
                this.columnhistory = base.Columns["history"];
                this.columnaudit_org = base.Columns["audit_org"];
                this.columnsved_fil = base.Columns["sved_fil"];
                this.columnsved_infl = base.Columns["sved_infl"];
                this.columnrisk_itog = base.Columns["risk_itog"];
                this.columnrisk_client = base.Columns["risk_client"];
                this.columnrisk_oper = base.Columns["risk_oper"];
                this.columnrisk_geo = base.Columns["risk_geo"];
                this.columnh_risk_exp = base.Columns["h_risk_exp"];
                this.columndecision = base.Columns["decision"];
                this.columnresults = base.Columns["results"];
                this.columncategory = base.Columns["category"];
                this.columnprochie = base.Columns["prochie"];
                this.columnred_user = base.Columns["red_user"];
                this.columndt_set = base.Columns["dt_set"];
                this.columnlogin = base.Columns["login"];
                this.columnfile_name = base.Columns["file_name"];
                this.columnsheet_name = base.Columns["sheet_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnunp = new global::System.Data.DataColumn("unp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunp);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnmain = new global::System.Data.DataColumn("main", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmain);
                this.columnkod_fil = new global::System.Data.DataColumn("kod_fil", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod_fil);
                this.columnrezident = new global::System.Data.DataColumn("rezident", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrezident);
                this.columnreg_num = new global::System.Data.DataColumn("reg_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_num);
                this.columnreg_dat = new global::System.Data.DataColumn("reg_dat", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_dat);
                this.columnreg_org = new global::System.Data.DataColumn("reg_org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreg_org);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columnregion = new global::System.Data.DataColumn("region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregion);
                this.columncity = new global::System.Data.DataColumn("city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columnstreet = new global::System.Data.DataColumn("street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstreet);
                this.columnbuild = new global::System.Data.DataColumn("build", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbuild);
                this.columnoffice = new global::System.Data.DataColumn("office", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoffice);
                this.columntel = new global::System.Data.DataColumn("tel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntel);
                this.columne_mail = new global::System.Data.DataColumn("e_mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_mail);
                this.columne_addr = new global::System.Data.DataColumn("e_addr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_addr);
                this.columnsved_uchr = new global::System.Data.DataColumn("sved_uchr", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsved_uchr);
                this.columnust_fond = new global::System.Data.DataColumn("ust_fond", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnust_fond);
                this.columnkol_rab = new global::System.Data.DataColumn("kol_rab", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol_rab);
                this.columnscheta = new global::System.Data.DataColumn("scheta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscheta);
                this.columnsved_kontr = new global::System.Data.DataColumn("sved_kontr", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsved_kontr);
                this.columnprofit = new global::System.Data.DataColumn("profit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofit);
                this.columnhistory = new global::System.Data.DataColumn("history", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhistory);
                this.columnaudit_org = new global::System.Data.DataColumn("audit_org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaudit_org);
                this.columnsved_fil = new global::System.Data.DataColumn("sved_fil", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsved_fil);
                this.columnsved_infl = new global::System.Data.DataColumn("sved_infl", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsved_infl);
                this.columnrisk_itog = new global::System.Data.DataColumn("risk_itog", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_itog);
                this.columnrisk_client = new global::System.Data.DataColumn("risk_client", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_client);
                this.columnrisk_oper = new global::System.Data.DataColumn("risk_oper", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_oper);
                this.columnrisk_geo = new global::System.Data.DataColumn("risk_geo", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrisk_geo);
                this.columnh_risk_exp = new global::System.Data.DataColumn("h_risk_exp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnh_risk_exp);
                this.columndecision = new global::System.Data.DataColumn("decision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndecision);
                this.columnresults = new global::System.Data.DataColumn("results", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresults);
                this.columncategory = new global::System.Data.DataColumn("category", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory);
                this.columnprochie = new global::System.Data.DataColumn("prochie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprochie);
                this.columnred_user = new global::System.Data.DataColumn("red_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnred_user);
                this.columndt_set = new global::System.Data.DataColumn("dt_set", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndt_set);
                this.columnlogin = new global::System.Data.DataColumn("login", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin);
                this.columnfile_name = new global::System.Data.DataColumn("file_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfile_name);
                this.columnsheet_name = new global::System.Data.DataColumn("sheet_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsheet_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnunp.AllowDBNull = false;
                this.columnunp.MaxLength = 30;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 255;
                this.columnreg_num.MaxLength = 100;
                this.columnreg_org.MaxLength = 65535;
                this.columnstate.MaxLength = 100;
                this.columnregion.MaxLength = 255;
                this.columncity.MaxLength = 100;
                this.columnstreet.MaxLength = 100;
                this.columnbuild.MaxLength = 50;
                this.columnoffice.MaxLength = 10;
                this.columntel.MaxLength = 255;
                this.columne_mail.MaxLength = 255;
                this.columne_addr.MaxLength = 255;
                this.columnust_fond.MaxLength = 255;
                this.columnscheta.MaxLength = 65535;
                this.columnprofit.MaxLength = 65535;
                this.columnhistory.MaxLength = 65535;
                this.columnaudit_org.MaxLength = 65535;
                this.columnh_risk_exp.MaxLength = 65535;
                this.columndecision.MaxLength = 65535;
                this.columnresults.MaxLength = 65535;
                this.columnprochie.MaxLength = 65535;
                this.columnred_user.MaxLength = 100;
                this.columnlogin.AllowDBNull = false;
                this.columnlogin.MaxLength = 30;
                this.columnfile_name.AllowDBNull = false;
                this.columnfile_name.MaxLength = 30;
                this.columnsheet_name.AllowDBNull = false;
                this.columnsheet_name.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_org_tRow Newbd_org_tRow() {
                return ((bd_org_tRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bd_org_tRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(bd_org_tRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bd_org_tRowChanged != null)) {
                    this.bd_org_tRowChanged(this, new bd_org_tRowChangeEvent(((bd_org_tRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bd_org_tRowChanging != null)) {
                    this.bd_org_tRowChanging(this, new bd_org_tRowChangeEvent(((bd_org_tRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bd_org_tRowDeleted != null)) {
                    this.bd_org_tRowDeleted(this, new bd_org_tRowChangeEvent(((bd_org_tRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bd_org_tRowDeleting != null)) {
                    this.bd_org_tRowDeleting(this, new bd_org_tRowChangeEvent(((bd_org_tRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removebd_org_tRow(bd_org_tRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                cbd_anketsDataSet ds = new cbd_anketsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bd_org_tDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class bd_ipRow : global::System.Data.DataRow {
            
            private bd_ipDataTable tablebd_ip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bd_ipRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebd_ip = ((bd_ipDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablebd_ip.idColumn]));
                }
                set {
                    this[this.tablebd_ip.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string unp {
                get {
                    return ((string)(this[this.tablebd_ip.unpColumn]));
                }
                set {
                    this[this.tablebd_ip.unpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kod_fil {
                get {
                    return ((int)(this[this.tablebd_ip.kod_filColumn]));
                }
                set {
                    this[this.tablebd_ip.kod_filColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool rezident {
                get {
                    return ((bool)(this[this.tablebd_ip.rezidentColumn]));
                }
                set {
                    this[this.tablebd_ip.rezidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pn {
                get {
                    return ((string)(this[this.tablebd_ip.pnColumn]));
                }
                set {
                    this[this.tablebd_ip.pnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string lastname {
                get {
                    return ((string)(this[this.tablebd_ip.lastnameColumn]));
                }
                set {
                    this[this.tablebd_ip.lastnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tablebd_ip.nameColumn]));
                }
                set {
                    this[this.tablebd_ip.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string otch {
                get {
                    return ((string)(this[this.tablebd_ip.otchColumn]));
                }
                set {
                    this[this.tablebd_ip.otchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prev_lastn {
                get {
                    return ((string)(this[this.tablebd_ip.prev_lastnColumn]));
                }
                set {
                    this[this.tablebd_ip.prev_lastnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string state {
                get {
                    return ((string)(this[this.tablebd_ip.stateColumn]));
                }
                set {
                    this[this.tablebd_ip.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime date_birth {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_ip.date_birthColumn]));
                }
                set {
                    this[this.tablebd_ip.date_birthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string place_birth {
                get {
                    return ((string)(this[this.tablebd_ip.place_birthColumn]));
                }
                set {
                    this[this.tablebd_ip.place_birthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string place_reg {
                get {
                    return ((string)(this[this.tablebd_ip.place_regColumn]));
                }
                set {
                    this[this.tablebd_ip.place_regColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte kind_visa {
                get {
                    return ((sbyte)(this[this.tablebd_ip.kind_visaColumn]));
                }
                set {
                    this[this.tablebd_ip.kind_visaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte type_visa {
                get {
                    return ((sbyte)(this[this.tablebd_ip.type_visaColumn]));
                }
                set {
                    this[this.tablebd_ip.type_visaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime term_visa {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_ip.term_visaColumn]));
                }
                set {
                    this[this.tablebd_ip.term_visaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte vid_doc {
                get {
                    return ((sbyte)(this[this.tablebd_ip.vid_docColumn]));
                }
                set {
                    this[this.tablebd_ip.vid_docColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string seria {
                get {
                    return ((string)(this[this.tablebd_ip.seriaColumn]));
                }
                set {
                    this[this.tablebd_ip.seriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string num_doc {
                get {
                    return ((string)(this[this.tablebd_ip.num_docColumn]));
                }
                set {
                    this[this.tablebd_ip.num_docColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reg_org_doc {
                get {
                    return ((string)(this[this.tablebd_ip.reg_org_docColumn]));
                }
                set {
                    this[this.tablebd_ip.reg_org_docColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime reg_dat_doc {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_ip.reg_dat_docColumn]));
                }
                set {
                    this[this.tablebd_ip.reg_dat_docColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reg_num {
                get {
                    return ((string)(this[this.tablebd_ip.reg_numColumn]));
                }
                set {
                    this[this.tablebd_ip.reg_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime reg_dat {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_ip.reg_datColumn]));
                }
                set {
                    this[this.tablebd_ip.reg_datColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reg_org {
                get {
                    return ((string)(this[this.tablebd_ip.reg_orgColumn]));
                }
                set {
                    this[this.tablebd_ip.reg_orgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tel {
                get {
                    return ((string)(this[this.tablebd_ip.telColumn]));
                }
                set {
                    this[this.tablebd_ip.telColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tel_mob {
                get {
                    return ((string)(this[this.tablebd_ip.tel_mobColumn]));
                }
                set {
                    this[this.tablebd_ip.tel_mobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string e_mail {
                get {
                    return ((string)(this[this.tablebd_ip.e_mailColumn]));
                }
                set {
                    this[this.tablebd_ip.e_mailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string e_addr {
                get {
                    return ((string)(this[this.tablebd_ip.e_addrColumn]));
                }
                set {
                    this[this.tablebd_ip.e_addrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string scheta {
                get {
                    return ((string)(this[this.tablebd_ip.schetaColumn]));
                }
                set {
                    this[this.tablebd_ip.schetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string profit {
                get {
                    return ((string)(this[this.tablebd_ip.profitColumn]));
                }
                set {
                    this[this.tablebd_ip.profitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte sved_infl {
                get {
                    return ((sbyte)(this[this.tablebd_ip.sved_inflColumn]));
                }
                set {
                    this[this.tablebd_ip.sved_inflColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_itog {
                get {
                    return ((sbyte)(this[this.tablebd_ip.risk_itogColumn]));
                }
                set {
                    this[this.tablebd_ip.risk_itogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_client {
                get {
                    return ((sbyte)(this[this.tablebd_ip.risk_clientColumn]));
                }
                set {
                    this[this.tablebd_ip.risk_clientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_oper {
                get {
                    return ((sbyte)(this[this.tablebd_ip.risk_operColumn]));
                }
                set {
                    this[this.tablebd_ip.risk_operColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_geo {
                get {
                    return ((sbyte)(this[this.tablebd_ip.risk_geoColumn]));
                }
                set {
                    this[this.tablebd_ip.risk_geoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string h_risk_exp {
                get {
                    return ((string)(this[this.tablebd_ip.h_risk_expColumn]));
                }
                set {
                    this[this.tablebd_ip.h_risk_expColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string decision {
                get {
                    return ((string)(this[this.tablebd_ip.decisionColumn]));
                }
                set {
                    this[this.tablebd_ip.decisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string results {
                get {
                    return ((string)(this[this.tablebd_ip.resultsColumn]));
                }
                set {
                    this[this.tablebd_ip.resultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte category {
                get {
                    return ((sbyte)(this[this.tablebd_ip.categoryColumn]));
                }
                set {
                    this[this.tablebd_ip.categoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prochie {
                get {
                    return ((string)(this[this.tablebd_ip.prochieColumn]));
                }
                set {
                    this[this.tablebd_ip.prochieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string red_user {
                get {
                    return ((string)(this[this.tablebd_ip.red_userColumn]));
                }
                set {
                    this[this.tablebd_ip.red_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dt_set {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_ip.dt_setColumn]));
                }
                set {
                    this[this.tablebd_ip.dt_setColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string login {
                get {
                    return ((string)(this[this.tablebd_ip.loginColumn]));
                }
                set {
                    this[this.tablebd_ip.loginColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class bd_ip_tRow : global::System.Data.DataRow {
            
            private bd_ip_tDataTable tablebd_ip_t;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bd_ip_tRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebd_ip_t = ((bd_ip_tDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablebd_ip_t.idColumn]));
                }
                set {
                    this[this.tablebd_ip_t.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string unp {
                get {
                    return ((string)(this[this.tablebd_ip_t.unpColumn]));
                }
                set {
                    this[this.tablebd_ip_t.unpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kod_fil {
                get {
                    return ((int)(this[this.tablebd_ip_t.kod_filColumn]));
                }
                set {
                    this[this.tablebd_ip_t.kod_filColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool rezident {
                get {
                    return ((bool)(this[this.tablebd_ip_t.rezidentColumn]));
                }
                set {
                    this[this.tablebd_ip_t.rezidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pn {
                get {
                    return ((string)(this[this.tablebd_ip_t.pnColumn]));
                }
                set {
                    this[this.tablebd_ip_t.pnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string lastname {
                get {
                    return ((string)(this[this.tablebd_ip_t.lastnameColumn]));
                }
                set {
                    this[this.tablebd_ip_t.lastnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tablebd_ip_t.nameColumn]));
                }
                set {
                    this[this.tablebd_ip_t.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string otch {
                get {
                    return ((string)(this[this.tablebd_ip_t.otchColumn]));
                }
                set {
                    this[this.tablebd_ip_t.otchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prev_lastn {
                get {
                    return ((string)(this[this.tablebd_ip_t.prev_lastnColumn]));
                }
                set {
                    this[this.tablebd_ip_t.prev_lastnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string state {
                get {
                    return ((string)(this[this.tablebd_ip_t.stateColumn]));
                }
                set {
                    this[this.tablebd_ip_t.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime date_birth {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_ip_t.date_birthColumn]));
                }
                set {
                    this[this.tablebd_ip_t.date_birthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string place_birth {
                get {
                    return ((string)(this[this.tablebd_ip_t.place_birthColumn]));
                }
                set {
                    this[this.tablebd_ip_t.place_birthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string place_reg {
                get {
                    return ((string)(this[this.tablebd_ip_t.place_regColumn]));
                }
                set {
                    this[this.tablebd_ip_t.place_regColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte kind_visa {
                get {
                    return ((sbyte)(this[this.tablebd_ip_t.kind_visaColumn]));
                }
                set {
                    this[this.tablebd_ip_t.kind_visaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte type_visa {
                get {
                    return ((sbyte)(this[this.tablebd_ip_t.type_visaColumn]));
                }
                set {
                    this[this.tablebd_ip_t.type_visaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime term_visa {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_ip_t.term_visaColumn]));
                }
                set {
                    this[this.tablebd_ip_t.term_visaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte vid_doc {
                get {
                    return ((sbyte)(this[this.tablebd_ip_t.vid_docColumn]));
                }
                set {
                    this[this.tablebd_ip_t.vid_docColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string seria {
                get {
                    return ((string)(this[this.tablebd_ip_t.seriaColumn]));
                }
                set {
                    this[this.tablebd_ip_t.seriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string num_doc {
                get {
                    return ((string)(this[this.tablebd_ip_t.num_docColumn]));
                }
                set {
                    this[this.tablebd_ip_t.num_docColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reg_org_doc {
                get {
                    return ((string)(this[this.tablebd_ip_t.reg_org_docColumn]));
                }
                set {
                    this[this.tablebd_ip_t.reg_org_docColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime reg_dat_doc {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_ip_t.reg_dat_docColumn]));
                }
                set {
                    this[this.tablebd_ip_t.reg_dat_docColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reg_num {
                get {
                    return ((string)(this[this.tablebd_ip_t.reg_numColumn]));
                }
                set {
                    this[this.tablebd_ip_t.reg_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime reg_dat {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_ip_t.reg_datColumn]));
                }
                set {
                    this[this.tablebd_ip_t.reg_datColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reg_org {
                get {
                    return ((string)(this[this.tablebd_ip_t.reg_orgColumn]));
                }
                set {
                    this[this.tablebd_ip_t.reg_orgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tel {
                get {
                    return ((string)(this[this.tablebd_ip_t.telColumn]));
                }
                set {
                    this[this.tablebd_ip_t.telColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tel_mob {
                get {
                    return ((string)(this[this.tablebd_ip_t.tel_mobColumn]));
                }
                set {
                    this[this.tablebd_ip_t.tel_mobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string e_mail {
                get {
                    return ((string)(this[this.tablebd_ip_t.e_mailColumn]));
                }
                set {
                    this[this.tablebd_ip_t.e_mailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string e_addr {
                get {
                    return ((string)(this[this.tablebd_ip_t.e_addrColumn]));
                }
                set {
                    this[this.tablebd_ip_t.e_addrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string scheta {
                get {
                    return ((string)(this[this.tablebd_ip_t.schetaColumn]));
                }
                set {
                    this[this.tablebd_ip_t.schetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string profit {
                get {
                    return ((string)(this[this.tablebd_ip_t.profitColumn]));
                }
                set {
                    this[this.tablebd_ip_t.profitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte sved_infl {
                get {
                    return ((sbyte)(this[this.tablebd_ip_t.sved_inflColumn]));
                }
                set {
                    this[this.tablebd_ip_t.sved_inflColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_itog {
                get {
                    return ((sbyte)(this[this.tablebd_ip_t.risk_itogColumn]));
                }
                set {
                    this[this.tablebd_ip_t.risk_itogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_client {
                get {
                    return ((sbyte)(this[this.tablebd_ip_t.risk_clientColumn]));
                }
                set {
                    this[this.tablebd_ip_t.risk_clientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_oper {
                get {
                    return ((sbyte)(this[this.tablebd_ip_t.risk_operColumn]));
                }
                set {
                    this[this.tablebd_ip_t.risk_operColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_geo {
                get {
                    return ((sbyte)(this[this.tablebd_ip_t.risk_geoColumn]));
                }
                set {
                    this[this.tablebd_ip_t.risk_geoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string h_risk_exp {
                get {
                    return ((string)(this[this.tablebd_ip_t.h_risk_expColumn]));
                }
                set {
                    this[this.tablebd_ip_t.h_risk_expColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string decision {
                get {
                    return ((string)(this[this.tablebd_ip_t.decisionColumn]));
                }
                set {
                    this[this.tablebd_ip_t.decisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string results {
                get {
                    return ((string)(this[this.tablebd_ip_t.resultsColumn]));
                }
                set {
                    this[this.tablebd_ip_t.resultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte category {
                get {
                    return ((sbyte)(this[this.tablebd_ip_t.categoryColumn]));
                }
                set {
                    this[this.tablebd_ip_t.categoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prochie {
                get {
                    return ((string)(this[this.tablebd_ip_t.prochieColumn]));
                }
                set {
                    this[this.tablebd_ip_t.prochieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string red_user {
                get {
                    return ((string)(this[this.tablebd_ip_t.red_userColumn]));
                }
                set {
                    this[this.tablebd_ip_t.red_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dt_set {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_ip_t.dt_setColumn]));
                }
                set {
                    this[this.tablebd_ip_t.dt_setColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string login {
                get {
                    return ((string)(this[this.tablebd_ip_t.loginColumn]));
                }
                set {
                    this[this.tablebd_ip_t.loginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string file_name {
                get {
                    return ((string)(this[this.tablebd_ip_t.file_nameColumn]));
                }
                set {
                    this[this.tablebd_ip_t.file_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sheet_name {
                get {
                    return ((string)(this[this.tablebd_ip_t.sheet_nameColumn]));
                }
                set {
                    this[this.tablebd_ip_t.sheet_nameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class bd_orgRow : global::System.Data.DataRow {
            
            private bd_orgDataTable tablebd_org;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bd_orgRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebd_org = ((bd_orgDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablebd_org.idColumn]));
                }
                set {
                    this[this.tablebd_org.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string unp {
                get {
                    return ((string)(this[this.tablebd_org.unpColumn]));
                }
                set {
                    this[this.tablebd_org.unpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tablebd_org.nameColumn]));
                }
                set {
                    this[this.tablebd_org.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool main {
                get {
                    return ((bool)(this[this.tablebd_org.mainColumn]));
                }
                set {
                    this[this.tablebd_org.mainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kod_fil {
                get {
                    return ((int)(this[this.tablebd_org.kod_filColumn]));
                }
                set {
                    this[this.tablebd_org.kod_filColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool rezident {
                get {
                    return ((bool)(this[this.tablebd_org.rezidentColumn]));
                }
                set {
                    this[this.tablebd_org.rezidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reg_num {
                get {
                    return ((string)(this[this.tablebd_org.reg_numColumn]));
                }
                set {
                    this[this.tablebd_org.reg_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime reg_dat {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_org.reg_datColumn]));
                }
                set {
                    this[this.tablebd_org.reg_datColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reg_org {
                get {
                    return ((string)(this[this.tablebd_org.reg_orgColumn]));
                }
                set {
                    this[this.tablebd_org.reg_orgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string state {
                get {
                    return ((string)(this[this.tablebd_org.stateColumn]));
                }
                set {
                    this[this.tablebd_org.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string region {
                get {
                    return ((string)(this[this.tablebd_org.regionColumn]));
                }
                set {
                    this[this.tablebd_org.regionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string city {
                get {
                    return ((string)(this[this.tablebd_org.cityColumn]));
                }
                set {
                    this[this.tablebd_org.cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string street {
                get {
                    return ((string)(this[this.tablebd_org.streetColumn]));
                }
                set {
                    this[this.tablebd_org.streetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string build {
                get {
                    return ((string)(this[this.tablebd_org.buildColumn]));
                }
                set {
                    this[this.tablebd_org.buildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string office {
                get {
                    return ((string)(this[this.tablebd_org.officeColumn]));
                }
                set {
                    this[this.tablebd_org.officeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tel {
                get {
                    return ((string)(this[this.tablebd_org.telColumn]));
                }
                set {
                    this[this.tablebd_org.telColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string e_mail {
                get {
                    return ((string)(this[this.tablebd_org.e_mailColumn]));
                }
                set {
                    this[this.tablebd_org.e_mailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string e_addr {
                get {
                    return ((string)(this[this.tablebd_org.e_addrColumn]));
                }
                set {
                    this[this.tablebd_org.e_addrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte sved_uchr {
                get {
                    return ((sbyte)(this[this.tablebd_org.sved_uchrColumn]));
                }
                set {
                    this[this.tablebd_org.sved_uchrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ust_fond {
                get {
                    return ((string)(this[this.tablebd_org.ust_fondColumn]));
                }
                set {
                    this[this.tablebd_org.ust_fondColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kol_rab {
                get {
                    return ((int)(this[this.tablebd_org.kol_rabColumn]));
                }
                set {
                    this[this.tablebd_org.kol_rabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string scheta {
                get {
                    return ((string)(this[this.tablebd_org.schetaColumn]));
                }
                set {
                    this[this.tablebd_org.schetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte sved_kontr {
                get {
                    return ((sbyte)(this[this.tablebd_org.sved_kontrColumn]));
                }
                set {
                    this[this.tablebd_org.sved_kontrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string profit {
                get {
                    return ((string)(this[this.tablebd_org.profitColumn]));
                }
                set {
                    this[this.tablebd_org.profitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string history {
                get {
                    return ((string)(this[this.tablebd_org.historyColumn]));
                }
                set {
                    this[this.tablebd_org.historyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string audit_org {
                get {
                    return ((string)(this[this.tablebd_org.audit_orgColumn]));
                }
                set {
                    this[this.tablebd_org.audit_orgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte sved_fil {
                get {
                    return ((sbyte)(this[this.tablebd_org.sved_filColumn]));
                }
                set {
                    this[this.tablebd_org.sved_filColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte sved_infl {
                get {
                    return ((sbyte)(this[this.tablebd_org.sved_inflColumn]));
                }
                set {
                    this[this.tablebd_org.sved_inflColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_itog {
                get {
                    return ((sbyte)(this[this.tablebd_org.risk_itogColumn]));
                }
                set {
                    this[this.tablebd_org.risk_itogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_client {
                get {
                    return ((sbyte)(this[this.tablebd_org.risk_clientColumn]));
                }
                set {
                    this[this.tablebd_org.risk_clientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_oper {
                get {
                    return ((sbyte)(this[this.tablebd_org.risk_operColumn]));
                }
                set {
                    this[this.tablebd_org.risk_operColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_geo {
                get {
                    return ((sbyte)(this[this.tablebd_org.risk_geoColumn]));
                }
                set {
                    this[this.tablebd_org.risk_geoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string h_risk_exp {
                get {
                    return ((string)(this[this.tablebd_org.h_risk_expColumn]));
                }
                set {
                    this[this.tablebd_org.h_risk_expColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string decision {
                get {
                    return ((string)(this[this.tablebd_org.decisionColumn]));
                }
                set {
                    this[this.tablebd_org.decisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string results {
                get {
                    return ((string)(this[this.tablebd_org.resultsColumn]));
                }
                set {
                    this[this.tablebd_org.resultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte category {
                get {
                    return ((sbyte)(this[this.tablebd_org.categoryColumn]));
                }
                set {
                    this[this.tablebd_org.categoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prochie {
                get {
                    return ((string)(this[this.tablebd_org.prochieColumn]));
                }
                set {
                    this[this.tablebd_org.prochieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string red_user {
                get {
                    return ((string)(this[this.tablebd_org.red_userColumn]));
                }
                set {
                    this[this.tablebd_org.red_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dt_set {
                get {
                    return ((global::System.DateTime)(this[this.tablebd_org.dt_setColumn]));
                }
                set {
                    this[this.tablebd_org.dt_setColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string login {
                get {
                    return ((string)(this[this.tablebd_org.loginColumn]));
                }
                set {
                    this[this.tablebd_org.loginColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class bd_org_tRow : global::System.Data.DataRow {
            
            private bd_org_tDataTable tablebd_org_t;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bd_org_tRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebd_org_t = ((bd_org_tDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablebd_org_t.idColumn]));
                }
                set {
                    this[this.tablebd_org_t.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string unp {
                get {
                    return ((string)(this[this.tablebd_org_t.unpColumn]));
                }
                set {
                    this[this.tablebd_org_t.unpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tablebd_org_t.nameColumn]));
                }
                set {
                    this[this.tablebd_org_t.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool main {
                get {
                    try {
                        return ((bool)(this[this.tablebd_org_t.mainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'main\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.mainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kod_fil {
                get {
                    try {
                        return ((int)(this[this.tablebd_org_t.kod_filColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kod_fil\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.kod_filColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool rezident {
                get {
                    try {
                        return ((bool)(this[this.tablebd_org_t.rezidentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rezident\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.rezidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reg_num {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.reg_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reg_num\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.reg_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime reg_dat {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablebd_org_t.reg_datColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reg_dat\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.reg_datColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reg_org {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.reg_orgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reg_org\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.reg_orgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string state {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string region {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.regionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'region\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.regionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string city {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'city\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string street {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.streetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'street\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.streetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string build {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.buildColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'build\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.buildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string office {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.officeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'office\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.officeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tel {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.telColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tel\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.telColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string e_mail {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.e_mailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'e_mail\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.e_mailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string e_addr {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.e_addrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'e_addr\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.e_addrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte sved_uchr {
                get {
                    try {
                        return ((sbyte)(this[this.tablebd_org_t.sved_uchrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sved_uchr\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.sved_uchrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ust_fond {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.ust_fondColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ust_fond\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.ust_fondColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kol_rab {
                get {
                    try {
                        return ((int)(this[this.tablebd_org_t.kol_rabColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kol_rab\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.kol_rabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string scheta {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.schetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'scheta\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.schetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte sved_kontr {
                get {
                    try {
                        return ((sbyte)(this[this.tablebd_org_t.sved_kontrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sved_kontr\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.sved_kontrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string profit {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.profitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'profit\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.profitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string history {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.historyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'history\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.historyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string audit_org {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.audit_orgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'audit_org\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.audit_orgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte sved_fil {
                get {
                    try {
                        return ((sbyte)(this[this.tablebd_org_t.sved_filColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sved_fil\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.sved_filColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte sved_infl {
                get {
                    try {
                        return ((sbyte)(this[this.tablebd_org_t.sved_inflColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sved_infl\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.sved_inflColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_itog {
                get {
                    try {
                        return ((sbyte)(this[this.tablebd_org_t.risk_itogColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'risk_itog\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.risk_itogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_client {
                get {
                    try {
                        return ((sbyte)(this[this.tablebd_org_t.risk_clientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'risk_client\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.risk_clientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_oper {
                get {
                    try {
                        return ((sbyte)(this[this.tablebd_org_t.risk_operColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'risk_oper\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.risk_operColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte risk_geo {
                get {
                    try {
                        return ((sbyte)(this[this.tablebd_org_t.risk_geoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'risk_geo\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.risk_geoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string h_risk_exp {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.h_risk_expColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'h_risk_exp\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.h_risk_expColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string decision {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.decisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'decision\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.decisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string results {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.resultsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'results\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.resultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte category {
                get {
                    try {
                        return ((sbyte)(this[this.tablebd_org_t.categoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'category\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.categoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prochie {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.prochieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prochie\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.prochieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string red_user {
                get {
                    try {
                        return ((string)(this[this.tablebd_org_t.red_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'red_user\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.red_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dt_set {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablebd_org_t.dt_setColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dt_set\' in table \'bd_org_t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebd_org_t.dt_setColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string login {
                get {
                    return ((string)(this[this.tablebd_org_t.loginColumn]));
                }
                set {
                    this[this.tablebd_org_t.loginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string file_name {
                get {
                    return ((string)(this[this.tablebd_org_t.file_nameColumn]));
                }
                set {
                    this[this.tablebd_org_t.file_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sheet_name {
                get {
                    return ((string)(this[this.tablebd_org_t.sheet_nameColumn]));
                }
                set {
                    this[this.tablebd_org_t.sheet_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmainNull() {
                return this.IsNull(this.tablebd_org_t.mainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmainNull() {
                this[this.tablebd_org_t.mainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iskod_filNull() {
                return this.IsNull(this.tablebd_org_t.kod_filColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setkod_filNull() {
                this[this.tablebd_org_t.kod_filColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrezidentNull() {
                return this.IsNull(this.tablebd_org_t.rezidentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrezidentNull() {
                this[this.tablebd_org_t.rezidentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isreg_numNull() {
                return this.IsNull(this.tablebd_org_t.reg_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setreg_numNull() {
                this[this.tablebd_org_t.reg_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isreg_datNull() {
                return this.IsNull(this.tablebd_org_t.reg_datColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setreg_datNull() {
                this[this.tablebd_org_t.reg_datColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isreg_orgNull() {
                return this.IsNull(this.tablebd_org_t.reg_orgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setreg_orgNull() {
                this[this.tablebd_org_t.reg_orgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstateNull() {
                return this.IsNull(this.tablebd_org_t.stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstateNull() {
                this[this.tablebd_org_t.stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregionNull() {
                return this.IsNull(this.tablebd_org_t.regionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregionNull() {
                this[this.tablebd_org_t.regionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscityNull() {
                return this.IsNull(this.tablebd_org_t.cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcityNull() {
                this[this.tablebd_org_t.cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstreetNull() {
                return this.IsNull(this.tablebd_org_t.streetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstreetNull() {
                this[this.tablebd_org_t.streetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbuildNull() {
                return this.IsNull(this.tablebd_org_t.buildColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbuildNull() {
                this[this.tablebd_org_t.buildColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsofficeNull() {
                return this.IsNull(this.tablebd_org_t.officeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetofficeNull() {
                this[this.tablebd_org_t.officeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstelNull() {
                return this.IsNull(this.tablebd_org_t.telColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettelNull() {
                this[this.tablebd_org_t.telColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ise_mailNull() {
                return this.IsNull(this.tablebd_org_t.e_mailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sete_mailNull() {
                this[this.tablebd_org_t.e_mailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ise_addrNull() {
                return this.IsNull(this.tablebd_org_t.e_addrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sete_addrNull() {
                this[this.tablebd_org_t.e_addrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issved_uchrNull() {
                return this.IsNull(this.tablebd_org_t.sved_uchrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsved_uchrNull() {
                this[this.tablebd_org_t.sved_uchrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isust_fondNull() {
                return this.IsNull(this.tablebd_org_t.ust_fondColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setust_fondNull() {
                this[this.tablebd_org_t.ust_fondColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iskol_rabNull() {
                return this.IsNull(this.tablebd_org_t.kol_rabColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setkol_rabNull() {
                this[this.tablebd_org_t.kol_rabColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsschetaNull() {
                return this.IsNull(this.tablebd_org_t.schetaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetschetaNull() {
                this[this.tablebd_org_t.schetaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issved_kontrNull() {
                return this.IsNull(this.tablebd_org_t.sved_kontrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsved_kontrNull() {
                this[this.tablebd_org_t.sved_kontrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprofitNull() {
                return this.IsNull(this.tablebd_org_t.profitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprofitNull() {
                this[this.tablebd_org_t.profitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IshistoryNull() {
                return this.IsNull(this.tablebd_org_t.historyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SethistoryNull() {
                this[this.tablebd_org_t.historyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isaudit_orgNull() {
                return this.IsNull(this.tablebd_org_t.audit_orgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setaudit_orgNull() {
                this[this.tablebd_org_t.audit_orgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issved_filNull() {
                return this.IsNull(this.tablebd_org_t.sved_filColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsved_filNull() {
                this[this.tablebd_org_t.sved_filColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issved_inflNull() {
                return this.IsNull(this.tablebd_org_t.sved_inflColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsved_inflNull() {
                this[this.tablebd_org_t.sved_inflColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isrisk_itogNull() {
                return this.IsNull(this.tablebd_org_t.risk_itogColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setrisk_itogNull() {
                this[this.tablebd_org_t.risk_itogColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isrisk_clientNull() {
                return this.IsNull(this.tablebd_org_t.risk_clientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setrisk_clientNull() {
                this[this.tablebd_org_t.risk_clientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isrisk_operNull() {
                return this.IsNull(this.tablebd_org_t.risk_operColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setrisk_operNull() {
                this[this.tablebd_org_t.risk_operColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isrisk_geoNull() {
                return this.IsNull(this.tablebd_org_t.risk_geoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setrisk_geoNull() {
                this[this.tablebd_org_t.risk_geoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ish_risk_expNull() {
                return this.IsNull(this.tablebd_org_t.h_risk_expColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Seth_risk_expNull() {
                this[this.tablebd_org_t.h_risk_expColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdecisionNull() {
                return this.IsNull(this.tablebd_org_t.decisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdecisionNull() {
                this[this.tablebd_org_t.decisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsresultsNull() {
                return this.IsNull(this.tablebd_org_t.resultsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetresultsNull() {
                this[this.tablebd_org_t.resultsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscategoryNull() {
                return this.IsNull(this.tablebd_org_t.categoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcategoryNull() {
                this[this.tablebd_org_t.categoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprochieNull() {
                return this.IsNull(this.tablebd_org_t.prochieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprochieNull() {
                this[this.tablebd_org_t.prochieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isred_userNull() {
                return this.IsNull(this.tablebd_org_t.red_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setred_userNull() {
                this[this.tablebd_org_t.red_userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdt_setNull() {
                return this.IsNull(this.tablebd_org_t.dt_setColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdt_setNull() {
                this[this.tablebd_org_t.dt_setColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class bd_ipRowChangeEvent : global::System.EventArgs {
            
            private bd_ipRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ipRowChangeEvent(bd_ipRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ipRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class bd_ip_tRowChangeEvent : global::System.EventArgs {
            
            private bd_ip_tRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ip_tRowChangeEvent(bd_ip_tRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_ip_tRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class bd_orgRowChangeEvent : global::System.EventArgs {
            
            private bd_orgRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_orgRowChangeEvent(bd_orgRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_orgRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class bd_org_tRowChangeEvent : global::System.EventArgs {
            
            private bd_org_tRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_org_tRowChangeEvent(bd_org_tRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bd_org_tRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Excel2Ankets.cbd_anketsDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class bd_ipTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bd_ipTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "bd_ip";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("unp", "unp");
            tableMapping.ColumnMappings.Add("kod_fil", "kod_fil");
            tableMapping.ColumnMappings.Add("rezident", "rezident");
            tableMapping.ColumnMappings.Add("pn", "pn");
            tableMapping.ColumnMappings.Add("lastname", "lastname");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("otch", "otch");
            tableMapping.ColumnMappings.Add("prev_lastn", "prev_lastn");
            tableMapping.ColumnMappings.Add("state", "state");
            tableMapping.ColumnMappings.Add("date_birth", "date_birth");
            tableMapping.ColumnMappings.Add("place_birth", "place_birth");
            tableMapping.ColumnMappings.Add("place_reg", "place_reg");
            tableMapping.ColumnMappings.Add("kind_visa", "kind_visa");
            tableMapping.ColumnMappings.Add("type_visa", "type_visa");
            tableMapping.ColumnMappings.Add("term_visa", "term_visa");
            tableMapping.ColumnMappings.Add("vid_doc", "vid_doc");
            tableMapping.ColumnMappings.Add("seria", "seria");
            tableMapping.ColumnMappings.Add("num_doc", "num_doc");
            tableMapping.ColumnMappings.Add("reg_org_doc", "reg_org_doc");
            tableMapping.ColumnMappings.Add("reg_dat_doc", "reg_dat_doc");
            tableMapping.ColumnMappings.Add("reg_num", "reg_num");
            tableMapping.ColumnMappings.Add("reg_dat", "reg_dat");
            tableMapping.ColumnMappings.Add("reg_org", "reg_org");
            tableMapping.ColumnMappings.Add("tel", "tel");
            tableMapping.ColumnMappings.Add("tel_mob", "tel_mob");
            tableMapping.ColumnMappings.Add("e_mail", "e_mail");
            tableMapping.ColumnMappings.Add("e_addr", "e_addr");
            tableMapping.ColumnMappings.Add("scheta", "scheta");
            tableMapping.ColumnMappings.Add("profit", "profit");
            tableMapping.ColumnMappings.Add("sved_infl", "sved_infl");
            tableMapping.ColumnMappings.Add("risk_itog", "risk_itog");
            tableMapping.ColumnMappings.Add("risk_client", "risk_client");
            tableMapping.ColumnMappings.Add("risk_oper", "risk_oper");
            tableMapping.ColumnMappings.Add("risk_geo", "risk_geo");
            tableMapping.ColumnMappings.Add("h_risk_exp", "h_risk_exp");
            tableMapping.ColumnMappings.Add("decision", "decision");
            tableMapping.ColumnMappings.Add("results", "results");
            tableMapping.ColumnMappings.Add("category", "category");
            tableMapping.ColumnMappings.Add("prochie", "prochie");
            tableMapping.ColumnMappings.Add("red_user", "red_user");
            tableMapping.ColumnMappings.Add("dt_set", "dt_set");
            tableMapping.ColumnMappings.Add("login", "login");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `bd_ip` WHERE ((`id` = @Original_id) AND (`unp` = @Original_unp) AND (`kod_fil` = @Original_kod_fil) AND (`rezident` = @Original_rezident) AND (`pn` = @Original_pn) AND (`lastname` = @Original_lastname) AND (`name` = @Original_name) AND (`otch` = @Original_otch) AND (`prev_lastn` = @Original_prev_lastn) AND (`state` = @Original_state) AND (`date_birth` = @Original_date_birth) AND (`place_birth` = @Original_place_birth) AND (`place_reg` = @Original_place_reg) AND (`kind_visa` = @Original_kind_visa) AND (`type_visa` = @Original_type_visa) AND (`term_visa` = @Original_term_visa) AND (`vid_doc` = @Original_vid_doc) AND (`seria` = @Original_seria) AND (`num_doc` = @Original_num_doc) AND (`reg_dat_doc` = @Original_reg_dat_doc) AND (`reg_num` = @Original_reg_num) AND (`reg_dat` = @Original_reg_dat) AND (`tel` = @Original_tel) AND (`tel_mob` = @Original_tel_mob) AND (`e_mail` = @Original_e_mail) AND (`e_addr` = @Original_e_addr) AND (`sved_infl` = @Original_sved_infl) AND (`risk_itog` = @Original_risk_itog) AND (`risk_client` = @Original_risk_client) AND (`risk_oper` = @Original_risk_oper) AND (`risk_geo` = @Original_risk_geo) AND (`category` = @Original_category) AND (`red_user` = @Original_red_user) AND (`dt_set` = @Original_dt_set) AND (`login` = @Original_login))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lastname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lastname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_otch";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "otch";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prev_lastn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prev_lastn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date_birth";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date_birth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_place_birth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_birth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_place_reg";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_reg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kind_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "kind_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_type_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "type_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_term_visa";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "term_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vid_doc";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "vid_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_seria";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "seria";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_num_doc";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "num_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat_doc";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel_mob";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel_mob";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `bd_ip` (`unp`, `kod_fil`, `rezident`, `pn`, `lastname`, `name`, `otch`, `prev_lastn`, `state`, `date_birth`, `place_birth`, `place_reg`, `kind_visa`, `type_visa`, `term_visa`, `vid_doc`, `seria`, `num_doc`, `reg_org_doc`, `reg_dat_doc`, `reg_num`, `reg_dat`, `reg_org`, `tel`, `tel_mob`, `e_mail`, `e_addr`, `scheta`, `profit`, `sved_infl`, `risk_itog`, `risk_client`, `risk_oper`, `risk_geo`, `h_risk_exp`, `decision`, `results`, `category`, `prochie`, `red_user`, `dt_set`, `login`) VALUES (@unp, @kod_fil, @rezident, @pn, @lastname, @name, @otch, @prev_lastn, @state, @date_birth, @place_birth, @place_reg, @kind_visa, @type_visa, @term_visa, @vid_doc, @seria, @num_doc, @reg_org_doc, @reg_dat_doc, @reg_num, @reg_dat, @reg_org, @tel, @tel_mob, @e_mail, @e_addr, @scheta, @profit, @sved_infl, @risk_itog, @risk_client, @risk_oper, @risk_geo, @h_risk_exp, @decision, @results, @category, @prochie, @red_user, @dt_set, @login)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lastname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lastname";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@otch";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "otch";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prev_lastn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prev_lastn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date_birth";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date_birth";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@place_birth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_birth";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@place_reg";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_reg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kind_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "kind_visa";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@type_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "type_visa";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@term_visa";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "term_visa";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vid_doc";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "vid_doc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@seria";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "seria";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@num_doc";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "num_doc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org_doc";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org_doc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat_doc";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat_doc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel_mob";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel_mob";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@scheta";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "scheta";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@profit";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "profit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@h_risk_exp";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "h_risk_exp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@decision";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decision";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@results";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "results";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prochie";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prochie";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `bd_ip` SET `unp` = @unp, `kod_fil` = @kod_fil, `rezident` = @rezident, `p" +
                "n` = @pn, `lastname` = @lastname, `name` = @name, `otch` = @otch, `prev_lastn` =" +
                " @prev_lastn, `state` = @state, `date_birth` = @date_birth, `place_birth` = @pla" +
                "ce_birth, `place_reg` = @place_reg, `kind_visa` = @kind_visa, `type_visa` = @typ" +
                "e_visa, `term_visa` = @term_visa, `vid_doc` = @vid_doc, `seria` = @seria, `num_d" +
                "oc` = @num_doc, `reg_org_doc` = @reg_org_doc, `reg_dat_doc` = @reg_dat_doc, `reg" +
                "_num` = @reg_num, `reg_dat` = @reg_dat, `reg_org` = @reg_org, `tel` = @tel, `tel" +
                "_mob` = @tel_mob, `e_mail` = @e_mail, `e_addr` = @e_addr, `scheta` = @scheta, `p" +
                "rofit` = @profit, `sved_infl` = @sved_infl, `risk_itog` = @risk_itog, `risk_clie" +
                "nt` = @risk_client, `risk_oper` = @risk_oper, `risk_geo` = @risk_geo, `h_risk_ex" +
                "p` = @h_risk_exp, `decision` = @decision, `results` = @results, `category` = @ca" +
                "tegory, `prochie` = @prochie, `red_user` = @red_user, `dt_set` = @dt_set, `login" +
                "` = @login WHERE ((`id` = @Original_id) AND (`unp` = @Original_unp) AND (`kod_fi" +
                "l` = @Original_kod_fil) AND (`rezident` = @Original_rezident) AND (`pn` = @Origi" +
                "nal_pn) AND (`lastname` = @Original_lastname) AND (`name` = @Original_name) AND " +
                "(`otch` = @Original_otch) AND (`prev_lastn` = @Original_prev_lastn) AND (`state`" +
                " = @Original_state) AND (`date_birth` = @Original_date_birth) AND (`place_birth`" +
                " = @Original_place_birth) AND (`place_reg` = @Original_place_reg) AND (`kind_vis" +
                "a` = @Original_kind_visa) AND (`type_visa` = @Original_type_visa) AND (`term_vis" +
                "a` = @Original_term_visa) AND (`vid_doc` = @Original_vid_doc) AND (`seria` = @Or" +
                "iginal_seria) AND (`num_doc` = @Original_num_doc) AND (`reg_dat_doc` = @Original" +
                "_reg_dat_doc) AND (`reg_num` = @Original_reg_num) AND (`reg_dat` = @Original_reg" +
                "_dat) AND (`tel` = @Original_tel) AND (`tel_mob` = @Original_tel_mob) AND (`e_ma" +
                "il` = @Original_e_mail) AND (`e_addr` = @Original_e_addr) AND (`sved_infl` = @Or" +
                "iginal_sved_infl) AND (`risk_itog` = @Original_risk_itog) AND (`risk_client` = @" +
                "Original_risk_client) AND (`risk_oper` = @Original_risk_oper) AND (`risk_geo` = " +
                "@Original_risk_geo) AND (`category` = @Original_category) AND (`red_user` = @Ori" +
                "ginal_red_user) AND (`dt_set` = @Original_dt_set) AND (`login` = @Original_login" +
                "))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lastname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lastname";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@otch";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "otch";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prev_lastn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prev_lastn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date_birth";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date_birth";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@place_birth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_birth";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@place_reg";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_reg";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kind_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "kind_visa";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@type_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "type_visa";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@term_visa";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "term_visa";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vid_doc";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "vid_doc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@seria";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "seria";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@num_doc";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "num_doc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org_doc";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org_doc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat_doc";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat_doc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel_mob";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel_mob";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@scheta";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "scheta";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@profit";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "profit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@h_risk_exp";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "h_risk_exp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@decision";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decision";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@results";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "results";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prochie";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prochie";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lastname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lastname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_otch";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "otch";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prev_lastn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prev_lastn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date_birth";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date_birth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_place_birth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_birth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_place_reg";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_reg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kind_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "kind_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_type_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "type_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_term_visa";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "term_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vid_doc";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "vid_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_seria";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "seria";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_num_doc";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "num_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat_doc";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel_mob";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel_mob";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Excel2Ankets.Properties.Settings.Default.cbd_anketsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `id`, `unp`, `kod_fil`, `rezident`, `pn`, `lastname`, `name`, `otch`, `prev_lastn`, `state`, `date_birth`, `place_birth`, `place_reg`, `kind_visa`, `type_visa`, `term_visa`, `vid_doc`, `seria`, `num_doc`, `reg_org_doc`, `reg_dat_doc`, `reg_num`, `reg_dat`, `reg_org`, `tel`, `tel_mob`, `e_mail`, `e_addr`, `scheta`, `profit`, `sved_infl`, `risk_itog`, `risk_client`, `risk_oper`, `risk_geo`, `h_risk_exp`, `decision`, `results`, `category`, `prochie`, `red_user`, `dt_set`, `login` FROM `bd_ip`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(cbd_anketsDataSet.bd_ipDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual cbd_anketsDataSet.bd_ipDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            cbd_anketsDataSet.bd_ipDataTable dataTable = new cbd_anketsDataSet.bd_ipDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(cbd_anketsDataSet.bd_ipDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(cbd_anketsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "bd_ip");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_unp, 
                    int Original_kod_fil, 
                    byte Original_rezident, 
                    string Original_pn, 
                    string Original_lastname, 
                    string Original_name, 
                    string Original_otch, 
                    string Original_prev_lastn, 
                    string Original_state, 
                    System.DateTime Original_date_birth, 
                    string Original_place_birth, 
                    string Original_place_reg, 
                    byte Original_kind_visa, 
                    byte Original_type_visa, 
                    System.DateTime Original_term_visa, 
                    byte Original_vid_doc, 
                    string Original_seria, 
                    string Original_num_doc, 
                    System.DateTime Original_reg_dat_doc, 
                    string Original_reg_num, 
                    System.DateTime Original_reg_dat, 
                    string Original_tel, 
                    string Original_tel_mob, 
                    string Original_e_mail, 
                    string Original_e_addr, 
                    byte Original_sved_infl, 
                    byte Original_risk_itog, 
                    byte Original_risk_client, 
                    byte Original_risk_oper, 
                    byte Original_risk_geo, 
                    byte Original_category, 
                    string Original_red_user, 
                    System.DateTime Original_dt_set, 
                    string Original_login) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_unp == null)) {
                throw new global::System.ArgumentNullException("Original_unp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_unp));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_kod_fil));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_rezident));
            if ((Original_pn == null)) {
                throw new global::System.ArgumentNullException("Original_pn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_pn));
            }
            if ((Original_lastname == null)) {
                throw new global::System.ArgumentNullException("Original_lastname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_lastname));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_name));
            }
            if ((Original_otch == null)) {
                throw new global::System.ArgumentNullException("Original_otch");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_otch));
            }
            if ((Original_prev_lastn == null)) {
                throw new global::System.ArgumentNullException("Original_prev_lastn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_prev_lastn));
            }
            if ((Original_state == null)) {
                throw new global::System.ArgumentNullException("Original_state");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_state));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_date_birth));
            if ((Original_place_birth == null)) {
                throw new global::System.ArgumentNullException("Original_place_birth");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_place_birth));
            }
            if ((Original_place_reg == null)) {
                throw new global::System.ArgumentNullException("Original_place_reg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_place_reg));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((byte)(Original_kind_visa));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((byte)(Original_type_visa));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_term_visa));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((byte)(Original_vid_doc));
            if ((Original_seria == null)) {
                throw new global::System.ArgumentNullException("Original_seria");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_seria));
            }
            if ((Original_num_doc == null)) {
                throw new global::System.ArgumentNullException("Original_num_doc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_num_doc));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_reg_dat_doc));
            if ((Original_reg_num == null)) {
                throw new global::System.ArgumentNullException("Original_reg_num");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_reg_num));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_reg_dat));
            if ((Original_tel == null)) {
                throw new global::System.ArgumentNullException("Original_tel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_tel));
            }
            if ((Original_tel_mob == null)) {
                throw new global::System.ArgumentNullException("Original_tel_mob");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_tel_mob));
            }
            if ((Original_e_mail == null)) {
                throw new global::System.ArgumentNullException("Original_e_mail");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_e_mail));
            }
            if ((Original_e_addr == null)) {
                throw new global::System.ArgumentNullException("Original_e_addr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_e_addr));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((byte)(Original_sved_infl));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((byte)(Original_risk_itog));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((byte)(Original_risk_client));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((byte)(Original_risk_oper));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((byte)(Original_risk_geo));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((byte)(Original_category));
            if ((Original_red_user == null)) {
                throw new global::System.ArgumentNullException("Original_red_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_red_user));
            }
            this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_dt_set));
            if ((Original_login == null)) {
                throw new global::System.ArgumentNullException("Original_login");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_login));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string unp, 
                    int kod_fil, 
                    byte rezident, 
                    string pn, 
                    string lastname, 
                    string name, 
                    string otch, 
                    string prev_lastn, 
                    string state, 
                    System.DateTime date_birth, 
                    string place_birth, 
                    string place_reg, 
                    byte kind_visa, 
                    byte type_visa, 
                    System.DateTime term_visa, 
                    byte vid_doc, 
                    string seria, 
                    string num_doc, 
                    string reg_org_doc, 
                    System.DateTime reg_dat_doc, 
                    string reg_num, 
                    System.DateTime reg_dat, 
                    string reg_org, 
                    string tel, 
                    string tel_mob, 
                    string e_mail, 
                    string e_addr, 
                    string scheta, 
                    string profit, 
                    byte sved_infl, 
                    byte risk_itog, 
                    byte risk_client, 
                    byte risk_oper, 
                    byte risk_geo, 
                    string h_risk_exp, 
                    string decision, 
                    string results, 
                    byte category, 
                    string prochie, 
                    string red_user, 
                    System.DateTime dt_set, 
                    string login) {
            if ((unp == null)) {
                throw new global::System.ArgumentNullException("unp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(unp));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(kod_fil));
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(rezident));
            if ((pn == null)) {
                throw new global::System.ArgumentNullException("pn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(pn));
            }
            if ((lastname == null)) {
                throw new global::System.ArgumentNullException("lastname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(lastname));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(name));
            }
            if ((otch == null)) {
                throw new global::System.ArgumentNullException("otch");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(otch));
            }
            if ((prev_lastn == null)) {
                throw new global::System.ArgumentNullException("prev_lastn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(prev_lastn));
            }
            if ((state == null)) {
                throw new global::System.ArgumentNullException("state");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(state));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(date_birth));
            if ((place_birth == null)) {
                throw new global::System.ArgumentNullException("place_birth");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(place_birth));
            }
            if ((place_reg == null)) {
                throw new global::System.ArgumentNullException("place_reg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(place_reg));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((byte)(kind_visa));
            this.Adapter.InsertCommand.Parameters[13].Value = ((byte)(type_visa));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(term_visa));
            this.Adapter.InsertCommand.Parameters[15].Value = ((byte)(vid_doc));
            if ((seria == null)) {
                throw new global::System.ArgumentNullException("seria");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(seria));
            }
            if ((num_doc == null)) {
                throw new global::System.ArgumentNullException("num_doc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(num_doc));
            }
            if ((reg_org_doc == null)) {
                throw new global::System.ArgumentNullException("reg_org_doc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(reg_org_doc));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(reg_dat_doc));
            if ((reg_num == null)) {
                throw new global::System.ArgumentNullException("reg_num");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(reg_num));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(reg_dat));
            if ((reg_org == null)) {
                throw new global::System.ArgumentNullException("reg_org");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(reg_org));
            }
            if ((tel == null)) {
                throw new global::System.ArgumentNullException("tel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(tel));
            }
            if ((tel_mob == null)) {
                throw new global::System.ArgumentNullException("tel_mob");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(tel_mob));
            }
            if ((e_mail == null)) {
                throw new global::System.ArgumentNullException("e_mail");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(e_mail));
            }
            if ((e_addr == null)) {
                throw new global::System.ArgumentNullException("e_addr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(e_addr));
            }
            if ((scheta == null)) {
                throw new global::System.ArgumentNullException("scheta");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(scheta));
            }
            if ((profit == null)) {
                throw new global::System.ArgumentNullException("profit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(profit));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((byte)(sved_infl));
            this.Adapter.InsertCommand.Parameters[30].Value = ((byte)(risk_itog));
            this.Adapter.InsertCommand.Parameters[31].Value = ((byte)(risk_client));
            this.Adapter.InsertCommand.Parameters[32].Value = ((byte)(risk_oper));
            this.Adapter.InsertCommand.Parameters[33].Value = ((byte)(risk_geo));
            if ((h_risk_exp == null)) {
                throw new global::System.ArgumentNullException("h_risk_exp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(h_risk_exp));
            }
            if ((decision == null)) {
                throw new global::System.ArgumentNullException("decision");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(decision));
            }
            if ((results == null)) {
                throw new global::System.ArgumentNullException("results");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(results));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((byte)(category));
            if ((prochie == null)) {
                throw new global::System.ArgumentNullException("prochie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(prochie));
            }
            if ((red_user == null)) {
                throw new global::System.ArgumentNullException("red_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(red_user));
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(dt_set));
            if ((login == null)) {
                throw new global::System.ArgumentNullException("login");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(login));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string unp, 
                    int kod_fil, 
                    byte rezident, 
                    string pn, 
                    string lastname, 
                    string name, 
                    string otch, 
                    string prev_lastn, 
                    string state, 
                    System.DateTime date_birth, 
                    string place_birth, 
                    string place_reg, 
                    byte kind_visa, 
                    byte type_visa, 
                    System.DateTime term_visa, 
                    byte vid_doc, 
                    string seria, 
                    string num_doc, 
                    string reg_org_doc, 
                    System.DateTime reg_dat_doc, 
                    string reg_num, 
                    System.DateTime reg_dat, 
                    string reg_org, 
                    string tel, 
                    string tel_mob, 
                    string e_mail, 
                    string e_addr, 
                    string scheta, 
                    string profit, 
                    byte sved_infl, 
                    byte risk_itog, 
                    byte risk_client, 
                    byte risk_oper, 
                    byte risk_geo, 
                    string h_risk_exp, 
                    string decision, 
                    string results, 
                    byte category, 
                    string prochie, 
                    string red_user, 
                    System.DateTime dt_set, 
                    string login, 
                    int Original_id, 
                    string Original_unp, 
                    int Original_kod_fil, 
                    byte Original_rezident, 
                    string Original_pn, 
                    string Original_lastname, 
                    string Original_name, 
                    string Original_otch, 
                    string Original_prev_lastn, 
                    string Original_state, 
                    System.DateTime Original_date_birth, 
                    string Original_place_birth, 
                    string Original_place_reg, 
                    byte Original_kind_visa, 
                    byte Original_type_visa, 
                    System.DateTime Original_term_visa, 
                    byte Original_vid_doc, 
                    string Original_seria, 
                    string Original_num_doc, 
                    System.DateTime Original_reg_dat_doc, 
                    string Original_reg_num, 
                    System.DateTime Original_reg_dat, 
                    string Original_tel, 
                    string Original_tel_mob, 
                    string Original_e_mail, 
                    string Original_e_addr, 
                    byte Original_sved_infl, 
                    byte Original_risk_itog, 
                    byte Original_risk_client, 
                    byte Original_risk_oper, 
                    byte Original_risk_geo, 
                    byte Original_category, 
                    string Original_red_user, 
                    System.DateTime Original_dt_set, 
                    string Original_login) {
            if ((unp == null)) {
                throw new global::System.ArgumentNullException("unp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(unp));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(kod_fil));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(rezident));
            if ((pn == null)) {
                throw new global::System.ArgumentNullException("pn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(pn));
            }
            if ((lastname == null)) {
                throw new global::System.ArgumentNullException("lastname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(lastname));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(name));
            }
            if ((otch == null)) {
                throw new global::System.ArgumentNullException("otch");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(otch));
            }
            if ((prev_lastn == null)) {
                throw new global::System.ArgumentNullException("prev_lastn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(prev_lastn));
            }
            if ((state == null)) {
                throw new global::System.ArgumentNullException("state");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(state));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(date_birth));
            if ((place_birth == null)) {
                throw new global::System.ArgumentNullException("place_birth");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(place_birth));
            }
            if ((place_reg == null)) {
                throw new global::System.ArgumentNullException("place_reg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(place_reg));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(kind_visa));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((byte)(type_visa));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(term_visa));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((byte)(vid_doc));
            if ((seria == null)) {
                throw new global::System.ArgumentNullException("seria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(seria));
            }
            if ((num_doc == null)) {
                throw new global::System.ArgumentNullException("num_doc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(num_doc));
            }
            if ((reg_org_doc == null)) {
                throw new global::System.ArgumentNullException("reg_org_doc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(reg_org_doc));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(reg_dat_doc));
            if ((reg_num == null)) {
                throw new global::System.ArgumentNullException("reg_num");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(reg_num));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(reg_dat));
            if ((reg_org == null)) {
                throw new global::System.ArgumentNullException("reg_org");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(reg_org));
            }
            if ((tel == null)) {
                throw new global::System.ArgumentNullException("tel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(tel));
            }
            if ((tel_mob == null)) {
                throw new global::System.ArgumentNullException("tel_mob");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(tel_mob));
            }
            if ((e_mail == null)) {
                throw new global::System.ArgumentNullException("e_mail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(e_mail));
            }
            if ((e_addr == null)) {
                throw new global::System.ArgumentNullException("e_addr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(e_addr));
            }
            if ((scheta == null)) {
                throw new global::System.ArgumentNullException("scheta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(scheta));
            }
            if ((profit == null)) {
                throw new global::System.ArgumentNullException("profit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(profit));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((byte)(sved_infl));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((byte)(risk_itog));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((byte)(risk_client));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((byte)(risk_oper));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((byte)(risk_geo));
            if ((h_risk_exp == null)) {
                throw new global::System.ArgumentNullException("h_risk_exp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(h_risk_exp));
            }
            if ((decision == null)) {
                throw new global::System.ArgumentNullException("decision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(decision));
            }
            if ((results == null)) {
                throw new global::System.ArgumentNullException("results");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(results));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((byte)(category));
            if ((prochie == null)) {
                throw new global::System.ArgumentNullException("prochie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(prochie));
            }
            if ((red_user == null)) {
                throw new global::System.ArgumentNullException("red_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(red_user));
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(dt_set));
            if ((login == null)) {
                throw new global::System.ArgumentNullException("login");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(login));
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_id));
            if ((Original_unp == null)) {
                throw new global::System.ArgumentNullException("Original_unp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_unp));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_kod_fil));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((byte)(Original_rezident));
            if ((Original_pn == null)) {
                throw new global::System.ArgumentNullException("Original_pn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_pn));
            }
            if ((Original_lastname == null)) {
                throw new global::System.ArgumentNullException("Original_lastname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_lastname));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_name));
            }
            if ((Original_otch == null)) {
                throw new global::System.ArgumentNullException("Original_otch");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_otch));
            }
            if ((Original_prev_lastn == null)) {
                throw new global::System.ArgumentNullException("Original_prev_lastn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_prev_lastn));
            }
            if ((Original_state == null)) {
                throw new global::System.ArgumentNullException("Original_state");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_state));
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(Original_date_birth));
            if ((Original_place_birth == null)) {
                throw new global::System.ArgumentNullException("Original_place_birth");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_place_birth));
            }
            if ((Original_place_reg == null)) {
                throw new global::System.ArgumentNullException("Original_place_reg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_place_reg));
            }
            this.Adapter.UpdateCommand.Parameters[55].Value = ((byte)(Original_kind_visa));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((byte)(Original_type_visa));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_term_visa));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((byte)(Original_vid_doc));
            if ((Original_seria == null)) {
                throw new global::System.ArgumentNullException("Original_seria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_seria));
            }
            if ((Original_num_doc == null)) {
                throw new global::System.ArgumentNullException("Original_num_doc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_num_doc));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_reg_dat_doc));
            if ((Original_reg_num == null)) {
                throw new global::System.ArgumentNullException("Original_reg_num");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_reg_num));
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((System.DateTime)(Original_reg_dat));
            if ((Original_tel == null)) {
                throw new global::System.ArgumentNullException("Original_tel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_tel));
            }
            if ((Original_tel_mob == null)) {
                throw new global::System.ArgumentNullException("Original_tel_mob");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_tel_mob));
            }
            if ((Original_e_mail == null)) {
                throw new global::System.ArgumentNullException("Original_e_mail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_e_mail));
            }
            if ((Original_e_addr == null)) {
                throw new global::System.ArgumentNullException("Original_e_addr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_e_addr));
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((byte)(Original_sved_infl));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((byte)(Original_risk_itog));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((byte)(Original_risk_client));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((byte)(Original_risk_oper));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((byte)(Original_risk_geo));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((byte)(Original_category));
            if ((Original_red_user == null)) {
                throw new global::System.ArgumentNullException("Original_red_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_red_user));
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(Original_dt_set));
            if ((Original_login == null)) {
                throw new global::System.ArgumentNullException("Original_login");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_login));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class bd_ip_tTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bd_ip_tTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "bd_ip_t";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("unp", "unp");
            tableMapping.ColumnMappings.Add("kod_fil", "kod_fil");
            tableMapping.ColumnMappings.Add("rezident", "rezident");
            tableMapping.ColumnMappings.Add("pn", "pn");
            tableMapping.ColumnMappings.Add("lastname", "lastname");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("otch", "otch");
            tableMapping.ColumnMappings.Add("prev_lastn", "prev_lastn");
            tableMapping.ColumnMappings.Add("state", "state");
            tableMapping.ColumnMappings.Add("date_birth", "date_birth");
            tableMapping.ColumnMappings.Add("place_birth", "place_birth");
            tableMapping.ColumnMappings.Add("place_reg", "place_reg");
            tableMapping.ColumnMappings.Add("kind_visa", "kind_visa");
            tableMapping.ColumnMappings.Add("type_visa", "type_visa");
            tableMapping.ColumnMappings.Add("term_visa", "term_visa");
            tableMapping.ColumnMappings.Add("vid_doc", "vid_doc");
            tableMapping.ColumnMappings.Add("seria", "seria");
            tableMapping.ColumnMappings.Add("num_doc", "num_doc");
            tableMapping.ColumnMappings.Add("reg_org_doc", "reg_org_doc");
            tableMapping.ColumnMappings.Add("reg_dat_doc", "reg_dat_doc");
            tableMapping.ColumnMappings.Add("reg_num", "reg_num");
            tableMapping.ColumnMappings.Add("reg_dat", "reg_dat");
            tableMapping.ColumnMappings.Add("reg_org", "reg_org");
            tableMapping.ColumnMappings.Add("tel", "tel");
            tableMapping.ColumnMappings.Add("tel_mob", "tel_mob");
            tableMapping.ColumnMappings.Add("e_mail", "e_mail");
            tableMapping.ColumnMappings.Add("e_addr", "e_addr");
            tableMapping.ColumnMappings.Add("scheta", "scheta");
            tableMapping.ColumnMappings.Add("profit", "profit");
            tableMapping.ColumnMappings.Add("sved_infl", "sved_infl");
            tableMapping.ColumnMappings.Add("risk_itog", "risk_itog");
            tableMapping.ColumnMappings.Add("risk_client", "risk_client");
            tableMapping.ColumnMappings.Add("risk_oper", "risk_oper");
            tableMapping.ColumnMappings.Add("risk_geo", "risk_geo");
            tableMapping.ColumnMappings.Add("h_risk_exp", "h_risk_exp");
            tableMapping.ColumnMappings.Add("decision", "decision");
            tableMapping.ColumnMappings.Add("results", "results");
            tableMapping.ColumnMappings.Add("category", "category");
            tableMapping.ColumnMappings.Add("prochie", "prochie");
            tableMapping.ColumnMappings.Add("red_user", "red_user");
            tableMapping.ColumnMappings.Add("dt_set", "dt_set");
            tableMapping.ColumnMappings.Add("login", "login");
            tableMapping.ColumnMappings.Add("file_name", "file_name");
            tableMapping.ColumnMappings.Add("sheet_name", "sheet_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `bd_ip_t` WHERE ((`id` = @Original_id) AND (`unp` = @Original_unp) AND (`kod_fil` = @Original_kod_fil) AND (`rezident` = @Original_rezident) AND (`pn` = @Original_pn) AND (`lastname` = @Original_lastname) AND (`name` = @Original_name) AND (`otch` = @Original_otch) AND (`prev_lastn` = @Original_prev_lastn) AND (`state` = @Original_state) AND (`date_birth` = @Original_date_birth) AND (`place_birth` = @Original_place_birth) AND (`place_reg` = @Original_place_reg) AND (`kind_visa` = @Original_kind_visa) AND (`type_visa` = @Original_type_visa) AND (`term_visa` = @Original_term_visa) AND (`vid_doc` = @Original_vid_doc) AND (`seria` = @Original_seria) AND (`num_doc` = @Original_num_doc) AND (`reg_dat_doc` = @Original_reg_dat_doc) AND (`reg_num` = @Original_reg_num) AND (`reg_dat` = @Original_reg_dat) AND (`tel` = @Original_tel) AND (`tel_mob` = @Original_tel_mob) AND (`e_mail` = @Original_e_mail) AND (`e_addr` = @Original_e_addr) AND (`sved_infl` = @Original_sved_infl) AND (`risk_itog` = @Original_risk_itog) AND (`risk_client` = @Original_risk_client) AND (`risk_oper` = @Original_risk_oper) AND (`risk_geo` = @Original_risk_geo) AND (`category` = @Original_category) AND (`red_user` = @Original_red_user) AND (`dt_set` = @Original_dt_set) AND (`login` = @Original_login) AND (`file_name` = @Original_file_name) AND (`sheet_name` = @Original_sheet_name))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lastname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lastname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_otch";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "otch";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prev_lastn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prev_lastn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date_birth";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date_birth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_place_birth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_birth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_place_reg";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_reg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kind_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "kind_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_type_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "type_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_term_visa";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "term_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vid_doc";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "vid_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_seria";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "seria";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_num_doc";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "num_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat_doc";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel_mob";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel_mob";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_file_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "file_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sheet_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sheet_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `bd_ip_t` (`unp`, `kod_fil`, `rezident`, `pn`, `lastname`, `name`, `otch`, `prev_lastn`, `state`, `date_birth`, `place_birth`, `place_reg`, `kind_visa`, `type_visa`, `term_visa`, `vid_doc`, `seria`, `num_doc`, `reg_org_doc`, `reg_dat_doc`, `reg_num`, `reg_dat`, `reg_org`, `tel`, `tel_mob`, `e_mail`, `e_addr`, `scheta`, `profit`, `sved_infl`, `risk_itog`, `risk_client`, `risk_oper`, `risk_geo`, `h_risk_exp`, `decision`, `results`, `category`, `prochie`, `red_user`, `dt_set`, `login`, `file_name`, `sheet_name`) VALUES (@unp, @kod_fil, @rezident, @pn, @lastname, @name, @otch, @prev_lastn, @state, @date_birth, @place_birth, @place_reg, @kind_visa, @type_visa, @term_visa, @vid_doc, @seria, @num_doc, @reg_org_doc, @reg_dat_doc, @reg_num, @reg_dat, @reg_org, @tel, @tel_mob, @e_mail, @e_addr, @scheta, @profit, @sved_infl, @risk_itog, @risk_client, @risk_oper, @risk_geo, @h_risk_exp, @decision, @results, @category, @prochie, @red_user, @dt_set, @login, @file_name, @sheet_name)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lastname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lastname";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@otch";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "otch";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prev_lastn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prev_lastn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date_birth";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date_birth";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@place_birth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_birth";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@place_reg";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_reg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kind_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "kind_visa";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@type_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "type_visa";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@term_visa";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "term_visa";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vid_doc";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "vid_doc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@seria";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "seria";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@num_doc";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "num_doc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org_doc";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org_doc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat_doc";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat_doc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel_mob";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel_mob";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@scheta";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "scheta";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@profit";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "profit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@h_risk_exp";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "h_risk_exp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@decision";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decision";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@results";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "results";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prochie";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prochie";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@file_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "file_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sheet_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sheet_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `bd_ip_t` SET `unp` = @unp, `kod_fil` = @kod_fil, `rezident` = @rezident, " +
                "`pn` = @pn, `lastname` = @lastname, `name` = @name, `otch` = @otch, `prev_lastn`" +
                " = @prev_lastn, `state` = @state, `date_birth` = @date_birth, `place_birth` = @p" +
                "lace_birth, `place_reg` = @place_reg, `kind_visa` = @kind_visa, `type_visa` = @t" +
                "ype_visa, `term_visa` = @term_visa, `vid_doc` = @vid_doc, `seria` = @seria, `num" +
                "_doc` = @num_doc, `reg_org_doc` = @reg_org_doc, `reg_dat_doc` = @reg_dat_doc, `r" +
                "eg_num` = @reg_num, `reg_dat` = @reg_dat, `reg_org` = @reg_org, `tel` = @tel, `t" +
                "el_mob` = @tel_mob, `e_mail` = @e_mail, `e_addr` = @e_addr, `scheta` = @scheta, " +
                "`profit` = @profit, `sved_infl` = @sved_infl, `risk_itog` = @risk_itog, `risk_cl" +
                "ient` = @risk_client, `risk_oper` = @risk_oper, `risk_geo` = @risk_geo, `h_risk_" +
                "exp` = @h_risk_exp, `decision` = @decision, `results` = @results, `category` = @" +
                "category, `prochie` = @prochie, `red_user` = @red_user, `dt_set` = @dt_set, `log" +
                "in` = @login, `file_name` = @file_name, `sheet_name` = @sheet_name WHERE ((`id` " +
                "= @Original_id) AND (`unp` = @Original_unp) AND (`kod_fil` = @Original_kod_fil) " +
                "AND (`rezident` = @Original_rezident) AND (`pn` = @Original_pn) AND (`lastname` " +
                "= @Original_lastname) AND (`name` = @Original_name) AND (`otch` = @Original_otch" +
                ") AND (`prev_lastn` = @Original_prev_lastn) AND (`state` = @Original_state) AND " +
                "(`date_birth` = @Original_date_birth) AND (`place_birth` = @Original_place_birth" +
                ") AND (`place_reg` = @Original_place_reg) AND (`kind_visa` = @Original_kind_visa" +
                ") AND (`type_visa` = @Original_type_visa) AND (`term_visa` = @Original_term_visa" +
                ") AND (`vid_doc` = @Original_vid_doc) AND (`seria` = @Original_seria) AND (`num_" +
                "doc` = @Original_num_doc) AND (`reg_dat_doc` = @Original_reg_dat_doc) AND (`reg_" +
                "num` = @Original_reg_num) AND (`reg_dat` = @Original_reg_dat) AND (`tel` = @Orig" +
                "inal_tel) AND (`tel_mob` = @Original_tel_mob) AND (`e_mail` = @Original_e_mail) " +
                "AND (`e_addr` = @Original_e_addr) AND (`sved_infl` = @Original_sved_infl) AND (`" +
                "risk_itog` = @Original_risk_itog) AND (`risk_client` = @Original_risk_client) AN" +
                "D (`risk_oper` = @Original_risk_oper) AND (`risk_geo` = @Original_risk_geo) AND " +
                "(`category` = @Original_category) AND (`red_user` = @Original_red_user) AND (`dt" +
                "_set` = @Original_dt_set) AND (`login` = @Original_login) AND (`file_name` = @Or" +
                "iginal_file_name) AND (`sheet_name` = @Original_sheet_name))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lastname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lastname";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@otch";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "otch";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prev_lastn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prev_lastn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date_birth";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date_birth";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@place_birth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_birth";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@place_reg";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_reg";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kind_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "kind_visa";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@type_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "type_visa";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@term_visa";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "term_visa";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vid_doc";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "vid_doc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@seria";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "seria";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@num_doc";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "num_doc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org_doc";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org_doc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat_doc";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat_doc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel_mob";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel_mob";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@scheta";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "scheta";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@profit";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "profit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@h_risk_exp";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "h_risk_exp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@decision";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decision";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@results";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "results";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prochie";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prochie";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@file_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "file_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sheet_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sheet_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lastname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lastname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_otch";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "otch";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prev_lastn";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prev_lastn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date_birth";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date_birth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_place_birth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_birth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_place_reg";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "place_reg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kind_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "kind_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_type_visa";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "type_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_term_visa";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "term_visa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vid_doc";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "vid_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_seria";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "seria";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_num_doc";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "num_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat_doc";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat_doc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel_mob";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel_mob";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_file_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "file_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sheet_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sheet_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Excel2Ankets.Properties.Settings.Default.cbd_anketsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `id`, `unp`, `kod_fil`, `rezident`, `pn`, `lastname`, `name`, `otch`, `prev_lastn`, `state`, `date_birth`, `place_birth`, `place_reg`, `kind_visa`, `type_visa`, `term_visa`, `vid_doc`, `seria`, `num_doc`, `reg_org_doc`, `reg_dat_doc`, `reg_num`, `reg_dat`, `reg_org`, `tel`, `tel_mob`, `e_mail`, `e_addr`, `scheta`, `profit`, `sved_infl`, `risk_itog`, `risk_client`, `risk_oper`, `risk_geo`, `h_risk_exp`, `decision`, `results`, `category`, `prochie`, `red_user`, `dt_set`, `login`, `file_name`, `sheet_name` FROM `bd_ip_t`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(cbd_anketsDataSet.bd_ip_tDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual cbd_anketsDataSet.bd_ip_tDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            cbd_anketsDataSet.bd_ip_tDataTable dataTable = new cbd_anketsDataSet.bd_ip_tDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(cbd_anketsDataSet.bd_ip_tDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(cbd_anketsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "bd_ip_t");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_unp, 
                    int Original_kod_fil, 
                    byte Original_rezident, 
                    string Original_pn, 
                    string Original_lastname, 
                    string Original_name, 
                    string Original_otch, 
                    string Original_prev_lastn, 
                    string Original_state, 
                    System.DateTime Original_date_birth, 
                    string Original_place_birth, 
                    string Original_place_reg, 
                    byte Original_kind_visa, 
                    byte Original_type_visa, 
                    System.DateTime Original_term_visa, 
                    byte Original_vid_doc, 
                    string Original_seria, 
                    string Original_num_doc, 
                    System.DateTime Original_reg_dat_doc, 
                    string Original_reg_num, 
                    System.DateTime Original_reg_dat, 
                    string Original_tel, 
                    string Original_tel_mob, 
                    string Original_e_mail, 
                    string Original_e_addr, 
                    byte Original_sved_infl, 
                    byte Original_risk_itog, 
                    byte Original_risk_client, 
                    byte Original_risk_oper, 
                    byte Original_risk_geo, 
                    byte Original_category, 
                    string Original_red_user, 
                    System.DateTime Original_dt_set, 
                    string Original_login, 
                    string Original_file_name, 
                    string Original_sheet_name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_unp == null)) {
                throw new global::System.ArgumentNullException("Original_unp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_unp));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_kod_fil));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_rezident));
            if ((Original_pn == null)) {
                throw new global::System.ArgumentNullException("Original_pn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_pn));
            }
            if ((Original_lastname == null)) {
                throw new global::System.ArgumentNullException("Original_lastname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_lastname));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_name));
            }
            if ((Original_otch == null)) {
                throw new global::System.ArgumentNullException("Original_otch");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_otch));
            }
            if ((Original_prev_lastn == null)) {
                throw new global::System.ArgumentNullException("Original_prev_lastn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_prev_lastn));
            }
            if ((Original_state == null)) {
                throw new global::System.ArgumentNullException("Original_state");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_state));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_date_birth));
            if ((Original_place_birth == null)) {
                throw new global::System.ArgumentNullException("Original_place_birth");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_place_birth));
            }
            if ((Original_place_reg == null)) {
                throw new global::System.ArgumentNullException("Original_place_reg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_place_reg));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((byte)(Original_kind_visa));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((byte)(Original_type_visa));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_term_visa));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((byte)(Original_vid_doc));
            if ((Original_seria == null)) {
                throw new global::System.ArgumentNullException("Original_seria");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_seria));
            }
            if ((Original_num_doc == null)) {
                throw new global::System.ArgumentNullException("Original_num_doc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_num_doc));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_reg_dat_doc));
            if ((Original_reg_num == null)) {
                throw new global::System.ArgumentNullException("Original_reg_num");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_reg_num));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_reg_dat));
            if ((Original_tel == null)) {
                throw new global::System.ArgumentNullException("Original_tel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_tel));
            }
            if ((Original_tel_mob == null)) {
                throw new global::System.ArgumentNullException("Original_tel_mob");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_tel_mob));
            }
            if ((Original_e_mail == null)) {
                throw new global::System.ArgumentNullException("Original_e_mail");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_e_mail));
            }
            if ((Original_e_addr == null)) {
                throw new global::System.ArgumentNullException("Original_e_addr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_e_addr));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((byte)(Original_sved_infl));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((byte)(Original_risk_itog));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((byte)(Original_risk_client));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((byte)(Original_risk_oper));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((byte)(Original_risk_geo));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((byte)(Original_category));
            if ((Original_red_user == null)) {
                throw new global::System.ArgumentNullException("Original_red_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_red_user));
            }
            this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_dt_set));
            if ((Original_login == null)) {
                throw new global::System.ArgumentNullException("Original_login");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_login));
            }
            if ((Original_file_name == null)) {
                throw new global::System.ArgumentNullException("Original_file_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_file_name));
            }
            if ((Original_sheet_name == null)) {
                throw new global::System.ArgumentNullException("Original_sheet_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_sheet_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string unp, 
                    int kod_fil, 
                    byte rezident, 
                    string pn, 
                    string lastname, 
                    string name, 
                    string otch, 
                    string prev_lastn, 
                    string state, 
                    System.DateTime date_birth, 
                    string place_birth, 
                    string place_reg, 
                    byte kind_visa, 
                    byte type_visa, 
                    System.DateTime term_visa, 
                    byte vid_doc, 
                    string seria, 
                    string num_doc, 
                    string reg_org_doc, 
                    System.DateTime reg_dat_doc, 
                    string reg_num, 
                    System.DateTime reg_dat, 
                    string reg_org, 
                    string tel, 
                    string tel_mob, 
                    string e_mail, 
                    string e_addr, 
                    string scheta, 
                    string profit, 
                    byte sved_infl, 
                    byte risk_itog, 
                    byte risk_client, 
                    byte risk_oper, 
                    byte risk_geo, 
                    string h_risk_exp, 
                    string decision, 
                    string results, 
                    byte category, 
                    string prochie, 
                    string red_user, 
                    System.DateTime dt_set, 
                    string login, 
                    string file_name, 
                    string sheet_name) {
            if ((unp == null)) {
                throw new global::System.ArgumentNullException("unp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(unp));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(kod_fil));
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(rezident));
            if ((pn == null)) {
                throw new global::System.ArgumentNullException("pn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(pn));
            }
            if ((lastname == null)) {
                throw new global::System.ArgumentNullException("lastname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(lastname));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(name));
            }
            if ((otch == null)) {
                throw new global::System.ArgumentNullException("otch");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(otch));
            }
            if ((prev_lastn == null)) {
                throw new global::System.ArgumentNullException("prev_lastn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(prev_lastn));
            }
            if ((state == null)) {
                throw new global::System.ArgumentNullException("state");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(state));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(date_birth));
            if ((place_birth == null)) {
                throw new global::System.ArgumentNullException("place_birth");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(place_birth));
            }
            if ((place_reg == null)) {
                throw new global::System.ArgumentNullException("place_reg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(place_reg));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((byte)(kind_visa));
            this.Adapter.InsertCommand.Parameters[13].Value = ((byte)(type_visa));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(term_visa));
            this.Adapter.InsertCommand.Parameters[15].Value = ((byte)(vid_doc));
            if ((seria == null)) {
                throw new global::System.ArgumentNullException("seria");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(seria));
            }
            if ((num_doc == null)) {
                throw new global::System.ArgumentNullException("num_doc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(num_doc));
            }
            if ((reg_org_doc == null)) {
                throw new global::System.ArgumentNullException("reg_org_doc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(reg_org_doc));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(reg_dat_doc));
            if ((reg_num == null)) {
                throw new global::System.ArgumentNullException("reg_num");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(reg_num));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(reg_dat));
            if ((reg_org == null)) {
                throw new global::System.ArgumentNullException("reg_org");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(reg_org));
            }
            if ((tel == null)) {
                throw new global::System.ArgumentNullException("tel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(tel));
            }
            if ((tel_mob == null)) {
                throw new global::System.ArgumentNullException("tel_mob");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(tel_mob));
            }
            if ((e_mail == null)) {
                throw new global::System.ArgumentNullException("e_mail");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(e_mail));
            }
            if ((e_addr == null)) {
                throw new global::System.ArgumentNullException("e_addr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(e_addr));
            }
            if ((scheta == null)) {
                throw new global::System.ArgumentNullException("scheta");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(scheta));
            }
            if ((profit == null)) {
                throw new global::System.ArgumentNullException("profit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(profit));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((byte)(sved_infl));
            this.Adapter.InsertCommand.Parameters[30].Value = ((byte)(risk_itog));
            this.Adapter.InsertCommand.Parameters[31].Value = ((byte)(risk_client));
            this.Adapter.InsertCommand.Parameters[32].Value = ((byte)(risk_oper));
            this.Adapter.InsertCommand.Parameters[33].Value = ((byte)(risk_geo));
            if ((h_risk_exp == null)) {
                throw new global::System.ArgumentNullException("h_risk_exp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(h_risk_exp));
            }
            if ((decision == null)) {
                throw new global::System.ArgumentNullException("decision");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(decision));
            }
            if ((results == null)) {
                throw new global::System.ArgumentNullException("results");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(results));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((byte)(category));
            if ((prochie == null)) {
                throw new global::System.ArgumentNullException("prochie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(prochie));
            }
            if ((red_user == null)) {
                throw new global::System.ArgumentNullException("red_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(red_user));
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(dt_set));
            if ((login == null)) {
                throw new global::System.ArgumentNullException("login");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(login));
            }
            if ((file_name == null)) {
                throw new global::System.ArgumentNullException("file_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(file_name));
            }
            if ((sheet_name == null)) {
                throw new global::System.ArgumentNullException("sheet_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(sheet_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string unp, 
                    int kod_fil, 
                    byte rezident, 
                    string pn, 
                    string lastname, 
                    string name, 
                    string otch, 
                    string prev_lastn, 
                    string state, 
                    System.DateTime date_birth, 
                    string place_birth, 
                    string place_reg, 
                    byte kind_visa, 
                    byte type_visa, 
                    System.DateTime term_visa, 
                    byte vid_doc, 
                    string seria, 
                    string num_doc, 
                    string reg_org_doc, 
                    System.DateTime reg_dat_doc, 
                    string reg_num, 
                    System.DateTime reg_dat, 
                    string reg_org, 
                    string tel, 
                    string tel_mob, 
                    string e_mail, 
                    string e_addr, 
                    string scheta, 
                    string profit, 
                    byte sved_infl, 
                    byte risk_itog, 
                    byte risk_client, 
                    byte risk_oper, 
                    byte risk_geo, 
                    string h_risk_exp, 
                    string decision, 
                    string results, 
                    byte category, 
                    string prochie, 
                    string red_user, 
                    System.DateTime dt_set, 
                    string login, 
                    string file_name, 
                    string sheet_name, 
                    int Original_id, 
                    string Original_unp, 
                    int Original_kod_fil, 
                    byte Original_rezident, 
                    string Original_pn, 
                    string Original_lastname, 
                    string Original_name, 
                    string Original_otch, 
                    string Original_prev_lastn, 
                    string Original_state, 
                    System.DateTime Original_date_birth, 
                    string Original_place_birth, 
                    string Original_place_reg, 
                    byte Original_kind_visa, 
                    byte Original_type_visa, 
                    System.DateTime Original_term_visa, 
                    byte Original_vid_doc, 
                    string Original_seria, 
                    string Original_num_doc, 
                    System.DateTime Original_reg_dat_doc, 
                    string Original_reg_num, 
                    System.DateTime Original_reg_dat, 
                    string Original_tel, 
                    string Original_tel_mob, 
                    string Original_e_mail, 
                    string Original_e_addr, 
                    byte Original_sved_infl, 
                    byte Original_risk_itog, 
                    byte Original_risk_client, 
                    byte Original_risk_oper, 
                    byte Original_risk_geo, 
                    byte Original_category, 
                    string Original_red_user, 
                    System.DateTime Original_dt_set, 
                    string Original_login, 
                    string Original_file_name, 
                    string Original_sheet_name) {
            if ((unp == null)) {
                throw new global::System.ArgumentNullException("unp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(unp));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(kod_fil));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(rezident));
            if ((pn == null)) {
                throw new global::System.ArgumentNullException("pn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(pn));
            }
            if ((lastname == null)) {
                throw new global::System.ArgumentNullException("lastname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(lastname));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(name));
            }
            if ((otch == null)) {
                throw new global::System.ArgumentNullException("otch");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(otch));
            }
            if ((prev_lastn == null)) {
                throw new global::System.ArgumentNullException("prev_lastn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(prev_lastn));
            }
            if ((state == null)) {
                throw new global::System.ArgumentNullException("state");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(state));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(date_birth));
            if ((place_birth == null)) {
                throw new global::System.ArgumentNullException("place_birth");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(place_birth));
            }
            if ((place_reg == null)) {
                throw new global::System.ArgumentNullException("place_reg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(place_reg));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(kind_visa));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((byte)(type_visa));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(term_visa));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((byte)(vid_doc));
            if ((seria == null)) {
                throw new global::System.ArgumentNullException("seria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(seria));
            }
            if ((num_doc == null)) {
                throw new global::System.ArgumentNullException("num_doc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(num_doc));
            }
            if ((reg_org_doc == null)) {
                throw new global::System.ArgumentNullException("reg_org_doc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(reg_org_doc));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(reg_dat_doc));
            if ((reg_num == null)) {
                throw new global::System.ArgumentNullException("reg_num");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(reg_num));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(reg_dat));
            if ((reg_org == null)) {
                throw new global::System.ArgumentNullException("reg_org");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(reg_org));
            }
            if ((tel == null)) {
                throw new global::System.ArgumentNullException("tel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(tel));
            }
            if ((tel_mob == null)) {
                throw new global::System.ArgumentNullException("tel_mob");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(tel_mob));
            }
            if ((e_mail == null)) {
                throw new global::System.ArgumentNullException("e_mail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(e_mail));
            }
            if ((e_addr == null)) {
                throw new global::System.ArgumentNullException("e_addr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(e_addr));
            }
            if ((scheta == null)) {
                throw new global::System.ArgumentNullException("scheta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(scheta));
            }
            if ((profit == null)) {
                throw new global::System.ArgumentNullException("profit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(profit));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((byte)(sved_infl));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((byte)(risk_itog));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((byte)(risk_client));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((byte)(risk_oper));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((byte)(risk_geo));
            if ((h_risk_exp == null)) {
                throw new global::System.ArgumentNullException("h_risk_exp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(h_risk_exp));
            }
            if ((decision == null)) {
                throw new global::System.ArgumentNullException("decision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(decision));
            }
            if ((results == null)) {
                throw new global::System.ArgumentNullException("results");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(results));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((byte)(category));
            if ((prochie == null)) {
                throw new global::System.ArgumentNullException("prochie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(prochie));
            }
            if ((red_user == null)) {
                throw new global::System.ArgumentNullException("red_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(red_user));
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(dt_set));
            if ((login == null)) {
                throw new global::System.ArgumentNullException("login");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(login));
            }
            if ((file_name == null)) {
                throw new global::System.ArgumentNullException("file_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(file_name));
            }
            if ((sheet_name == null)) {
                throw new global::System.ArgumentNullException("sheet_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(sheet_name));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_id));
            if ((Original_unp == null)) {
                throw new global::System.ArgumentNullException("Original_unp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_unp));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_kod_fil));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((byte)(Original_rezident));
            if ((Original_pn == null)) {
                throw new global::System.ArgumentNullException("Original_pn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_pn));
            }
            if ((Original_lastname == null)) {
                throw new global::System.ArgumentNullException("Original_lastname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_lastname));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_name));
            }
            if ((Original_otch == null)) {
                throw new global::System.ArgumentNullException("Original_otch");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_otch));
            }
            if ((Original_prev_lastn == null)) {
                throw new global::System.ArgumentNullException("Original_prev_lastn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_prev_lastn));
            }
            if ((Original_state == null)) {
                throw new global::System.ArgumentNullException("Original_state");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_state));
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(Original_date_birth));
            if ((Original_place_birth == null)) {
                throw new global::System.ArgumentNullException("Original_place_birth");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_place_birth));
            }
            if ((Original_place_reg == null)) {
                throw new global::System.ArgumentNullException("Original_place_reg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_place_reg));
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((byte)(Original_kind_visa));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((byte)(Original_type_visa));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(Original_term_visa));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((byte)(Original_vid_doc));
            if ((Original_seria == null)) {
                throw new global::System.ArgumentNullException("Original_seria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_seria));
            }
            if ((Original_num_doc == null)) {
                throw new global::System.ArgumentNullException("Original_num_doc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_num_doc));
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((System.DateTime)(Original_reg_dat_doc));
            if ((Original_reg_num == null)) {
                throw new global::System.ArgumentNullException("Original_reg_num");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_reg_num));
            }
            this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_reg_dat));
            if ((Original_tel == null)) {
                throw new global::System.ArgumentNullException("Original_tel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_tel));
            }
            if ((Original_tel_mob == null)) {
                throw new global::System.ArgumentNullException("Original_tel_mob");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_tel_mob));
            }
            if ((Original_e_mail == null)) {
                throw new global::System.ArgumentNullException("Original_e_mail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_e_mail));
            }
            if ((Original_e_addr == null)) {
                throw new global::System.ArgumentNullException("Original_e_addr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_e_addr));
            }
            this.Adapter.UpdateCommand.Parameters[70].Value = ((byte)(Original_sved_infl));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((byte)(Original_risk_itog));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((byte)(Original_risk_client));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((byte)(Original_risk_oper));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((byte)(Original_risk_geo));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((byte)(Original_category));
            if ((Original_red_user == null)) {
                throw new global::System.ArgumentNullException("Original_red_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_red_user));
            }
            this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_dt_set));
            if ((Original_login == null)) {
                throw new global::System.ArgumentNullException("Original_login");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_login));
            }
            if ((Original_file_name == null)) {
                throw new global::System.ArgumentNullException("Original_file_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_file_name));
            }
            if ((Original_sheet_name == null)) {
                throw new global::System.ArgumentNullException("Original_sheet_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_sheet_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class bd_orgTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bd_orgTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "bd_org";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("unp", "unp");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("main", "main");
            tableMapping.ColumnMappings.Add("kod_fil", "kod_fil");
            tableMapping.ColumnMappings.Add("rezident", "rezident");
            tableMapping.ColumnMappings.Add("reg_num", "reg_num");
            tableMapping.ColumnMappings.Add("reg_dat", "reg_dat");
            tableMapping.ColumnMappings.Add("reg_org", "reg_org");
            tableMapping.ColumnMappings.Add("state", "state");
            tableMapping.ColumnMappings.Add("region", "region");
            tableMapping.ColumnMappings.Add("city", "city");
            tableMapping.ColumnMappings.Add("street", "street");
            tableMapping.ColumnMappings.Add("build", "build");
            tableMapping.ColumnMappings.Add("office", "office");
            tableMapping.ColumnMappings.Add("tel", "tel");
            tableMapping.ColumnMappings.Add("e_mail", "e_mail");
            tableMapping.ColumnMappings.Add("e_addr", "e_addr");
            tableMapping.ColumnMappings.Add("sved_uchr", "sved_uchr");
            tableMapping.ColumnMappings.Add("ust_fond", "ust_fond");
            tableMapping.ColumnMappings.Add("kol_rab", "kol_rab");
            tableMapping.ColumnMappings.Add("scheta", "scheta");
            tableMapping.ColumnMappings.Add("sved_kontr", "sved_kontr");
            tableMapping.ColumnMappings.Add("profit", "profit");
            tableMapping.ColumnMappings.Add("history", "history");
            tableMapping.ColumnMappings.Add("audit_org", "audit_org");
            tableMapping.ColumnMappings.Add("sved_fil", "sved_fil");
            tableMapping.ColumnMappings.Add("sved_infl", "sved_infl");
            tableMapping.ColumnMappings.Add("risk_itog", "risk_itog");
            tableMapping.ColumnMappings.Add("risk_client", "risk_client");
            tableMapping.ColumnMappings.Add("risk_oper", "risk_oper");
            tableMapping.ColumnMappings.Add("risk_geo", "risk_geo");
            tableMapping.ColumnMappings.Add("h_risk_exp", "h_risk_exp");
            tableMapping.ColumnMappings.Add("decision", "decision");
            tableMapping.ColumnMappings.Add("results", "results");
            tableMapping.ColumnMappings.Add("category", "category");
            tableMapping.ColumnMappings.Add("prochie", "prochie");
            tableMapping.ColumnMappings.Add("red_user", "red_user");
            tableMapping.ColumnMappings.Add("dt_set", "dt_set");
            tableMapping.ColumnMappings.Add("login", "login");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `bd_org` WHERE ((`id` = @Original_id) AND (`unp` = @Original_unp) AND (`name` = @Original_name) AND (`main` = @Original_main) AND (`kod_fil` = @Original_kod_fil) AND (`rezident` = @Original_rezident) AND (`reg_num` = @Original_reg_num) AND (`reg_dat` = @Original_reg_dat) AND (`state` = @Original_state) AND (`region` = @Original_region) AND (`city` = @Original_city) AND (`street` = @Original_street) AND (`build` = @Original_build) AND (`office` = @Original_office) AND (`tel` = @Original_tel) AND (`e_mail` = @Original_e_mail) AND (`e_addr` = @Original_e_addr) AND (`sved_uchr` = @Original_sved_uchr) AND (`ust_fond` = @Original_ust_fond) AND (`kol_rab` = @Original_kol_rab) AND (`sved_kontr` = @Original_sved_kontr) AND (`sved_fil` = @Original_sved_fil) AND (`sved_infl` = @Original_sved_infl) AND (`risk_itog` = @Original_risk_itog) AND (`risk_client` = @Original_risk_client) AND (`risk_oper` = @Original_risk_oper) AND (`risk_geo` = @Original_risk_geo) AND (`category` = @Original_category) AND (`red_user` = @Original_red_user) AND (`dt_set` = @Original_dt_set) AND (`login` = @Original_login))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_main";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "main";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_region";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "region";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_city";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "city";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_street";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "street";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_build";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "build";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_office";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "office";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_uchr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_uchr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ust_fond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ust_fond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kol_rab";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kol_rab";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_kontr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_kontr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_fil";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `bd_org` (`unp`, `name`, `main`, `kod_fil`, `rezident`, `reg_num`, `reg_dat`, `reg_org`, `state`, `region`, `city`, `street`, `build`, `office`, `tel`, `e_mail`, `e_addr`, `sved_uchr`, `ust_fond`, `kol_rab`, `scheta`, `sved_kontr`, `profit`, `history`, `audit_org`, `sved_fil`, `sved_infl`, `risk_itog`, `risk_client`, `risk_oper`, `risk_geo`, `h_risk_exp`, `decision`, `results`, `category`, `prochie`, `red_user`, `dt_set`, `login`) VALUES (@unp, @name, @main, @kod_fil, @rezident, @reg_num, @reg_dat, @reg_org, @state, @region, @city, @street, @build, @office, @tel, @e_mail, @e_addr, @sved_uchr, @ust_fond, @kol_rab, @scheta, @sved_kontr, @profit, @history, @audit_org, @sved_fil, @sved_infl, @risk_itog, @risk_client, @risk_oper, @risk_geo, @h_risk_exp, @decision, @results, @category, @prochie, @red_user, @dt_set, @login)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@main";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "main";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@region";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "region";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@city";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "city";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@street";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "street";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@build";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "build";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@office";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "office";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_uchr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_uchr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ust_fond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ust_fond";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kol_rab";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kol_rab";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@scheta";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "scheta";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_kontr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_kontr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@profit";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "profit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@history";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "history";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@audit_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "audit_org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_fil";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_fil";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@h_risk_exp";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "h_risk_exp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@decision";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decision";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@results";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "results";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prochie";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prochie";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `bd_org` SET `unp` = @unp, `name` = @name, `main` = @main, `kod_fil` = @ko" +
                "d_fil, `rezident` = @rezident, `reg_num` = @reg_num, `reg_dat` = @reg_dat, `reg_" +
                "org` = @reg_org, `state` = @state, `region` = @region, `city` = @city, `street` " +
                "= @street, `build` = @build, `office` = @office, `tel` = @tel, `e_mail` = @e_mai" +
                "l, `e_addr` = @e_addr, `sved_uchr` = @sved_uchr, `ust_fond` = @ust_fond, `kol_ra" +
                "b` = @kol_rab, `scheta` = @scheta, `sved_kontr` = @sved_kontr, `profit` = @profi" +
                "t, `history` = @history, `audit_org` = @audit_org, `sved_fil` = @sved_fil, `sved" +
                "_infl` = @sved_infl, `risk_itog` = @risk_itog, `risk_client` = @risk_client, `ri" +
                "sk_oper` = @risk_oper, `risk_geo` = @risk_geo, `h_risk_exp` = @h_risk_exp, `deci" +
                "sion` = @decision, `results` = @results, `category` = @category, `prochie` = @pr" +
                "ochie, `red_user` = @red_user, `dt_set` = @dt_set, `login` = @login WHERE ((`id`" +
                " = @Original_id) AND (`unp` = @Original_unp) AND (`name` = @Original_name) AND (" +
                "`main` = @Original_main) AND (`kod_fil` = @Original_kod_fil) AND (`rezident` = @" +
                "Original_rezident) AND (`reg_num` = @Original_reg_num) AND (`reg_dat` = @Origina" +
                "l_reg_dat) AND (`state` = @Original_state) AND (`region` = @Original_region) AND" +
                " (`city` = @Original_city) AND (`street` = @Original_street) AND (`build` = @Ori" +
                "ginal_build) AND (`office` = @Original_office) AND (`tel` = @Original_tel) AND (" +
                "`e_mail` = @Original_e_mail) AND (`e_addr` = @Original_e_addr) AND (`sved_uchr` " +
                "= @Original_sved_uchr) AND (`ust_fond` = @Original_ust_fond) AND (`kol_rab` = @O" +
                "riginal_kol_rab) AND (`sved_kontr` = @Original_sved_kontr) AND (`sved_fil` = @Or" +
                "iginal_sved_fil) AND (`sved_infl` = @Original_sved_infl) AND (`risk_itog` = @Ori" +
                "ginal_risk_itog) AND (`risk_client` = @Original_risk_client) AND (`risk_oper` = " +
                "@Original_risk_oper) AND (`risk_geo` = @Original_risk_geo) AND (`category` = @Or" +
                "iginal_category) AND (`red_user` = @Original_red_user) AND (`dt_set` = @Original" +
                "_dt_set) AND (`login` = @Original_login))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@main";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "main";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@region";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "region";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@city";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "city";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@street";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "street";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@build";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "build";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@office";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "office";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_uchr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_uchr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ust_fond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ust_fond";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kol_rab";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kol_rab";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@scheta";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "scheta";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_kontr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_kontr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@profit";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "profit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@history";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "history";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@audit_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "audit_org";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_fil";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_fil";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@h_risk_exp";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "h_risk_exp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@decision";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decision";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@results";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "results";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prochie";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prochie";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_main";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "main";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_region";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "region";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_city";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "city";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_street";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "street";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_build";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "build";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_office";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "office";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_uchr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_uchr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ust_fond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ust_fond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kol_rab";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kol_rab";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_kontr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_kontr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_fil";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Excel2Ankets.Properties.Settings.Default.cbd_anketsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `id`, `unp`, `name`, `main`, `kod_fil`, `rezident`, `reg_num`, `reg_dat`, `reg_org`, `state`, `region`, `city`, `street`, `build`, `office`, `tel`, `e_mail`, `e_addr`, `sved_uchr`, `ust_fond`, `kol_rab`, `scheta`, `sved_kontr`, `profit`, `history`, `audit_org`, `sved_fil`, `sved_infl`, `risk_itog`, `risk_client`, `risk_oper`, `risk_geo`, `h_risk_exp`, `decision`, `results`, `category`, `prochie`, `red_user`, `dt_set`, `login` FROM `bd_org`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(cbd_anketsDataSet.bd_orgDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual cbd_anketsDataSet.bd_orgDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            cbd_anketsDataSet.bd_orgDataTable dataTable = new cbd_anketsDataSet.bd_orgDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(cbd_anketsDataSet.bd_orgDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(cbd_anketsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "bd_org");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_unp, 
                    string Original_name, 
                    byte Original_main, 
                    int Original_kod_fil, 
                    byte Original_rezident, 
                    string Original_reg_num, 
                    System.DateTime Original_reg_dat, 
                    string Original_state, 
                    string Original_region, 
                    string Original_city, 
                    string Original_street, 
                    string Original_build, 
                    string Original_office, 
                    string Original_tel, 
                    string Original_e_mail, 
                    string Original_e_addr, 
                    byte Original_sved_uchr, 
                    string Original_ust_fond, 
                    int Original_kol_rab, 
                    byte Original_sved_kontr, 
                    byte Original_sved_fil, 
                    byte Original_sved_infl, 
                    byte Original_risk_itog, 
                    byte Original_risk_client, 
                    byte Original_risk_oper, 
                    byte Original_risk_geo, 
                    byte Original_category, 
                    string Original_red_user, 
                    System.DateTime Original_dt_set, 
                    string Original_login) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_unp == null)) {
                throw new global::System.ArgumentNullException("Original_unp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_unp));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_name));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_main));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_kod_fil));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((byte)(Original_rezident));
            if ((Original_reg_num == null)) {
                throw new global::System.ArgumentNullException("Original_reg_num");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_reg_num));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_reg_dat));
            if ((Original_state == null)) {
                throw new global::System.ArgumentNullException("Original_state");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_state));
            }
            if ((Original_region == null)) {
                throw new global::System.ArgumentNullException("Original_region");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_region));
            }
            if ((Original_city == null)) {
                throw new global::System.ArgumentNullException("Original_city");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_city));
            }
            if ((Original_street == null)) {
                throw new global::System.ArgumentNullException("Original_street");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_street));
            }
            if ((Original_build == null)) {
                throw new global::System.ArgumentNullException("Original_build");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_build));
            }
            if ((Original_office == null)) {
                throw new global::System.ArgumentNullException("Original_office");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_office));
            }
            if ((Original_tel == null)) {
                throw new global::System.ArgumentNullException("Original_tel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_tel));
            }
            if ((Original_e_mail == null)) {
                throw new global::System.ArgumentNullException("Original_e_mail");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_e_mail));
            }
            if ((Original_e_addr == null)) {
                throw new global::System.ArgumentNullException("Original_e_addr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_e_addr));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((byte)(Original_sved_uchr));
            if ((Original_ust_fond == null)) {
                throw new global::System.ArgumentNullException("Original_ust_fond");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_ust_fond));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_kol_rab));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((byte)(Original_sved_kontr));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((byte)(Original_sved_fil));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((byte)(Original_sved_infl));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((byte)(Original_risk_itog));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((byte)(Original_risk_client));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((byte)(Original_risk_oper));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((byte)(Original_risk_geo));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((byte)(Original_category));
            if ((Original_red_user == null)) {
                throw new global::System.ArgumentNullException("Original_red_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_red_user));
            }
            this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_dt_set));
            if ((Original_login == null)) {
                throw new global::System.ArgumentNullException("Original_login");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_login));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string unp, 
                    string name, 
                    byte main, 
                    int kod_fil, 
                    byte rezident, 
                    string reg_num, 
                    System.DateTime reg_dat, 
                    string reg_org, 
                    string state, 
                    string region, 
                    string city, 
                    string street, 
                    string build, 
                    string office, 
                    string tel, 
                    string e_mail, 
                    string e_addr, 
                    byte sved_uchr, 
                    string ust_fond, 
                    int kol_rab, 
                    string scheta, 
                    byte sved_kontr, 
                    string profit, 
                    string history, 
                    string audit_org, 
                    byte sved_fil, 
                    byte sved_infl, 
                    byte risk_itog, 
                    byte risk_client, 
                    byte risk_oper, 
                    byte risk_geo, 
                    string h_risk_exp, 
                    string decision, 
                    string results, 
                    byte category, 
                    string prochie, 
                    string red_user, 
                    System.DateTime dt_set, 
                    string login) {
            if ((unp == null)) {
                throw new global::System.ArgumentNullException("unp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(unp));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(name));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(main));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(kod_fil));
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(rezident));
            if ((reg_num == null)) {
                throw new global::System.ArgumentNullException("reg_num");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(reg_num));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(reg_dat));
            if ((reg_org == null)) {
                throw new global::System.ArgumentNullException("reg_org");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(reg_org));
            }
            if ((state == null)) {
                throw new global::System.ArgumentNullException("state");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(state));
            }
            if ((region == null)) {
                throw new global::System.ArgumentNullException("region");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(region));
            }
            if ((city == null)) {
                throw new global::System.ArgumentNullException("city");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(city));
            }
            if ((street == null)) {
                throw new global::System.ArgumentNullException("street");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(street));
            }
            if ((build == null)) {
                throw new global::System.ArgumentNullException("build");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(build));
            }
            if ((office == null)) {
                throw new global::System.ArgumentNullException("office");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(office));
            }
            if ((tel == null)) {
                throw new global::System.ArgumentNullException("tel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(tel));
            }
            if ((e_mail == null)) {
                throw new global::System.ArgumentNullException("e_mail");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(e_mail));
            }
            if ((e_addr == null)) {
                throw new global::System.ArgumentNullException("e_addr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(e_addr));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((byte)(sved_uchr));
            if ((ust_fond == null)) {
                throw new global::System.ArgumentNullException("ust_fond");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ust_fond));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(kol_rab));
            if ((scheta == null)) {
                throw new global::System.ArgumentNullException("scheta");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(scheta));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((byte)(sved_kontr));
            if ((profit == null)) {
                throw new global::System.ArgumentNullException("profit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(profit));
            }
            if ((history == null)) {
                throw new global::System.ArgumentNullException("history");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(history));
            }
            if ((audit_org == null)) {
                throw new global::System.ArgumentNullException("audit_org");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(audit_org));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((byte)(sved_fil));
            this.Adapter.InsertCommand.Parameters[26].Value = ((byte)(sved_infl));
            this.Adapter.InsertCommand.Parameters[27].Value = ((byte)(risk_itog));
            this.Adapter.InsertCommand.Parameters[28].Value = ((byte)(risk_client));
            this.Adapter.InsertCommand.Parameters[29].Value = ((byte)(risk_oper));
            this.Adapter.InsertCommand.Parameters[30].Value = ((byte)(risk_geo));
            if ((h_risk_exp == null)) {
                throw new global::System.ArgumentNullException("h_risk_exp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(h_risk_exp));
            }
            if ((decision == null)) {
                throw new global::System.ArgumentNullException("decision");
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(decision));
            }
            if ((results == null)) {
                throw new global::System.ArgumentNullException("results");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(results));
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((byte)(category));
            if ((prochie == null)) {
                throw new global::System.ArgumentNullException("prochie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(prochie));
            }
            if ((red_user == null)) {
                throw new global::System.ArgumentNullException("red_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(red_user));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(dt_set));
            if ((login == null)) {
                throw new global::System.ArgumentNullException("login");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(login));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string unp, 
                    string name, 
                    byte main, 
                    int kod_fil, 
                    byte rezident, 
                    string reg_num, 
                    System.DateTime reg_dat, 
                    string reg_org, 
                    string state, 
                    string region, 
                    string city, 
                    string street, 
                    string build, 
                    string office, 
                    string tel, 
                    string e_mail, 
                    string e_addr, 
                    byte sved_uchr, 
                    string ust_fond, 
                    int kol_rab, 
                    string scheta, 
                    byte sved_kontr, 
                    string profit, 
                    string history, 
                    string audit_org, 
                    byte sved_fil, 
                    byte sved_infl, 
                    byte risk_itog, 
                    byte risk_client, 
                    byte risk_oper, 
                    byte risk_geo, 
                    string h_risk_exp, 
                    string decision, 
                    string results, 
                    byte category, 
                    string prochie, 
                    string red_user, 
                    System.DateTime dt_set, 
                    string login, 
                    int Original_id, 
                    string Original_unp, 
                    string Original_name, 
                    byte Original_main, 
                    int Original_kod_fil, 
                    byte Original_rezident, 
                    string Original_reg_num, 
                    System.DateTime Original_reg_dat, 
                    string Original_state, 
                    string Original_region, 
                    string Original_city, 
                    string Original_street, 
                    string Original_build, 
                    string Original_office, 
                    string Original_tel, 
                    string Original_e_mail, 
                    string Original_e_addr, 
                    byte Original_sved_uchr, 
                    string Original_ust_fond, 
                    int Original_kol_rab, 
                    byte Original_sved_kontr, 
                    byte Original_sved_fil, 
                    byte Original_sved_infl, 
                    byte Original_risk_itog, 
                    byte Original_risk_client, 
                    byte Original_risk_oper, 
                    byte Original_risk_geo, 
                    byte Original_category, 
                    string Original_red_user, 
                    System.DateTime Original_dt_set, 
                    string Original_login) {
            if ((unp == null)) {
                throw new global::System.ArgumentNullException("unp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(unp));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(name));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(main));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(kod_fil));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(rezident));
            if ((reg_num == null)) {
                throw new global::System.ArgumentNullException("reg_num");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(reg_num));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(reg_dat));
            if ((reg_org == null)) {
                throw new global::System.ArgumentNullException("reg_org");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(reg_org));
            }
            if ((state == null)) {
                throw new global::System.ArgumentNullException("state");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(state));
            }
            if ((region == null)) {
                throw new global::System.ArgumentNullException("region");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(region));
            }
            if ((city == null)) {
                throw new global::System.ArgumentNullException("city");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(city));
            }
            if ((street == null)) {
                throw new global::System.ArgumentNullException("street");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(street));
            }
            if ((build == null)) {
                throw new global::System.ArgumentNullException("build");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(build));
            }
            if ((office == null)) {
                throw new global::System.ArgumentNullException("office");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(office));
            }
            if ((tel == null)) {
                throw new global::System.ArgumentNullException("tel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(tel));
            }
            if ((e_mail == null)) {
                throw new global::System.ArgumentNullException("e_mail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(e_mail));
            }
            if ((e_addr == null)) {
                throw new global::System.ArgumentNullException("e_addr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(e_addr));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((byte)(sved_uchr));
            if ((ust_fond == null)) {
                throw new global::System.ArgumentNullException("ust_fond");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ust_fond));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(kol_rab));
            if ((scheta == null)) {
                throw new global::System.ArgumentNullException("scheta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(scheta));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((byte)(sved_kontr));
            if ((profit == null)) {
                throw new global::System.ArgumentNullException("profit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(profit));
            }
            if ((history == null)) {
                throw new global::System.ArgumentNullException("history");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(history));
            }
            if ((audit_org == null)) {
                throw new global::System.ArgumentNullException("audit_org");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(audit_org));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((byte)(sved_fil));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((byte)(sved_infl));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((byte)(risk_itog));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((byte)(risk_client));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((byte)(risk_oper));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((byte)(risk_geo));
            if ((h_risk_exp == null)) {
                throw new global::System.ArgumentNullException("h_risk_exp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(h_risk_exp));
            }
            if ((decision == null)) {
                throw new global::System.ArgumentNullException("decision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(decision));
            }
            if ((results == null)) {
                throw new global::System.ArgumentNullException("results");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(results));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((byte)(category));
            if ((prochie == null)) {
                throw new global::System.ArgumentNullException("prochie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(prochie));
            }
            if ((red_user == null)) {
                throw new global::System.ArgumentNullException("red_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(red_user));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(dt_set));
            if ((login == null)) {
                throw new global::System.ArgumentNullException("login");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(login));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_id));
            if ((Original_unp == null)) {
                throw new global::System.ArgumentNullException("Original_unp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_unp));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_name));
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((byte)(Original_main));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_kod_fil));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((byte)(Original_rezident));
            if ((Original_reg_num == null)) {
                throw new global::System.ArgumentNullException("Original_reg_num");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_reg_num));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Original_reg_dat));
            if ((Original_state == null)) {
                throw new global::System.ArgumentNullException("Original_state");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_state));
            }
            if ((Original_region == null)) {
                throw new global::System.ArgumentNullException("Original_region");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_region));
            }
            if ((Original_city == null)) {
                throw new global::System.ArgumentNullException("Original_city");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_city));
            }
            if ((Original_street == null)) {
                throw new global::System.ArgumentNullException("Original_street");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_street));
            }
            if ((Original_build == null)) {
                throw new global::System.ArgumentNullException("Original_build");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_build));
            }
            if ((Original_office == null)) {
                throw new global::System.ArgumentNullException("Original_office");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_office));
            }
            if ((Original_tel == null)) {
                throw new global::System.ArgumentNullException("Original_tel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_tel));
            }
            if ((Original_e_mail == null)) {
                throw new global::System.ArgumentNullException("Original_e_mail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_e_mail));
            }
            if ((Original_e_addr == null)) {
                throw new global::System.ArgumentNullException("Original_e_addr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_e_addr));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((byte)(Original_sved_uchr));
            if ((Original_ust_fond == null)) {
                throw new global::System.ArgumentNullException("Original_ust_fond");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_ust_fond));
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_kol_rab));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((byte)(Original_sved_kontr));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((byte)(Original_sved_fil));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((byte)(Original_sved_infl));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((byte)(Original_risk_itog));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((byte)(Original_risk_client));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((byte)(Original_risk_oper));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((byte)(Original_risk_geo));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((byte)(Original_category));
            if ((Original_red_user == null)) {
                throw new global::System.ArgumentNullException("Original_red_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_red_user));
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((System.DateTime)(Original_dt_set));
            if ((Original_login == null)) {
                throw new global::System.ArgumentNullException("Original_login");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_login));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class bd_org_tTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bd_org_tTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "bd_org_t";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("unp", "unp");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("main", "main");
            tableMapping.ColumnMappings.Add("kod_fil", "kod_fil");
            tableMapping.ColumnMappings.Add("rezident", "rezident");
            tableMapping.ColumnMappings.Add("reg_num", "reg_num");
            tableMapping.ColumnMappings.Add("reg_dat", "reg_dat");
            tableMapping.ColumnMappings.Add("reg_org", "reg_org");
            tableMapping.ColumnMappings.Add("state", "state");
            tableMapping.ColumnMappings.Add("region", "region");
            tableMapping.ColumnMappings.Add("city", "city");
            tableMapping.ColumnMappings.Add("street", "street");
            tableMapping.ColumnMappings.Add("build", "build");
            tableMapping.ColumnMappings.Add("office", "office");
            tableMapping.ColumnMappings.Add("tel", "tel");
            tableMapping.ColumnMappings.Add("e_mail", "e_mail");
            tableMapping.ColumnMappings.Add("e_addr", "e_addr");
            tableMapping.ColumnMappings.Add("sved_uchr", "sved_uchr");
            tableMapping.ColumnMappings.Add("ust_fond", "ust_fond");
            tableMapping.ColumnMappings.Add("kol_rab", "kol_rab");
            tableMapping.ColumnMappings.Add("scheta", "scheta");
            tableMapping.ColumnMappings.Add("sved_kontr", "sved_kontr");
            tableMapping.ColumnMappings.Add("profit", "profit");
            tableMapping.ColumnMappings.Add("history", "history");
            tableMapping.ColumnMappings.Add("audit_org", "audit_org");
            tableMapping.ColumnMappings.Add("sved_fil", "sved_fil");
            tableMapping.ColumnMappings.Add("sved_infl", "sved_infl");
            tableMapping.ColumnMappings.Add("risk_itog", "risk_itog");
            tableMapping.ColumnMappings.Add("risk_client", "risk_client");
            tableMapping.ColumnMappings.Add("risk_oper", "risk_oper");
            tableMapping.ColumnMappings.Add("risk_geo", "risk_geo");
            tableMapping.ColumnMappings.Add("h_risk_exp", "h_risk_exp");
            tableMapping.ColumnMappings.Add("decision", "decision");
            tableMapping.ColumnMappings.Add("results", "results");
            tableMapping.ColumnMappings.Add("category", "category");
            tableMapping.ColumnMappings.Add("prochie", "prochie");
            tableMapping.ColumnMappings.Add("red_user", "red_user");
            tableMapping.ColumnMappings.Add("dt_set", "dt_set");
            tableMapping.ColumnMappings.Add("login", "login");
            tableMapping.ColumnMappings.Add("file_name", "file_name");
            tableMapping.ColumnMappings.Add("sheet_name", "sheet_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `bd_org_t` WHERE ((`id` = @Original_id) AND (`unp` = @Original_unp) AND (`name` = @Original_name) AND (`main` = @Original_main) AND (`kod_fil` = @Original_kod_fil) AND (`rezident` = @Original_rezident) AND (`reg_num` = @Original_reg_num) AND (`reg_dat` = @Original_reg_dat) AND (`state` = @Original_state) AND (`region` = @Original_region) AND (`city` = @Original_city) AND (`street` = @Original_street) AND (`build` = @Original_build) AND (`office` = @Original_office) AND (`tel` = @Original_tel) AND (`e_mail` = @Original_e_mail) AND (`e_addr` = @Original_e_addr) AND (`sved_uchr` = @Original_sved_uchr) AND (`ust_fond` = @Original_ust_fond) AND (`kol_rab` = @Original_kol_rab) AND (`sved_kontr` = @Original_sved_kontr) AND (`sved_fil` = @Original_sved_fil) AND (`sved_infl` = @Original_sved_infl) AND (`risk_itog` = @Original_risk_itog) AND (`risk_client` = @Original_risk_client) AND (`risk_oper` = @Original_risk_oper) AND (`risk_geo` = @Original_risk_geo) AND (`category` = @Original_category) AND (`red_user` = @Original_red_user) AND (`dt_set` = @Original_dt_set) AND (`login` = @Original_login) AND (`file_name` = @Original_file_name) AND (`sheet_name` = @Original_sheet_name))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_main";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "main";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_region";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "region";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_city";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "city";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_street";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "street";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_build";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "build";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_office";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "office";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_uchr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_uchr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ust_fond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ust_fond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kol_rab";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kol_rab";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_kontr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_kontr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_fil";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_file_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "file_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sheet_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sheet_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `bd_org_t` (`unp`, `name`, `main`, `kod_fil`, `rezident`, `reg_num`, `reg_dat`, `reg_org`, `state`, `region`, `city`, `street`, `build`, `office`, `tel`, `e_mail`, `e_addr`, `sved_uchr`, `ust_fond`, `kol_rab`, `scheta`, `sved_kontr`, `profit`, `history`, `audit_org`, `sved_fil`, `sved_infl`, `risk_itog`, `risk_client`, `risk_oper`, `risk_geo`, `h_risk_exp`, `decision`, `results`, `category`, `prochie`, `red_user`, `dt_set`, `login`, `file_name`, `sheet_name`) VALUES (@unp, @name, @main, @kod_fil, @rezident, @reg_num, @reg_dat, @reg_org, @state, @region, @city, @street, @build, @office, @tel, @e_mail, @e_addr, @sved_uchr, @ust_fond, @kol_rab, @scheta, @sved_kontr, @profit, @history, @audit_org, @sved_fil, @sved_infl, @risk_itog, @risk_client, @risk_oper, @risk_geo, @h_risk_exp, @decision, @results, @category, @prochie, @red_user, @dt_set, @login, @file_name, @sheet_name)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@main";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "main";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@region";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "region";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@city";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "city";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@street";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "street";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@build";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "build";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@office";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "office";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_uchr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_uchr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ust_fond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ust_fond";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kol_rab";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kol_rab";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@scheta";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "scheta";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_kontr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_kontr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@profit";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "profit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@history";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "history";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@audit_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "audit_org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_fil";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_fil";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@h_risk_exp";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "h_risk_exp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@decision";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decision";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@results";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "results";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prochie";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prochie";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@file_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "file_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sheet_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sheet_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `bd_org_t` SET `unp` = @unp, `name` = @name, `main` = @main, `kod_fil` = @" +
                "kod_fil, `rezident` = @rezident, `reg_num` = @reg_num, `reg_dat` = @reg_dat, `re" +
                "g_org` = @reg_org, `state` = @state, `region` = @region, `city` = @city, `street" +
                "` = @street, `build` = @build, `office` = @office, `tel` = @tel, `e_mail` = @e_m" +
                "ail, `e_addr` = @e_addr, `sved_uchr` = @sved_uchr, `ust_fond` = @ust_fond, `kol_" +
                "rab` = @kol_rab, `scheta` = @scheta, `sved_kontr` = @sved_kontr, `profit` = @pro" +
                "fit, `history` = @history, `audit_org` = @audit_org, `sved_fil` = @sved_fil, `sv" +
                "ed_infl` = @sved_infl, `risk_itog` = @risk_itog, `risk_client` = @risk_client, `" +
                "risk_oper` = @risk_oper, `risk_geo` = @risk_geo, `h_risk_exp` = @h_risk_exp, `de" +
                "cision` = @decision, `results` = @results, `category` = @category, `prochie` = @" +
                "prochie, `red_user` = @red_user, `dt_set` = @dt_set, `login` = @login, `file_nam" +
                "e` = @file_name, `sheet_name` = @sheet_name WHERE ((`id` = @Original_id) AND (`u" +
                "np` = @Original_unp) AND (`name` = @Original_name) AND (`main` = @Original_main)" +
                " AND (`kod_fil` = @Original_kod_fil) AND (`rezident` = @Original_rezident) AND (" +
                "`reg_num` = @Original_reg_num) AND (`reg_dat` = @Original_reg_dat) AND (`state` " +
                "= @Original_state) AND (`region` = @Original_region) AND (`city` = @Original_cit" +
                "y) AND (`street` = @Original_street) AND (`build` = @Original_build) AND (`offic" +
                "e` = @Original_office) AND (`tel` = @Original_tel) AND (`e_mail` = @Original_e_m" +
                "ail) AND (`e_addr` = @Original_e_addr) AND (`sved_uchr` = @Original_sved_uchr) A" +
                "ND (`ust_fond` = @Original_ust_fond) AND (`kol_rab` = @Original_kol_rab) AND (`s" +
                "ved_kontr` = @Original_sved_kontr) AND (`sved_fil` = @Original_sved_fil) AND (`s" +
                "ved_infl` = @Original_sved_infl) AND (`risk_itog` = @Original_risk_itog) AND (`r" +
                "isk_client` = @Original_risk_client) AND (`risk_oper` = @Original_risk_oper) AND" +
                " (`risk_geo` = @Original_risk_geo) AND (`category` = @Original_category) AND (`r" +
                "ed_user` = @Original_red_user) AND (`dt_set` = @Original_dt_set) AND (`login` = " +
                "@Original_login) AND (`file_name` = @Original_file_name) AND (`sheet_name` = @Or" +
                "iginal_sheet_name))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@main";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "main";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@reg_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reg_org";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@region";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "region";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@city";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "city";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@street";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "street";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@build";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "build";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@office";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "office";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_uchr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_uchr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ust_fond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ust_fond";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kol_rab";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kol_rab";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@scheta";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "scheta";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_kontr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_kontr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@profit";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "profit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@history";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "history";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@audit_org";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "audit_org";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_fil";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_fil";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@h_risk_exp";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "h_risk_exp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@decision";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decision";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@results";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "results";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prochie";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prochie";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@file_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "file_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sheet_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sheet_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_unp";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_main";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "main";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kod_fil";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kod_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_rezident";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "rezident";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_num";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "reg_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_reg_dat";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "reg_dat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_state";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "state";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_region";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "region";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_city";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "city";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_street";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "street";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_build";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "build";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_office";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "office";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_mail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_mail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_e_addr";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "e_addr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_uchr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_uchr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ust_fond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ust_fond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_kol_rab";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kol_rab";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_kontr";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_kontr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_fil";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_fil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sved_infl";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "sved_infl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_itog";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_itog";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_client";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_oper";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_risk_geo";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "risk_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_category";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "category";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_red_user";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "red_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dt_set";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dt_set";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_file_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "file_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sheet_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sheet_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Excel2Ankets.Properties.Settings.Default.cbd_anketsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `id`, `unp`, `name`, `main`, `kod_fil`, `rezident`, `reg_num`, `reg_dat`, `reg_org`, `state`, `region`, `city`, `street`, `build`, `office`, `tel`, `e_mail`, `e_addr`, `sved_uchr`, `ust_fond`, `kol_rab`, `scheta`, `sved_kontr`, `profit`, `history`, `audit_org`, `sved_fil`, `sved_infl`, `risk_itog`, `risk_client`, `risk_oper`, `risk_geo`, `h_risk_exp`, `decision`, `results`, `category`, `prochie`, `red_user`, `dt_set`, `login`, `file_name`, `sheet_name` FROM `bd_org_t`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(cbd_anketsDataSet.bd_org_tDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual cbd_anketsDataSet.bd_org_tDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            cbd_anketsDataSet.bd_org_tDataTable dataTable = new cbd_anketsDataSet.bd_org_tDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(cbd_anketsDataSet.bd_org_tDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(cbd_anketsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "bd_org_t");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_unp, 
                    string Original_name, 
                    global::System.Nullable<byte> Original_main, 
                    global::System.Nullable<int> Original_kod_fil, 
                    global::System.Nullable<byte> Original_rezident, 
                    string Original_reg_num, 
                    global::System.Nullable<global::System.DateTime> Original_reg_dat, 
                    string Original_state, 
                    string Original_region, 
                    string Original_city, 
                    string Original_street, 
                    string Original_build, 
                    string Original_office, 
                    string Original_tel, 
                    string Original_e_mail, 
                    string Original_e_addr, 
                    global::System.Nullable<byte> Original_sved_uchr, 
                    string Original_ust_fond, 
                    global::System.Nullable<int> Original_kol_rab, 
                    global::System.Nullable<byte> Original_sved_kontr, 
                    global::System.Nullable<byte> Original_sved_fil, 
                    global::System.Nullable<byte> Original_sved_infl, 
                    global::System.Nullable<byte> Original_risk_itog, 
                    global::System.Nullable<byte> Original_risk_client, 
                    global::System.Nullable<byte> Original_risk_oper, 
                    global::System.Nullable<byte> Original_risk_geo, 
                    global::System.Nullable<byte> Original_category, 
                    string Original_red_user, 
                    global::System.Nullable<global::System.DateTime> Original_dt_set, 
                    string Original_login, 
                    string Original_file_name, 
                    string Original_sheet_name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_unp == null)) {
                throw new global::System.ArgumentNullException("Original_unp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_unp));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_name));
            }
            if ((Original_main.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_main.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_kod_fil.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_kod_fil.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_rezident.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((byte)(Original_rezident.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_reg_num == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_reg_num));
            }
            if ((Original_reg_dat.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_reg_dat.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_state == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_state));
            }
            if ((Original_region == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_region));
            }
            if ((Original_city == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_city));
            }
            if ((Original_street == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_street));
            }
            if ((Original_build == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_build));
            }
            if ((Original_office == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_office));
            }
            if ((Original_tel == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_tel));
            }
            if ((Original_e_mail == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_e_mail));
            }
            if ((Original_e_addr == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_e_addr));
            }
            if ((Original_sved_uchr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((byte)(Original_sved_uchr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_ust_fond == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_ust_fond));
            }
            if ((Original_kol_rab.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_kol_rab.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_sved_kontr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((byte)(Original_sved_kontr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_sved_fil.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((byte)(Original_sved_fil.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_sved_infl.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((byte)(Original_sved_infl.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_risk_itog.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((byte)(Original_risk_itog.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_risk_client.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((byte)(Original_risk_client.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_risk_oper.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((byte)(Original_risk_oper.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_risk_geo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((byte)(Original_risk_geo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_category.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((byte)(Original_category.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_red_user == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_red_user));
            }
            if ((Original_dt_set.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_dt_set.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_login == null)) {
                throw new global::System.ArgumentNullException("Original_login");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_login));
            }
            if ((Original_file_name == null)) {
                throw new global::System.ArgumentNullException("Original_file_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_file_name));
            }
            if ((Original_sheet_name == null)) {
                throw new global::System.ArgumentNullException("Original_sheet_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_sheet_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string unp, 
                    string name, 
                    global::System.Nullable<byte> main, 
                    global::System.Nullable<int> kod_fil, 
                    global::System.Nullable<byte> rezident, 
                    string reg_num, 
                    global::System.Nullable<global::System.DateTime> reg_dat, 
                    string reg_org, 
                    string state, 
                    string region, 
                    string city, 
                    string street, 
                    string build, 
                    string office, 
                    string tel, 
                    string e_mail, 
                    string e_addr, 
                    global::System.Nullable<byte> sved_uchr, 
                    string ust_fond, 
                    global::System.Nullable<int> kol_rab, 
                    string scheta, 
                    global::System.Nullable<byte> sved_kontr, 
                    string profit, 
                    string history, 
                    string audit_org, 
                    global::System.Nullable<byte> sved_fil, 
                    global::System.Nullable<byte> sved_infl, 
                    global::System.Nullable<byte> risk_itog, 
                    global::System.Nullable<byte> risk_client, 
                    global::System.Nullable<byte> risk_oper, 
                    global::System.Nullable<byte> risk_geo, 
                    string h_risk_exp, 
                    string decision, 
                    string results, 
                    global::System.Nullable<byte> category, 
                    string prochie, 
                    string red_user, 
                    global::System.Nullable<global::System.DateTime> dt_set, 
                    string login, 
                    string file_name, 
                    string sheet_name) {
            if ((unp == null)) {
                throw new global::System.ArgumentNullException("unp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(unp));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(name));
            }
            if ((main.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(main.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((kod_fil.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(kod_fil.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((rezident.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(rezident.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((reg_num == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(reg_num));
            }
            if ((reg_dat.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(reg_dat.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((reg_org == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(reg_org));
            }
            if ((state == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(state));
            }
            if ((region == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(region));
            }
            if ((city == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(city));
            }
            if ((street == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(street));
            }
            if ((build == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(build));
            }
            if ((office == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(office));
            }
            if ((tel == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(tel));
            }
            if ((e_mail == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(e_mail));
            }
            if ((e_addr == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(e_addr));
            }
            if ((sved_uchr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((byte)(sved_uchr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ust_fond == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ust_fond));
            }
            if ((kol_rab.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(kol_rab.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((scheta == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(scheta));
            }
            if ((sved_kontr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((byte)(sved_kontr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((profit == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(profit));
            }
            if ((history == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(history));
            }
            if ((audit_org == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(audit_org));
            }
            if ((sved_fil.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((byte)(sved_fil.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((sved_infl.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((byte)(sved_infl.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((risk_itog.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((byte)(risk_itog.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((risk_client.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((byte)(risk_client.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((risk_oper.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((byte)(risk_oper.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((risk_geo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((byte)(risk_geo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((h_risk_exp == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(h_risk_exp));
            }
            if ((decision == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(decision));
            }
            if ((results == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(results));
            }
            if ((category.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((byte)(category.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((prochie == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(prochie));
            }
            if ((red_user == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(red_user));
            }
            if ((dt_set.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(dt_set.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((login == null)) {
                throw new global::System.ArgumentNullException("login");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(login));
            }
            if ((file_name == null)) {
                throw new global::System.ArgumentNullException("file_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(file_name));
            }
            if ((sheet_name == null)) {
                throw new global::System.ArgumentNullException("sheet_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(sheet_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string unp, 
                    string name, 
                    global::System.Nullable<byte> main, 
                    global::System.Nullable<int> kod_fil, 
                    global::System.Nullable<byte> rezident, 
                    string reg_num, 
                    global::System.Nullable<global::System.DateTime> reg_dat, 
                    string reg_org, 
                    string state, 
                    string region, 
                    string city, 
                    string street, 
                    string build, 
                    string office, 
                    string tel, 
                    string e_mail, 
                    string e_addr, 
                    global::System.Nullable<byte> sved_uchr, 
                    string ust_fond, 
                    global::System.Nullable<int> kol_rab, 
                    string scheta, 
                    global::System.Nullable<byte> sved_kontr, 
                    string profit, 
                    string history, 
                    string audit_org, 
                    global::System.Nullable<byte> sved_fil, 
                    global::System.Nullable<byte> sved_infl, 
                    global::System.Nullable<byte> risk_itog, 
                    global::System.Nullable<byte> risk_client, 
                    global::System.Nullable<byte> risk_oper, 
                    global::System.Nullable<byte> risk_geo, 
                    string h_risk_exp, 
                    string decision, 
                    string results, 
                    global::System.Nullable<byte> category, 
                    string prochie, 
                    string red_user, 
                    global::System.Nullable<global::System.DateTime> dt_set, 
                    string login, 
                    string file_name, 
                    string sheet_name, 
                    int Original_id, 
                    string Original_unp, 
                    string Original_name, 
                    global::System.Nullable<byte> Original_main, 
                    global::System.Nullable<int> Original_kod_fil, 
                    global::System.Nullable<byte> Original_rezident, 
                    string Original_reg_num, 
                    global::System.Nullable<global::System.DateTime> Original_reg_dat, 
                    string Original_state, 
                    string Original_region, 
                    string Original_city, 
                    string Original_street, 
                    string Original_build, 
                    string Original_office, 
                    string Original_tel, 
                    string Original_e_mail, 
                    string Original_e_addr, 
                    global::System.Nullable<byte> Original_sved_uchr, 
                    string Original_ust_fond, 
                    global::System.Nullable<int> Original_kol_rab, 
                    global::System.Nullable<byte> Original_sved_kontr, 
                    global::System.Nullable<byte> Original_sved_fil, 
                    global::System.Nullable<byte> Original_sved_infl, 
                    global::System.Nullable<byte> Original_risk_itog, 
                    global::System.Nullable<byte> Original_risk_client, 
                    global::System.Nullable<byte> Original_risk_oper, 
                    global::System.Nullable<byte> Original_risk_geo, 
                    global::System.Nullable<byte> Original_category, 
                    string Original_red_user, 
                    global::System.Nullable<global::System.DateTime> Original_dt_set, 
                    string Original_login, 
                    string Original_file_name, 
                    string Original_sheet_name) {
            if ((unp == null)) {
                throw new global::System.ArgumentNullException("unp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(unp));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(name));
            }
            if ((main.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(main.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((kod_fil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(kod_fil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((rezident.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(rezident.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((reg_num == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(reg_num));
            }
            if ((reg_dat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(reg_dat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((reg_org == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(reg_org));
            }
            if ((state == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(state));
            }
            if ((region == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(region));
            }
            if ((city == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(city));
            }
            if ((street == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(street));
            }
            if ((build == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(build));
            }
            if ((office == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(office));
            }
            if ((tel == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(tel));
            }
            if ((e_mail == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(e_mail));
            }
            if ((e_addr == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(e_addr));
            }
            if ((sved_uchr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((byte)(sved_uchr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ust_fond == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ust_fond));
            }
            if ((kol_rab.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(kol_rab.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((scheta == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(scheta));
            }
            if ((sved_kontr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((byte)(sved_kontr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((profit == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(profit));
            }
            if ((history == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(history));
            }
            if ((audit_org == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(audit_org));
            }
            if ((sved_fil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((byte)(sved_fil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((sved_infl.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((byte)(sved_infl.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((risk_itog.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((byte)(risk_itog.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((risk_client.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((byte)(risk_client.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((risk_oper.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((byte)(risk_oper.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((risk_geo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((byte)(risk_geo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((h_risk_exp == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(h_risk_exp));
            }
            if ((decision == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(decision));
            }
            if ((results == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(results));
            }
            if ((category.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((byte)(category.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((prochie == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(prochie));
            }
            if ((red_user == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(red_user));
            }
            if ((dt_set.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(dt_set.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((login == null)) {
                throw new global::System.ArgumentNullException("login");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(login));
            }
            if ((file_name == null)) {
                throw new global::System.ArgumentNullException("file_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(file_name));
            }
            if ((sheet_name == null)) {
                throw new global::System.ArgumentNullException("sheet_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(sheet_name));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_id));
            if ((Original_unp == null)) {
                throw new global::System.ArgumentNullException("Original_unp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_unp));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_name));
            }
            if ((Original_main.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((byte)(Original_main.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_kod_fil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_kod_fil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_rezident.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((byte)(Original_rezident.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_reg_num == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_reg_num));
            }
            if ((Original_reg_dat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((System.DateTime)(Original_reg_dat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_state == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_state));
            }
            if ((Original_region == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_region));
            }
            if ((Original_city == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_city));
            }
            if ((Original_street == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_street));
            }
            if ((Original_build == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_build));
            }
            if ((Original_office == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_office));
            }
            if ((Original_tel == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_tel));
            }
            if ((Original_e_mail == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_e_mail));
            }
            if ((Original_e_addr == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_e_addr));
            }
            if ((Original_sved_uchr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((byte)(Original_sved_uchr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_ust_fond == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_ust_fond));
            }
            if ((Original_kol_rab.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_kol_rab.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_sved_kontr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((byte)(Original_sved_kontr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_sved_fil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((byte)(Original_sved_fil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_sved_infl.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((byte)(Original_sved_infl.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_risk_itog.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((byte)(Original_risk_itog.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_risk_client.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((byte)(Original_risk_client.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_risk_oper.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((byte)(Original_risk_oper.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_risk_geo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((byte)(Original_risk_geo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_category.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((byte)(Original_category.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_red_user == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_red_user));
            }
            if ((Original_dt_set.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((System.DateTime)(Original_dt_set.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_login == null)) {
                throw new global::System.ArgumentNullException("Original_login");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_login));
            }
            if ((Original_file_name == null)) {
                throw new global::System.ArgumentNullException("Original_file_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_file_name));
            }
            if ((Original_sheet_name == null)) {
                throw new global::System.ArgumentNullException("Original_sheet_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_sheet_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[4];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[0])).Connection = new global::MySql.Data.MySqlClient.MySqlConnection(global::Excel2Ankets.Properties.Settings.Default.cbd_anketsConnectionString);
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[0])).CommandText = "SELECT        COUNT(*) AS Expr1\r\nFROM            bd_org\r\nWHERE        (unp LIKE @" +
                "Param1)";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Param1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[0])).Parameters.Add(param);
            this._commandCollection[1] = new global::MySql.Data.MySqlClient.MySqlCommand();
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[1])).Connection = new global::MySql.Data.MySqlClient.MySqlConnection(global::Excel2Ankets.Properties.Settings.Default.cbd_anketsConnectionString);
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[1])).CommandText = "SELECT        COUNT(*) AS Expr1\r\nFROM            bd_org_t\r\nWHERE        (unp LIKE" +
                " @Param1)";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[1])).CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Param1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[1])).Parameters.Add(param);
            this._commandCollection[2] = new global::MySql.Data.MySqlClient.MySqlCommand();
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[2])).Connection = new global::MySql.Data.MySqlClient.MySqlConnection(global::Excel2Ankets.Properties.Settings.Default.cbd_anketsConnectionString);
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[2])).CommandText = "SELECT        COUNT(*) AS Expr1\r\nFROM            bd_ip\r\nWHERE        (unp LIKE @P" +
                "aram1)";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[2])).CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Param1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[2])).Parameters.Add(param);
            this._commandCollection[3] = new global::MySql.Data.MySqlClient.MySqlCommand();
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[3])).Connection = new global::MySql.Data.MySqlClient.MySqlConnection(global::Excel2Ankets.Properties.Settings.Default.cbd_anketsConnectionString);
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[3])).CommandText = "SELECT        COUNT(*) AS Expr1\r\nFROM            bd_ip_t\r\nWHERE        (unp LIKE " +
                "@Param1)";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[3])).CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Param1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "unp";
            ((global::MySql.Data.MySqlClient.MySqlCommand)(this._commandCollection[3])).Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object count_unp_bd_org(string Param1) {
            global::MySql.Data.MySqlClient.MySqlCommand command = ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[0]));
            if ((Param1 == null)) {
                throw new global::System.ArgumentNullException("Param1");
            }
            else {
                command.Parameters[0].Value = ((string)(Param1));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object count_unp_bd_org_t(string Param1) {
            global::MySql.Data.MySqlClient.MySqlCommand command = ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[1]));
            if ((Param1 == null)) {
                throw new global::System.ArgumentNullException("Param1");
            }
            else {
                command.Parameters[0].Value = ((string)(Param1));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<long> count_unp_bd_ip(string Param1) {
            global::MySql.Data.MySqlClient.MySqlCommand command = ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[2]));
            if ((Param1 == null)) {
                throw new global::System.ArgumentNullException("Param1");
            }
            else {
                command.Parameters[0].Value = ((string)(Param1));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<long>();
            }
            else {
                return new global::System.Nullable<long>(((long)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<long> count_unp_bd_ip_t(string Param1) {
            global::MySql.Data.MySqlClient.MySqlCommand command = ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[3]));
            if ((Param1 == null)) {
                throw new global::System.ArgumentNullException("Param1");
            }
            else {
                command.Parameters[0].Value = ((string)(Param1));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<long>();
            }
            else {
                return new global::System.Nullable<long>(((long)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bd_ipTableAdapter _bd_ipTableAdapter;
        
        private bd_ip_tTableAdapter _bd_ip_tTableAdapter;
        
        private bd_orgTableAdapter _bd_orgTableAdapter;
        
        private bd_org_tTableAdapter _bd_org_tTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public bd_ipTableAdapter bd_ipTableAdapter {
            get {
                return this._bd_ipTableAdapter;
            }
            set {
                this._bd_ipTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public bd_ip_tTableAdapter bd_ip_tTableAdapter {
            get {
                return this._bd_ip_tTableAdapter;
            }
            set {
                this._bd_ip_tTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public bd_orgTableAdapter bd_orgTableAdapter {
            get {
                return this._bd_orgTableAdapter;
            }
            set {
                this._bd_orgTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public bd_org_tTableAdapter bd_org_tTableAdapter {
            get {
                return this._bd_org_tTableAdapter;
            }
            set {
                this._bd_org_tTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._bd_ipTableAdapter != null) 
                            && (this._bd_ipTableAdapter.Connection != null))) {
                    return this._bd_ipTableAdapter.Connection;
                }
                if (((this._bd_ip_tTableAdapter != null) 
                            && (this._bd_ip_tTableAdapter.Connection != null))) {
                    return this._bd_ip_tTableAdapter.Connection;
                }
                if (((this._bd_orgTableAdapter != null) 
                            && (this._bd_orgTableAdapter.Connection != null))) {
                    return this._bd_orgTableAdapter.Connection;
                }
                if (((this._bd_org_tTableAdapter != null) 
                            && (this._bd_org_tTableAdapter.Connection != null))) {
                    return this._bd_org_tTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._bd_ipTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bd_ip_tTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bd_orgTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bd_org_tTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(cbd_anketsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bd_orgTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.bd_org.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bd_orgTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bd_org_tTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.bd_org_t.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bd_org_tTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bd_ipTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.bd_ip.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bd_ipTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bd_ip_tTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.bd_ip_t.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bd_ip_tTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(cbd_anketsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bd_orgTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.bd_org.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bd_orgTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bd_org_tTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.bd_org_t.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bd_org_tTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bd_ipTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.bd_ip.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bd_ipTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bd_ip_tTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.bd_ip_t.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bd_ip_tTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(cbd_anketsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._bd_ip_tTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.bd_ip_t.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bd_ip_tTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bd_ipTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.bd_ip.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bd_ipTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bd_org_tTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.bd_org_t.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bd_org_tTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bd_orgTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.bd_org.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bd_orgTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(cbd_anketsDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._bd_ipTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bd_ipTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bd_ip_tTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bd_ip_tTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bd_orgTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bd_orgTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bd_org_tTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bd_org_tTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._bd_ipTableAdapter != null)) {
                    revertConnections.Add(this._bd_ipTableAdapter, this._bd_ipTableAdapter.Connection);
                    this._bd_ipTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._bd_ipTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._bd_ipTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bd_ipTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bd_ipTableAdapter.Adapter);
                    }
                }
                if ((this._bd_ip_tTableAdapter != null)) {
                    revertConnections.Add(this._bd_ip_tTableAdapter, this._bd_ip_tTableAdapter.Connection);
                    this._bd_ip_tTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._bd_ip_tTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._bd_ip_tTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bd_ip_tTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bd_ip_tTableAdapter.Adapter);
                    }
                }
                if ((this._bd_orgTableAdapter != null)) {
                    revertConnections.Add(this._bd_orgTableAdapter, this._bd_orgTableAdapter.Connection);
                    this._bd_orgTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._bd_orgTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._bd_orgTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bd_orgTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bd_orgTableAdapter.Adapter);
                    }
                }
                if ((this._bd_org_tTableAdapter != null)) {
                    revertConnections.Add(this._bd_org_tTableAdapter, this._bd_org_tTableAdapter.Connection);
                    this._bd_org_tTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._bd_org_tTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._bd_org_tTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bd_org_tTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bd_org_tTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._bd_ipTableAdapter != null)) {
                    this._bd_ipTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._bd_ipTableAdapter]));
                    this._bd_ipTableAdapter.Transaction = null;
                }
                if ((this._bd_ip_tTableAdapter != null)) {
                    this._bd_ip_tTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._bd_ip_tTableAdapter]));
                    this._bd_ip_tTableAdapter.Transaction = null;
                }
                if ((this._bd_orgTableAdapter != null)) {
                    this._bd_orgTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._bd_orgTableAdapter]));
                    this._bd_orgTableAdapter.Transaction = null;
                }
                if ((this._bd_org_tTableAdapter != null)) {
                    this._bd_org_tTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._bd_org_tTableAdapter]));
                    this._bd_org_tTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591